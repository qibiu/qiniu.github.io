<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>我是傻逼</title>
    <url>/2020/08/10/%E6%88%91%E6%98%AF%E5%82%BB%E9%80%BC/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>这条置顶一下，虽然是8月份写的，现在看也很有意义。</p>
]]></content>
  </entry>
  <entry>
    <title>得复习了</title>
    <url>/2020/09/12/%E5%BE%97%E5%A4%8D%E4%B9%A0%E4%BA%86/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>看了下记录，上次刷题还是6月份了，差不多都忘记了，单词也得背起来了。这次的事情给自己敲了个警钟，哈哈，果然还是在感情方面太稚嫩了，连小女生也比不过，不过自己在情绪控制上做的还不错，好在本来就是一个性格比较温柔的人，倒也不会很生气，也没有骂女生。</p>
<p>以后还是把重心放在工作上吧，然后感情方面还是找个喜欢自己的女生吧，虽然之前让她对我死心了，也不知道还能不能追回来，这次十一回去约出来见见吧，说不定还能挽回一下。</p>
<p><img src="/images/TXH.jpeg" alt="TXH"></p>
<p>经过这次我明白了以后要好好珍惜喜欢自己的人，因为自己喜欢的可能不算人。</p>
<p>然后以前对自己的约束，是不是可以放开了，之前也对自己说过，这次是最后一次喜欢人，比自己想象中最差的结果还要差呢，不愧是我。</p>
<p>记得之前写过一篇博客叫黑化，后来删了。那就黑化了吧，找个老司机带带，刚刚群里有人说我看不起喜欢玩的女生，之前可能有点吧。现在是一点都没有了，这种才是女菩萨，没有喜欢玩的女生，我们男生哪有女生玩呢，是吧。</p>
<p>以前的我实在是太傻了，活该25岁还是处男，还被21岁的妹妹们笑话。叫朋友带我去大保健吧，然后下个soul之类的软件，看能不能约几个喜欢玩的女菩萨。</p>
<p>终于还是活成了曾经的自己最讨厌的人啊，我以为我不会的，谁知道呢，以前哪会想到有今天，这就是生活的魅力了吧，哈哈。</p>
]]></content>
  </entry>
  <entry>
    <title>自闭</title>
    <url>/2020/09/10/%E8%87%AA%E9%97%AD/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script>]]></content>
  </entry>
  <entry>
    <title>酸了</title>
    <url>/2020/09/07/%E9%85%B8%E4%BA%86/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p><a href="http://news.maxjia.com/bbs/app/api/web/share?link_id=6099785" target="_blank" rel="noopener">http://news.maxjia.com/bbs/app/api/web/share?link_id=6099785</a></p>
<p>只有为别人写过这种东西的人才会理解，是真的很爱对方了。</p>
<p>羡慕啊。</p>
<p>好想遇见一个女版的自己，妈的，能遇见一个像我爱她一样爱我的人就好了。</p>
<hr>

<p>妈的，我要点举报。</p>
]]></content>
  </entry>
  <entry>
    <title>发布会搞快点</title>
    <url>/2020/09/06/%E5%8F%91%E5%B8%83%E4%BC%9A%E6%90%9E%E5%BF%AB%E7%82%B9/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>想买个Apple Watch</p>
]]></content>
      <tags>
        <tag>日常</tag>
        <tag>厉害阳</tag>
      </tags>
  </entry>
  <entry>
    <title>刘德华-练习</title>
    <url>/2020/09/02/%E5%88%98%E5%BE%B7%E5%8D%8E-%E7%BB%83%E4%B9%A0/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><blockquote class="blockquote-center">
            <i class="fa fa-quote-left"></i>
            <p>我已开始练习，开始慢慢著急，著急这世界没有你<br>已经和眼泪说好不哭泣，但倒数计时的爱该怎么继续</p>
<p>──《练习》刘德华</p>

            <i class="fa fa-quote-right"></i>
          </blockquote>

<a id="more"></a>

<div class="note info">
            <p>如果留下多一秒钟，可以减少明天想你的痛<br>我会愿意放下所有，交换任何一丝丝可能的占有<br>幸福只剩一杯沙漏，眼睁睁看著一幕幕甜蜜<br>不会再有原本平凡无奇的拥有，到现在竟像是无助的奢求</p><p>我已开始练习，开始慢慢著急，著急这世界没有你<br>已经和眼泪说好不哭泣，但倒数计时的爱该怎么继续<br>我天天练习，天天都会熟悉，在没有你的城市里<br>试著删除每个两人世界里，那些曾经共同拥有的一切美好和回忆</p><p>幸福只剩一杯沙漏，眼睁睁看著一幕幕甜蜜<br>不会再有原本平凡无奇的拥有，到现在竟像是无助的奢求</p><p>我已开始练习，开始慢慢著急，著急这世界没有你<br>已经和眼泪说好不哭泣，但倒数计时的爱该怎么继续<br>我天天练习，天天都会熟悉，在没有你的城市里<br>试著删除每个两人世界里，那些曾经共同拥有的一切美好和回忆</p><p>爱是一万公顷的森林，迷了路的却是我和你<br>不是说好一起闯出去，怎能剩我一人回去 回去</p><p>我已开始练习，开始慢慢著急，著急这世界没有你<br>已经和眼泪说好不哭泣，但倒数计时的爱该怎么继续<br>我天天练习，天天都会熟悉，在没有你的城市里<br>试著删除每个两人世界里，那些曾经共同拥有的一切美好和回忆<br>那些曾经共同拥有的一切美好和回忆</p>
          </div>


    <div id="aplayer-WlZsArCU" class="aplayer aplayer-tag-marker meting-tag-marker" data-id="554191989" data-server="netease" data-type="song" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme="#FF4081"></div>]]></content>
      <tags>
        <tag>听歌</tag>
      </tags>
  </entry>
  <entry>
    <title>还是做好自己吧</title>
    <url>/2020/08/14/%E8%BF%98%E6%98%AF%E5%81%9A%E5%A5%BD%E8%87%AA%E5%B7%B1%E5%90%A7/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>平常心，平常心。</p>
]]></content>
      <tags>
        <tag>日常</tag>
      </tags>
  </entry>
  <entry>
    <title>感觉要黑化了</title>
    <url>/2020/08/12/%E6%84%9F%E8%A7%89%E8%A6%81%E9%BB%91%E5%8C%96%E4%BA%86/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>三个月前的自己</p>
<p>《<a href="/2020/05/13/想跑步了/" title="想跑步了">想跑步了</a>》</p>
<p><del>真的是累了，之后就好好赚钱，谈什么感情。</del></p>
<p><del>加油，阿彪，不要轻言放弃。</del></p>
<p>一个月前的自己真傻，还在摇摆不定，现在好了，意志坚定。</p>
]]></content>
      <tags>
        <tag>黑化</tag>
      </tags>
  </entry>
  <entry>
    <title>出门散心</title>
    <url>/2020/06/24/%E5%87%BA%E9%97%A8%E6%95%A3%E5%BF%83/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>朋友约我去深圳，之后可能断更一两天。</p>
]]></content>
      <tags>
        <tag>日常</tag>
        <tag>不开心</tag>
      </tags>
  </entry>
  <entry>
    <title>LeetCode-235</title>
    <url>/2020/06/04/LeetCode-235/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>Level: Easy</p>
<p>Given a binary search tree (BST), find the lowest common ancestor (LCA) of two given nodes in the BST.</p>
<p>According to the <a href="https://en.wikipedia.org/wiki/Lowest_common_ancestor" target="_blank" rel="noopener">definition of LCA on Wikipedia</a>: “The lowest common ancestor is defined between two nodes p and q as the lowest node in T that has both p and q as descendants (where we allow <strong>a node to be a descendant of itself</strong>).”</p>
<p>Given binary search tree: root = [6,2,8,0,4,7,9,null,null,3,5]</p>
<p><img src="https://assets.leetcode.com/uploads/2018/12/14/binarysearchtree_improved.png" alt="img"></p>
<p><strong>Example 1:</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Input: root = [6,2,8,0,4,7,9,null,null,3,5], p = 2, q = 8</span><br><span class="line">Output: 6</span><br><span class="line">Explanation: The LCA of nodes 2 and 8 is 6.</span><br></pre></td></tr></table></figure>

<p><strong>Example 2:</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Input: root = [6,2,8,0,4,7,9,null,null,3,5], p = 2, q = 4</span><br><span class="line">Output: 2</span><br><span class="line">Explanation: The LCA of nodes 2 and 4 is 2, since a node can be a descendant of itself according to the LCA definition.</span><br></pre></td></tr></table></figure>



<p><strong>Note:</strong></p>
<ul>
<li>All of the nodes’ values will be unique.</li>
<li>p and q are different and both values will exist in the BST.</li>
</ul>
<a id="more"></a>

<p>思路:</p>
<p>​        这题也没见过，虽然难度是Easy，感觉得学会记住。</p>
<p>代码:</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Definition for a binary tree node.</span></span><br><span class="line"><span class="comment"> * public class TreeNode &#123;</span></span><br><span class="line"><span class="comment"> *     int val;</span></span><br><span class="line"><span class="comment"> *     TreeNode left;</span></span><br><span class="line"><span class="comment"> *     TreeNode right;</span></span><br><span class="line"><span class="comment"> *     TreeNode(int x) &#123; val = x; &#125;</span></span><br><span class="line"><span class="comment"> * &#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> TreeNode <span class="title">lowestCommonAncestor</span><span class="params">(TreeNode root, TreeNode p, TreeNode q)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(root.val &gt; p.val &amp;&amp; root.val &gt; q.val)&#123;</span><br><span class="line">            <span class="keyword">return</span> lowestCommonAncestor(root.left, p, q);</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(root.val &lt; p.val &amp;&amp; root.val &lt; q.val)&#123;</span><br><span class="line">            <span class="keyword">return</span> lowestCommonAncestor(root.right, p, q);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> root;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">链接：https:<span class="comment">//leetcode.com/problems/lowest-common-ancestor-of-a-binary-search-tree/discuss/64954/My-Java-Solution</span></span><br><span class="line">作者：jingzhetian</span><br></pre></td></tr></table></figure>

]]></content>
      <tags>
        <tag>LeetCode</tag>
        <tag>Tree</tag>
        <tag>Easy</tag>
      </tags>
  </entry>
  <entry>
    <title>LeetCode-230</title>
    <url>/2020/05/29/LeetCode-230/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>Level: Medium</p>
<p>Given a binary search tree, write a function <code>kthSmallest</code> to find the <strong>k</strong>th smallest element in it.</p>
<p><strong>Example 1:</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Input: root = [3,1,4,null,2], k = 1</span><br><span class="line">   3</span><br><span class="line">  / \</span><br><span class="line"> 1   4</span><br><span class="line">  \</span><br><span class="line">   2</span><br><span class="line">Output: 1</span><br></pre></td></tr></table></figure>

<p><strong>Example 2:</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Input: root = [5,3,6,2,4,null,null,1], k = 3</span><br><span class="line">       5</span><br><span class="line">      / \</span><br><span class="line">     3   6</span><br><span class="line">    / \</span><br><span class="line">   2   4</span><br><span class="line">  /</span><br><span class="line"> 1</span><br><span class="line">Output: 3</span><br></pre></td></tr></table></figure>

<p><strong>Follow up:</strong><br>What if the BST is modified (insert/delete operations) often and you need to find the kth smallest frequently? How would you optimize the kthSmallest routine?</p>
<p><strong>Constraints:</strong></p>
<ul>
<li>The number of elements of the BST is between <code>1</code> to <code>10^4</code>.</li>
<li>You may assume <code>k</code> is always valid, <code>1 ≤ k ≤ BST&#39;s total elements</code>.</li>
</ul>
<a id="more"></a>

<p>思路:</p>
<p>​        不明白题意，是求深度吗。</p>
<p>代码:</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Definition for a binary tree node.</span></span><br><span class="line"><span class="comment"> * public class TreeNode &#123;</span></span><br><span class="line"><span class="comment"> *     int val;</span></span><br><span class="line"><span class="comment"> *     TreeNode left;</span></span><br><span class="line"><span class="comment"> *     TreeNode right;</span></span><br><span class="line"><span class="comment"> *     TreeNode() &#123;&#125;</span></span><br><span class="line"><span class="comment"> *     TreeNode(int val) &#123; this.val = val; &#125;</span></span><br><span class="line"><span class="comment"> *     TreeNode(int val, TreeNode left, TreeNode right) &#123;</span></span><br><span class="line"><span class="comment"> *         this.val = val;</span></span><br><span class="line"><span class="comment"> *         this.left = left;</span></span><br><span class="line"><span class="comment"> *         this.right = right;</span></span><br><span class="line"><span class="comment"> *     &#125;</span></span><br><span class="line"><span class="comment"> * &#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">kthSmallest</span><span class="params">(TreeNode root, <span class="keyword">int</span> k)</span> </span>&#123;</span><br><span class="line">    Stack&lt;TreeNode&gt; stack = <span class="keyword">new</span> Stack&lt;TreeNode&gt;();</span><br><span class="line">    TreeNode p = root;</span><br><span class="line">    <span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line">     </span><br><span class="line">    <span class="keyword">while</span>(!stack.isEmpty() || p != <span class="keyword">null</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span>(p != <span class="keyword">null</span>) &#123;</span><br><span class="line">            stack.push(p);    <span class="comment">// Just like recursion</span></span><br><span class="line">            p = p.left;    </span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            TreeNode node = stack.pop();</span><br><span class="line">            <span class="keyword">if</span>(++count == k) <span class="keyword">return</span> node.val; </span><br><span class="line">            p = node.right;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> Integer.MIN_VALUE;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">链接：https:<span class="comment">//leetcode.com/problems/kth-smallest-element-in-a-bst/discuss/63660/3-ways-implemented-in-JAVA-(Python)%3A-Binary-Search-in-order-iterative-and-recursive</span></span><br><span class="line">作者：yavinci</span><br></pre></td></tr></table></figure>

<p>方法二：</p>
<p>我怎么没想到，这种方法比较符合我的思路。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> ArrayList&lt;Integer&gt; <span class="title">inorder</span><span class="params">(TreeNode root, ArrayList&lt;Integer&gt; arr)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (root == <span class="keyword">null</span>) <span class="keyword">return</span> arr;</span><br><span class="line">    inorder(root.left, arr);</span><br><span class="line">    arr.add(root.val);</span><br><span class="line">    inorder(root.right, arr);</span><br><span class="line">    <span class="keyword">return</span> arr;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">kthSmallest</span><span class="params">(TreeNode root, <span class="keyword">int</span> k)</span> </span>&#123;</span><br><span class="line">    ArrayList&lt;Integer&gt; nums = inorder(root, <span class="keyword">new</span> ArrayList&lt;Integer&gt;());</span><br><span class="line">    <span class="keyword">return</span> nums.get(k - <span class="number">1</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">作者：LeetCode</span><br><span class="line">链接：https:<span class="comment">//leetcode-cn.com/problems/kth-smallest-element-in-a-bst/solution/er-cha-sou-suo-shu-zhong-di-kxiao-de-yuan-su-by-le/</span></span><br><span class="line">来源：力扣（LeetCode）</span><br><span class="line">著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</span><br></pre></td></tr></table></figure>

]]></content>
      <tags>
        <tag>LeetCode</tag>
        <tag>Tree</tag>
        <tag>Medium</tag>
      </tags>
  </entry>
  <entry>
    <title>LeetCode-226</title>
    <url>/2020/05/28/LeetCode-226/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>Level: Easy</p>
<p>Invert a binary tree.</p>
<p><strong>Example:</strong></p>
<p>Input:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">     4</span><br><span class="line">   /   \</span><br><span class="line">  2     7</span><br><span class="line"> / \   / \</span><br><span class="line">1   3 6   9</span><br></pre></td></tr></table></figure>

<p>Output:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">     4</span><br><span class="line">   /   \</span><br><span class="line">  7     2</span><br><span class="line"> / \   / \</span><br><span class="line">9   6 3   1</span><br></pre></td></tr></table></figure>

<p><strong>Trivia:</strong><br>This problem was inspired by <a href="https://twitter.com/mxcl/status/608682016205344768" target="_blank" rel="noopener">this original tweet</a> by <a href="https://twitter.com/mxcl" target="_blank" rel="noopener">Max Howell</a>:</p>
<blockquote>
<p>Google: 90% of our engineers use the software you wrote (Homebrew), but you can’t invert a binary tree on a whiteboard so fuck off.</p>
</blockquote>
<a id="more"></a>

<p>思路:<br>        难住了Homebrew作者的题目😂</p>
<p>代码:</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Definition for a binary tree node.</span></span><br><span class="line"><span class="comment"> * public class TreeNode &#123;</span></span><br><span class="line"><span class="comment"> *     int val;</span></span><br><span class="line"><span class="comment"> *     TreeNode left;</span></span><br><span class="line"><span class="comment"> *     TreeNode right;</span></span><br><span class="line"><span class="comment"> *     TreeNode() &#123;&#125;</span></span><br><span class="line"><span class="comment"> *     TreeNode(int val) &#123; this.val = val; &#125;</span></span><br><span class="line"><span class="comment"> *     TreeNode(int val, TreeNode left, TreeNode right) &#123;</span></span><br><span class="line"><span class="comment"> *         this.val = val;</span></span><br><span class="line"><span class="comment"> *         this.left = left;</span></span><br><span class="line"><span class="comment"> *         this.right = right;</span></span><br><span class="line"><span class="comment"> *     &#125;</span></span><br><span class="line"><span class="comment"> * &#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> TreeNode <span class="title">invertTree</span><span class="params">(TreeNode root)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (root == <span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> root;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        TreeNode temp = root.right;</span><br><span class="line">        root.right = invertTree(root.left);</span><br><span class="line">        root.left = invertTree(temp);</span><br><span class="line">        <span class="keyword">return</span> root;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <tags>
        <tag>LeetCode</tag>
        <tag>Tree</tag>
        <tag>Easy</tag>
      </tags>
  </entry>
  <entry>
    <title>LeetCode-222</title>
    <url>/2020/05/28/LeetCode-222/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>Level: Medium</p>
<p>Given a <strong>complete</strong> binary tree, count the number of nodes.</p>
<p><strong>Note:</strong></p>
<p><strong>Definition of a complete binary tree from <a href="http://en.wikipedia.org/wiki/Binary_tree#Types_of_binary_trees" target="_blank" rel="noopener">Wikipedia</a>:</strong><br>In a complete binary tree every level, except possibly the last, is completely filled, and all nodes in the last level are as far left as possible. It can have between 1 and 2h nodes inclusive at the last level h.</p>
<p><strong>Example:</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Input: </span><br><span class="line">    1</span><br><span class="line">   / \</span><br><span class="line">  2   3</span><br><span class="line"> / \  /</span><br><span class="line">4  5 6</span><br><span class="line"></span><br><span class="line">Output: 6</span><br></pre></td></tr></table></figure>

<a id="more"></a>

<p>思路:</p>
<p>​        个人感觉就是个简单的遍历，但是看大神有们的想法。。。好复杂的样子。</p>
<p>代码:</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Definition for a binary tree node.</span></span><br><span class="line"><span class="comment"> * public class TreeNode &#123;</span></span><br><span class="line"><span class="comment"> *     int val;</span></span><br><span class="line"><span class="comment"> *     TreeNode left;</span></span><br><span class="line"><span class="comment"> *     TreeNode right;</span></span><br><span class="line"><span class="comment"> *     TreeNode() &#123;&#125;</span></span><br><span class="line"><span class="comment"> *     TreeNode(int val) &#123; this.val = val; &#125;</span></span><br><span class="line"><span class="comment"> *     TreeNode(int val, TreeNode left, TreeNode right) &#123;</span></span><br><span class="line"><span class="comment"> *         this.val = val;</span></span><br><span class="line"><span class="comment"> *         this.left = left;</span></span><br><span class="line"><span class="comment"> *         this.right = right;</span></span><br><span class="line"><span class="comment"> *     &#125;</span></span><br><span class="line"><span class="comment"> * &#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">countNodes</span><span class="params">(TreeNode root)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (root == <span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        countNodes(root.left);</span><br><span class="line">        count ++;</span><br><span class="line">        countNodes(root.right);</span><br><span class="line">        <span class="keyword">return</span> count;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <tags>
        <tag>LeetCode</tag>
        <tag>Tree</tag>
        <tag>Medium</tag>
      </tags>
  </entry>
  <entry>
    <title>2020年-第22周周计划</title>
    <url>/2020/05/25/2020%E5%B9%B4-%E7%AC%AC22%E5%91%A8%E5%91%A8%E8%AE%A1%E5%88%92/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>求好运，就看明天拉</p>
<a id="more"></a>

<p>本周计划：</p>
<ol>
<li><p>继续背单词，话说新路线真香呀，所以说有得必有失。</p>
<ul>
<li><p>周一打卡</p>
<p>Studied ⁨107⁩ cards ⁨in ⁨11.57⁩ minutes⁩ today (⁨6.49⁩s/card)<br>Again count: 37 (65.42% correct)<br>Learn: 77, Review: 6, Relearn: 24, Filtered: 0<br>No mature cards were studied today.</p>
</li>
<li><p>周二打卡</p>
<p>Studied ⁨190⁩ cards ⁨in ⁨20.27⁩ minutes⁩ today (⁨6.4⁩s/card)<br>Again count: 80 (57.89% correct)<br>Learn: 133, Review: 44, Relearn: 13, Filtered: 0<br>No mature cards were studied today.</p>
</li>
<li><p>周三打卡</p>
<p>Studied ⁨246⁩ cards ⁨in ⁨27.58⁩ minutes⁩ today (⁨6.73⁩s/card)<br>Again count: 109 (55.69% correct)<br>Learn: 180, Review: 42, Relearn: 24, Filtered: 0<br>No mature cards were studied today.</p>
</li>
</ul>
</li>
<li><p>勇敢的踏出那一步吧</p>
</li>
</ol>
<p>本周随记：</p>
<p>周二：</p>
<p>对视对视</p>
]]></content>
  </entry>
  <entry>
    <title>第25个独自度过的520</title>
    <url>/2020/05/20/%E7%AC%AC25%E4%B8%AA%E7%8B%AC%E8%87%AA%E5%BA%A6%E8%BF%87%E7%9A%84520/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>HAPPY!</p>
]]></content>
  </entry>
  <entry>
    <title>LeetCode-199</title>
    <url>/2020/05/20/LeetCode-199/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>Level: Medium</p>
<p>Given a binary tree, imagine yourself standing on the <em>right</em> side of it, return the values of the nodes you can see ordered from top to bottom.</p>
<p><strong>Example:</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Input: [1,2,3,null,5,null,4]</span><br><span class="line">Output: [1, 3, 4]</span><br><span class="line">Explanation:</span><br><span class="line"></span><br><span class="line">   1            &lt;---</span><br><span class="line"> /   \</span><br><span class="line">2     3         &lt;---</span><br><span class="line"> \     \</span><br><span class="line">  5     4       &lt;---</span><br></pre></td></tr></table></figure>

<a id="more"></a>

<p>思路:</p>
<p>​        听起来好像很简单，但是</p>
]]></content>
      <tags>
        <tag>LeetCode</tag>
        <tag>Tree</tag>
        <tag>Medium</tag>
      </tags>
  </entry>
  <entry>
    <title>LeetCode-173</title>
    <url>/2020/05/20/LeetCode-173/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>Level: Medium</p>
<p>Implement an iterator over a binary search tree (BST). Your iterator will be initialized with the root node of a BST.</p>
<p>Calling <code>next()</code> will return the next smallest number in the BST.</p>
<p><strong>Example:</strong></p>
<p><strong><img src="https://assets.leetcode.com/uploads/2018/12/25/bst-tree.png" alt="img"></strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">BSTIterator iterator = new BSTIterator(root);</span><br><span class="line">iterator.next();    // return 3</span><br><span class="line">iterator.next();    // return 7</span><br><span class="line">iterator.hasNext(); // return true</span><br><span class="line">iterator.next();    // return 9</span><br><span class="line">iterator.hasNext(); // return true</span><br><span class="line">iterator.next();    // return 15</span><br><span class="line">iterator.hasNext(); // return true</span><br><span class="line">iterator.next();    // return 20</span><br><span class="line">iterator.hasNext(); // return false</span><br></pre></td></tr></table></figure>



<p><strong>Note:</strong></p>
<ul>
<li><code>next()</code> and <code>hasNext()</code> should run in average O(1) time and uses O(<em>h</em>) memory, where <em>h</em> is the height of the tree.</li>
<li>You may assume that <code>next()</code> call will always be valid, that is, there will be at least a next smallest number in the BST when <code>next()</code> is called.</li>
</ul>
<a id="more"></a>

<p>思路:<br>        好久没刷题了，没啥思路，甚至连题意都没理解。先Copy一题慢慢恢复状态。</p>
<p>代码:</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Definition for a binary tree node.</span></span><br><span class="line"><span class="comment"> * public class TreeNode &#123;</span></span><br><span class="line"><span class="comment"> *     int val;</span></span><br><span class="line"><span class="comment"> *     TreeNode left;</span></span><br><span class="line"><span class="comment"> *     TreeNode right;</span></span><br><span class="line"><span class="comment"> *     TreeNode() &#123;&#125;</span></span><br><span class="line"><span class="comment"> *     TreeNode(int val) &#123; this.val = val; &#125;</span></span><br><span class="line"><span class="comment"> *     TreeNode(int val, TreeNode left, TreeNode right) &#123;</span></span><br><span class="line"><span class="comment"> *         this.val = val;</span></span><br><span class="line"><span class="comment"> *         this.left = left;</span></span><br><span class="line"><span class="comment"> *         this.right = right;</span></span><br><span class="line"><span class="comment"> *     &#125;</span></span><br><span class="line"><span class="comment"> * &#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">BSTIterator</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Stack&lt;TreeNode&gt; stack;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">BSTIterator</span><span class="params">(TreeNode root)</span> </span>&#123;</span><br><span class="line">        stack = <span class="keyword">new</span> Stack&lt;&gt;();</span><br><span class="line">        TreeNode cur = root;</span><br><span class="line">        <span class="keyword">while</span> (cur != <span class="keyword">null</span>)&#123;</span><br><span class="line">            stack.push(cur);</span><br><span class="line">            cur = cur.left;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    <span class="comment">/** <span class="doctag">@return</span> the next smallest number */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">next</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        TreeNode node = stack.pop();</span><br><span class="line">        TreeNode cur = node.right;</span><br><span class="line">        <span class="keyword">while</span> (cur != <span class="keyword">null</span>)&#123;</span><br><span class="line">            stack.push(cur);</span><br><span class="line">            cur = cur.left;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> node.val;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/** <span class="doctag">@return</span> whether we have a next smallest number */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">hasNext</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> !stack.isEmpty();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Your BSTIterator object will be instantiated and called as such:</span></span><br><span class="line"><span class="comment"> * BSTIterator obj = new BSTIterator(root);</span></span><br><span class="line"><span class="comment"> * int param_1 = obj.next();</span></span><br><span class="line"><span class="comment"> * boolean param_2 = obj.hasNext();</span></span><br><span class="line"><span class="comment"> */</span></span><br></pre></td></tr></table></figure>

<p>这就是我之前想学的用Stack实现的方式，用Stack应该也能实现树的前，中，后序遍历。这种方式应该称作迭代。</p>
<p>复习:</p>
<table>
<thead>
<tr>
<th align="left">Time Submitted</th>
<th align="left">Status</th>
<th align="left">Runtime</th>
<th align="left">Memory</th>
<th align="left">Language</th>
</tr>
</thead>
<tbody><tr>
<td align="left">a few seconds ago</td>
<td align="left"><a href="https://leetcode.com/submissions/detail/342094067/" target="_blank" rel="noopener">Accepted</a></td>
<td align="left">46 ms</td>
<td align="left">50.7 MB</td>
<td align="left">java</td>
</tr>
</tbody></table>
]]></content>
      <tags>
        <tag>LeetCode</tag>
        <tag>Tree</tag>
        <tag>Medium</tag>
      </tags>
  </entry>
  <entry>
    <title>迷茫</title>
    <url>/2020/05/20/%E8%BF%B7%E8%8C%AB/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>工作会有变动吗？什么时候能有感情生活？十一要不要约初中同学聚一聚？什么时候去看房子？</p>
<p>不知不觉心里攒了很多事事情呢，难怪最近有点压力。</p>
]]></content>
  </entry>
  <entry>
    <title>2020年-第21周周计划</title>
    <url>/2020/05/19/2020%E5%B9%B4-%E7%AC%AC21%E5%91%A8%E5%91%A8%E8%AE%A1%E5%88%92/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>上周末没背单词，然后昨天背了单词却忘记打卡了，不能懈怠咯。</p>
<a id="more"></a>

<p>本周计划：</p>
<ol>
<li><p>继续背单词，话说新路线真香呀，所以说有得必有失。</p>
<ul>
<li><p>周一打卡</p>
<p>忘记打卡了</p>
</li>
<li><p>周二打卡</p>
<p>Studied ⁨285⁩ cards ⁨in ⁨39.33⁩ minutes⁩ today (⁨8.28⁩s/card)<br>Again count: 108 (62.11% correct)<br>Learn: 178, Review: 49, Relearn: 58, Filtered: 0<br>No mature cards were studied today.</p>
</li>
<li><p>周三打卡</p>
<p>Studied ⁨158⁩ cards ⁨in ⁨21.9⁩ minutes⁩ today (⁨8.32⁩s/card)<br>Again count: 61 (61.39% correct)<br>Learn: 104, Review: 33, Relearn: 21, Filtered: 0<br>No mature cards were studied today.</p>
</li>
<li><p>周四打卡</p>
<p>Studied ⁨253⁩ cards ⁨in ⁨29.15⁩ minutes⁩ today (⁨6.91⁩s/card)<br>Again count: 114 (54.94% correct)<br>Learn: 174, Review: 48, Relearn: 31, Filtered: 0<br>No mature cards were studied today.</p>
</li>
<li><p>周5打卡</p>
<p>Studied ⁨184⁩ cards ⁨in ⁨24.13⁩ minutes⁩ today (⁨7.87⁩s/card)<br>Again count: 72 (60.87% correct)<br>Learn: 119, Review: 35, Relearn: 30, Filtered: 0<br>No mature cards were studied today.</p>
</li>
</ul>
</li>
<li><p>想跑步或者健身了</p>
</li>
</ol>
<p>本周随记：</p>
<p>周二：</p>
<p>今天心情还不错，原因按下不表，希望明天也能有好心情吧。话说工作又要有新的变化了，出于某些原因还是想继续呆在这。明天领导要是过来并且谈起这件事，我得争取一下，就算一定要回行里，也想拖个几天。一切就看明天了。然后周末打算和朋友出去搓一顿，他月底要离职了，应该心情不太好，陪他喝点酒。</p>
]]></content>
      <tags>
        <tag>周计划</tag>
        <tag>计划</tag>
      </tags>
  </entry>
  <entry>
    <title>今年也不太顺利呢</title>
    <url>/2020/05/13/%E4%BB%8A%E5%B9%B4%E4%B9%9F%E4%B8%8D%E5%A4%AA%E9%A1%BA%E5%88%A9%E5%91%A2/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>还以为过了本命年会好一点呢，结果朋友要被裁退了，房子也马上到期了，他可能会回家，那之后说不定之后又是我一个人了。</p>
<p>虽说之前也过过一个人的日子，习惯了之后也能忍受吧。只不过由奢入俭难，由俭入奢易。一开始就一个人，和习惯了两个人之后突然变成一个人，还是不一样的。</p>
<p>这几年事还真多，想过个安生日子怎么就这么难。就想和女朋友同居，一起养只猫养只狗什么的，下班了做做饭，平常逛逛街。</p>
<p>又要开始找房子搬家了，贼烦。18年搬了3次家，这辈子都不想一个人搬家了。</p>
<p>唉，一个人有些压力属实难顶，有时候很想要一个拥抱。</p>
<p>“为何记不得上一次是谁给的拥抱”<br>“在什么时候”</p>
<p>长太息以掩涕兮，哀民生之多艰。</p>
<p>太难了。</p>
]]></content>
      <tags>
        <tag>难</tag>
      </tags>
  </entry>
  <entry>
    <title>想跑步了</title>
    <url>/2020/05/13/%E6%83%B3%E8%B7%91%E6%AD%A5%E4%BA%86/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>出生第9179天。（惊了，居然都9k多天了）</p>
<p>教练，我想跑步了。</p>
<a id="more"></a>

<p>看了看app上的记录，上一次跑步还是在18年6月份了。</p>
<p>那时候日子还挺好。有朋友，有喜欢的女生。公司离家不远，工作也不繁忙。平常找喜欢的女生聊聊天，周末偶尔和朋友出去吃顿大餐。这样的日子原来已经过去快两年了啊，时间还是那么无情呢，匆匆的来又匆匆的走，毫不停留。</p>
<p>怀念两年前的时光，或者说怀念两年前的自己。那时的我还是个对爱情充满了憧憬，对工作充满了热情的少年呀。时光荏苒，此去经年。现在已经从那个充满活力的少年，变成心如死水，波澜不惊的青年，朝着饱经沧桑的油腻中年奔去了呢。</p>
<p>曾今的我，是那样的渴望爱情。也那么努力那么笨拙的爱过，付出过。虽然结果不太好，虽然没有结果。也是那时候明白了，在爱情里并不是每一分付出都会有回报。要是能早一点明白，当时应该不会那么痛苦吧。其实人生又何尝不是这样呢，“一分耕耘一分收获”不过是童话里的故事，都是骗人的。付出过，努力过，没有回报才是常态吧。应该要学会早点接受这样的事实。而不是在付出过发现没有回报时，气急败坏，那种样子真的很丑陋呢。</p>
<p>不想再看到那样丑陋的自己，也不想自己再那样的卑微了。有些人有些事，没有就没有吧，得不到就得不到吧。或许有人会觉得这样的生活态度过于消极，是呢。我也曾喜欢过热血动漫里的主角，又或是个性鲜明的配角。他们永远是那么的热血，积极阳光，又充满了活力，不管遇到了多少困难或者挫折，不管被反派打倒过多少次总能一次次的爬起来继续战斗，最后上演一场正义必胜的戏码。然而现在长大了，第一个要接受的现实就是自己不是主角，而是一个再普通不过的普通人。好吧，更确切的说我们是自己生活的主角，但并不是小说里的主角。</p>
<p>以前有个女生说我不成熟，很多时候很幼稚，那时候我不懂什么是成熟。几年后再见，发现她变了，又或者当初我就不够了解她吧。她在工作之余，还做起了微商，好好的人怎么就突然做起微商了呢。卖的是阿胶，当然我更愿意叫它的另一个名字驴皮。然后我回过头来想她这些年的经历，专科毕业之后专升本，毕业之后靠家里的关系去了一家大公司。之后倒是靠自己混的风生水起，想挖她的猎头，和她新买的汽车都证明着这一点。后来她有过一些交集，才发现她是一个很有野心或者说上进心，明确知道自己想要什么的人。甚至愿意付出一些代价去获得也在所不惜。心里不禁感叹一声，这就是成熟吗。现在她在家人面前还是一副乖乖女的形象，只有我知道她的另一面。也能猜到她为现在这一切付出了多少。</p>
<p>说实话我承认自己不够成熟。比如两年前的我，还对于爱情有着不切实际的憧憬，对于工作还有着不为五斗米而折腰的骨气。现在这些东西，都如那些被吐出的烟圈一样，随风飘散了。不再相信真爱，也不会干的不爽就想着离职了。</p>
<p>说到烟，22岁那年，我抽了我人生的第一包烟。有点呛，味还大，特别是拿烟的手。抽烟的时候觉得自己终于长大了，变成大人了，甚至仿佛心里的那些积郁也随着烟气一起被吐了出来。有时候也会想要不要给自己来个成年礼，实在不想到30岁了还是个处男。以前对于大保健是非常抵触的，既讨厌做小姐的女生，又讨厌有女朋友或者老婆还去大保健的男生。以至于有几次朋友说请我去大保健，我都拒绝了。但是现在思想慢慢的变了，虽然我不想承认，但我确实没有以前那样抗拒了。以前给自己定的条条框框，让我活的很累。如果有效果也就罢了，关键现在也还是个臭单身狗。</p>
<p>记得好小的时候我就跟自己做了约定，以后不抽烟不喝酒，不聊骚不大保健。争取当好男人，这样才能配得上以后我喜欢的那个她。这么多年过去了，我也确实很好的践行了和自己的约定。然后我发现我错了，女生并不会因为我不抽烟不喝酒不聊骚不大保健就喜欢我。她们只是嘴巴上这么说而已，想找一个好男人，好男人怎么这么少之类的。身体还有心理还是很老实的，喜欢找那些帅帅的坏坏的男生，虽然明知道他们身上有种种缺点，或许对自己不够专一，比较花心之类的。但总能说服自己，觉得自己是特殊的，他能够为自己改掉这些坏毛病，浪子回头。</p>
<p>所以我时常在想，这么多年我都错了吗，我还应该继续坚持自己的原则吗？我是不是应该放弃这些束缚自己的条条框框了，人生匆匆数十载，已经单身25年了还不能清醒的认识到自己错了吗，是不是应该及时行乐才是对的。身边的朋友去大保健的越来越多，哪怕是以前和我一样没去过的，工作几年后也都堕落了。我能确定从来没去过的朋友，连我在内估计3个人左右。一个大学室友我叫他“死胖子”，属于传统好男人那种，烧得一手好菜，和我一样从来没谈过恋爱。照理说是女生嘴巴上最想要的那种绝种好男人了，然而就像我前面说的，女生不会找这种人当男朋友，他不够帅也不够坏。最多只会对他说“你是个好人”，“你老婆以后会很幸福”之类的话。还一个也类似，只不过没那么胖，前段时间还找我帮他一个女性朋友推荐一款笔记本电脑，感觉他还是有机会的，时间关系就不细说了。</p>
<p>有时想想觉得也挺没意思的。一方面好男人确实越来越少了，就像我上面说的，我身边的男生我能100%确定没去过大保健的也就2个而已。其余的，除非他们以后主动坦白，又或者不小心被发现，否则她们的另一半可能永远不会知道。而女人们，一边感叹着好男人越来越少，一边又投入坏男人的怀抱。不得不说这种情况在我看来真的很没有意思呢。</p>
<p>就先写到这吧，写着写着就跑题了呢，跟跑步完全没什么关系了。洋洋洒洒写了2k字，很难想象高中的我是个写800字都得抓破脑袋的少年，哈哈，这两年的博客生涯对于我水字数的水平还是提升很大的。</p>
<p align="right">────2020年05月13日于杭州</p>]]></content>
      <tags>
        <tag>跑步</tag>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title>2020年-第20周周计划</title>
    <url>/2020/05/10/2020%E5%B9%B4-%E7%AC%AC20%E5%91%A8%E5%91%A8%E8%AE%A1%E5%88%92/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>新的一周，希望有新的心情吧，不要再沉浸在郁闷和悲伤里了，还有那么多单词等着呢。</p>
<a id="more"></a>

<p>本周计划：</p>
<ol>
<li><p>继续背单词。上班还是途经三坝吧，下班就走新路线省点时间。</p>
<ul>
<li><p>周一打卡</p>
<p>Studied ⁨201⁩ cards ⁨in ⁨30.18⁩ minutes⁩ today (⁨9.01⁩s/card)<br>Again count: 74 (63.18% correct)<br>Learn: 139, Review: 40, Relearn: 22, Filtered: 0<br>No mature cards were studied today.</p>
<p>越来越短了<del>（大雾</del></p>
</li>
<li><p>周二打卡</p>
<p>Studied ⁨248⁩ cards ⁨in ⁨40.97⁩ minutes⁩ today (⁨9.91⁩s/card)<br>Again count: 124 (50.00% correct)<br>Learn: 179, Review: 37, Relearn: 32, Filtered: 0<br>No mature cards were studied today.</p>
</li>
<li><p>周三打卡</p>
<p>Studied ⁨227⁩ cards ⁨in ⁨40.47⁩ minutes⁩ today (⁨10.7⁩s/card)<br>Again count: 120 (47.14% correct)<br>Learn: 168, Review: 33, Relearn: 26, Filtered: 0<br>No mature cards were studied today.</p>
</li>
<li><p>周四</p>
<p>Studied ⁨205⁩ cards ⁨in ⁨24.38⁩ minutes⁩ today (⁨7.14⁩s/card)<br>Again count: 115 (43.90% correct)<br>Learn: 144, Review: 38, Relearn: 23, Filtered: 0<br>No mature cards were studied today.</p>
</li>
<li><p>周5</p>
<p>Studied ⁨279⁩ cards ⁨in ⁨34.37⁩ minutes⁩ today (⁨7.39⁩s/card)<br>Again count: 164 (41.22% correct)<br>Learn: 193, Review: 28, Relearn: 58, Filtered: 0<br>No mature cards were studied today.</p>
</li>
</ul>
</li>
<li><p>习惯孤独。</p>
</li>
</ol>
<p>本周随记：</p>
<p>没事，习惯就好。</p>
]]></content>
      <tags>
        <tag>周计划</tag>
        <tag>计划</tag>
      </tags>
  </entry>
  <entry>
    <title>2020年-第19周周计划</title>
    <url>/2020/05/04/2020%E5%B9%B4-%E7%AC%AC19%E5%91%A8%E5%91%A8%E8%AE%A1%E5%88%92/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>学习</p>
<a id="more"></a>

<p>本周计划：</p>
<ol>
<li><p>继续背单词，单词太多上下班时间搞不定，加上中午的时间好了。</p>
<ul>
<li><p>周一打卡</p>
<p>Studied 238 cards in 34.40 minutes (8.67s/card)<br>Again count: 88 (63.03% correct)<br>Learn: 162, Review: 42, Relearn: 34, Filtered: 0<br>No mature cards were studied today.</p>
<p>不以时间论英雄</p>
</li>
<li><p>周二打卡</p>
<p>Studied 149 cards in 34.48 minutes (13.89s/card)<br>Again count: 41 (72.48% correct)<br>Learn: 112, Review: 24, Relearn: 13, Filtered: 0<br>No mature cards were studied today.</p>
</li>
<li><p>周三打卡</p>
<p>Studied 633 cards in 1.31 hours (7.43s/card)<br>Again count: 309 (51.18% correct)<br>Learn: 389, Review: 121, Relearn: 123, Filtered: 0<br>No mature cards were studied today.</p>
</li>
<li><p>周四打卡</p>
</li>
</ul>
<p>Studied 470 cards in 1.10 hours (8.40s/card)<br>  Again count: 211 (55.11% correct)<br>  Learn: 309, Review: 74, Relearn: 87, Filtered: 0<br>  No mature cards were studied today.</p>
</li>
</ol>
<ul>
<li><p>周5打卡</p>
<p>Studied 315 cards in 41.30 minutes (7.87s/card)<br>   Again count: 147 (53.33% correct)<br>Learn: 246, Review: 47, Relearn: 22, Filtered: 0<br>   No mature cards were studied today.</p>
<ul>
<li><p>周六</p>
<p>忘记打卡了</p>
</li>
<li><p>周日打卡</p>
<p>Studied ⁨131⁩ cards ⁨in ⁨30.77⁩ minutes⁩ today (⁨14.09⁩s/card)<br>Again count: 56 (57.25% correct)<br>Learn: 84, Review: 7, Relearn: 40, Filtered: 0<br>No mature cards were studied today.</p>
</li>
</ul>
</li>
</ul>
<ol start="2">
<li><p><del>刷题刷题</del>❌</p>
</li>
<li><p><del>看书看书</del>❌</p>
</li>
<li><p>减少玩电脑的时间 ✅</p>
</li>
</ol>
<p>本周随记：</p>
]]></content>
      <tags>
        <tag>周计划</tag>
        <tag>计划</tag>
      </tags>
  </entry>
  <entry>
    <title>2020年-第18周周计划</title>
    <url>/2020/04/27/2020%E5%B9%B4-%E7%AC%AC18%E5%91%A8%E5%91%A8%E8%AE%A1%E5%88%92/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>上周的计划执行的还不错，除了刷题和做雅思，好吧一共三个计划只执行了一个。</p>
<a id="more"></a>

<p>本周计划：</p>
<ol>
<li><p>继续背单词，单词太多上下班时间搞不定，加上中午的时间好了。</p>
<ul>
<li><p>周一打卡</p>
<p>Studied 799 cards in 2.34 hours (10.53s/card)<br>Again count: 402 (49.69% correct)<br>Learn: 584, Review: 133, Relearn: 82, Filtered: 0<br>No mature cards were studied today.</p>
</li>
<li><p>周二打卡</p>
<p>Studied 1,147 cards in 2.75 hours (8.64s/card)<br>Again count: 455 (60.33% correct)<br>Learn: 784, Review: 200, Relearn: 163, Filtered: 0<br>No mature cards were studied today.</p>
<p>👴累了</p>
</li>
<li><p>周三打卡</p>
<p>Studied 738 cards in 1.86 hours (9.07s/card)<br>Again count: 307 (58.40% correct)<br>Learn: 494, Review: 142, Relearn: 102, Filtered: 0<br>No mature cards were studied today.</p>
<p>今天心情不好，或者说心情很差。背不下去了，今天单词记得很快，但是没心情背。</p>
</li>
<li><p>周四打卡</p>
<p>没心情背单词：）</p>
</li>
<li><p>周五打卡</p>
<p>Studied 538 cards in 1.32 hours (8.83s/card)<br>Again count: 250 (53.53% correct)<br>Learn: 394, Review: 95, Relearn: 49, Filtered: 0<br>No mature cards were studied today.</p>
<p>心情还没恢复</p>
</li>
<li><p>周六打卡</p>
<p>Studied 195 cards in 1.02 hours (18.78s/card)<br>Again count: 90 (53.85% correct)<br>Learn: 161, Review: 12, Relearn: 22, Filtered: 0<br>No mature cards were studied today.</p>
<p>直线下滑，明天要振作起来呀</p>
</li>
<li><p>周日打卡</p>
<p>Studied 287 cards in 27.43 minutes (5.74s/card)<br>Again count: 138 (51.92% correct)<br>Learn: 208, Review: 56, Relearn: 23, Filtered: 0<br>No mature cards were studied today.</p>
</li>
</ul>
</li>
<li><p>刷题刷题</p>
</li>
<li><p>看书看书</p>
</li>
<li><p>减少玩电脑的时间</p>
</li>
</ol>
<p>本周随记：</p>
<p>待</p>
]]></content>
      <tags>
        <tag>周计划</tag>
        <tag>计划</tag>
      </tags>
  </entry>
  <entry>
    <title>想买东西</title>
    <url>/2020/04/20/%E6%83%B3%E4%B9%B0%E4%B8%9C%E8%A5%BF/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p><del>手表还是mbp呢。</del></p>
<p><del>过几天抢动森限定版。</del></p>
<p>不，你不想。</p>
<p>再过段时间就是六四了。</p>
<p>去年还发了博，今年也发个。</p>
]]></content>
  </entry>
  <entry>
    <title>2020年-第17周周计划</title>
    <url>/2020/04/20/2020%E5%B9%B4-%E7%AC%AC17%E5%91%A8%E5%91%A8%E8%AE%A1%E5%88%92/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>最近自己的节奏不对，由于工作调动和工作内容的变更已经好久没刷题了。紧迫的时间让我意识到不能再这样下去了。5年的计划属实太大，以至于让我每次想起来就头疼，开始怀疑自己能否做到。</p>
<p>所以我决定将计划制定得更小更细致，以周为单位，每周制定一次，从这周开始，这周是第17周。</p>
<a id="more"></a>

<p>TODO List:</p>
<ol>
<li><del>下载Anki，导入单词。</del>(下好了，导入了7000个单词，叫甚么麦克米伦7000，听起来像麦哲伦又像光轮2000)<ul>
<li><del>Android版的不要钱，IOS要 <code>US$24.99</code>，实在太贵，不行就某宝吧。</del>（淘宝买的美区key）</li>
</ul>
</li>
</ol>
<p>本周计划：</p>
<ol>
<li><p>利用上下班通勤时间用Anki背单词，这东西应该还有点学习成本，需要琢磨下。（搞定了）</p>
<ul>
<li><p>周一打卡（20个）</p>
</li>
<li><p>周二打卡（今天大概背了130个，明天调整到200）</p>
</li>
<li><p>周三打卡</p>
<p>Today<br>Studied 746 cards in 2.07 hours (9.97s/card)<br>Again count: 231 (69.03% correct)<br>Learn: 635, Review: 89, Relearn: 22, Filtered: 0<br>No mature cards were studied today.</p>
<p>今天背了好多，头都晕了，整个中学有这么努力应该能上个985。</p>
</li>
<li><p>周四打卡</p>
<p>Today<br>Studied 1,076 cards in 2.63 hours (8.81s/card)<br>Again count: 436 (59.48% correct)<br>Learn: 690, Review: 200, Relearn: 186, Filtered: 0<br>No mature cards were studied today.</p>
</li>
<li><p>周5打卡，今天聚餐去了</p>
<p>Today<br>Studied 700 cards in 1.86 hours (9.55s/card)<br>Again count: 294 (58.00% correct)<br>Learn: 499, Review: 135, Relearn: 66, Filtered: 0<br>No mature cards were studied today.</p>
</li>
<li><p>周六打卡（不在状态）</p>
<p>Today<br>Studied 1,242 cards in 1.67 hours (4.84s/card)<br>Again count: 562 (54.75% correct)<br>Learn: 930, Review: 200, Relearn: 112, Filtered: 0<br>No mature cards were studied today.</p>
</li>
<li><p>周日打卡</p>
<p>Today</p>
<p>Studied 1,098 cards in 2.09 hours (6.87s/card)<br>Again count: 458 (58.29% correct)<br>Learn: 784, Review: 200, Relearn: 114, Filtered: 0<br>No mature cards were studied today.</p>
</li>
</ul>
</li>
<li><p>到家之后刷题。（看今天能不能做到）</p>
<ul>
<li>周二（果然今天没有刷题，回来就堕落了，还好单词是背了，争取明天步入正轨）</li>
</ul>
</li>
<li><p>周末看书，买的雅思书现在📦还没开封呢。</p>
</li>
</ol>
<p>本周随记：</p>
<p>丢你雷姆，真的感觉记忆力下降了。早上一个<code>analogous(类似的)</code>，还有个<code>collision(碰撞)</code>背了七八遍。真的要努力了，再拖几年，记忆力精力下降更严重，那就只能在这里等死了。</p>
<p>今天大概背了20个新词，感觉慢了点。背单词这种事就应该一次性背很多，然后复习。比如同样100个单词，一天背100个然后不断复习，效果应该好过每天背10个这种。</p>
]]></content>
      <tags>
        <tag>周计划</tag>
        <tag>计划</tag>
      </tags>
  </entry>
  <entry>
    <title>LeetCode-156 Binary Tree Upside Down</title>
    <url>/2020/04/13/LeetCode-156/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>遇到的第一个上锁的题，什么信息都没有。</p>
<p>有点像神奇宝贝里面的“猜猜我是谁”环节。</p>
]]></content>
  </entry>
  <entry>
    <title>LeetCode-145 Binary Tree Postorder Traversal</title>
    <url>/2020/04/13/LeetCode-145/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>Level: <strong>Hard</strong></p>
<p>Given a binary tree, return the <em>postorder</em> traversal of its nodes’ values.</p>
<p><strong>Example:</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Input: [1,null,2,3]</span><br><span class="line">   1</span><br><span class="line">    \</span><br><span class="line">     2</span><br><span class="line">    /</span><br><span class="line">   3</span><br><span class="line"></span><br><span class="line">Output: [3,2,1]</span><br></pre></td></tr></table></figure>

<p><strong>Follow up:</strong> Recursive solution is trivial, could you do it iteratively?</p>
<a id="more"></a>

<p>思路:<br>        后序遍历难度居然是<strong>Hard</strong>，可能指的是题目的额外要求使用迭代实现吧。使用迭代确实很简单，先写个试试。</p>
<p>代码:</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Definition for a binary tree node.</span></span><br><span class="line"><span class="comment"> * public class TreeNode &#123;</span></span><br><span class="line"><span class="comment"> *     int val;</span></span><br><span class="line"><span class="comment"> *     TreeNode left;</span></span><br><span class="line"><span class="comment"> *     TreeNode right;</span></span><br><span class="line"><span class="comment"> *     TreeNode(int x) &#123; val = x; &#125;</span></span><br><span class="line"><span class="comment"> * &#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Integer&gt; <span class="title">postorderTraversal</span><span class="params">(TreeNode root)</span> </span>&#123;</span><br><span class="line">        List&lt;Integer&gt; result = <span class="keyword">new</span> ArrayList&lt;Integer&gt;();</span><br><span class="line">        helper(root, result);</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">helper</span><span class="params">(TreeNode root, List&lt;Integer&gt; result)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (root == <span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        helper(root.left, result);</span><br><span class="line">        helper(root.right, result);</span><br><span class="line">        result.add(root.val);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>用递归写确实很简单，中间粗心，<code>public void helper(TreeNode root, List&lt;Integer&gt; result)</code>写掉了<code>List&lt;Integer&gt;</code>直接写了<code>result</code>，其他都🆗。</p>
<p>我注意到这两题内存使用，基本都只超过了5%的人，说明迭代的方法更省内存呀，抽空得学下三种遍历迭代的写法。记得之前哪一题用到过，不过只写过一次，印象不深刻。</p>
<p>迭代版待续</p>
<p>复习:</p>
<table>
<thead>
<tr>
<th align="left">Time Submitted</th>
<th align="left">Status</th>
<th align="left">Runtime</th>
<th align="left">Memory</th>
<th align="left">Language</th>
</tr>
</thead>
<tbody><tr>
<td align="left">9 minutes ago</td>
<td align="left"><a href="https://leetcode.com/submissions/detail/323964959/" target="_blank" rel="noopener">Accepted</a></td>
<td align="left">0 ms</td>
<td align="left">38.3 MB</td>
<td align="left">java</td>
</tr>
</tbody></table>
<p>Last update time: 2020年4月13日 10点47分</p>
]]></content>
      <tags>
        <tag>LeetCode</tag>
        <tag>Tree</tag>
        <tag>Medium</tag>
      </tags>
  </entry>
  <entry>
    <title>LeetCode-144 Binary Tree Preorder Traversal</title>
    <url>/2020/04/13/LeetCode-144/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>Level: Medium</p>
<p>Given a binary tree, return the <em>preorder</em> traversal of its nodes’ values.</p>
<p><strong>Example:</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Input: [1,null,2,3]</span><br><span class="line">   1</span><br><span class="line">    \</span><br><span class="line">     2</span><br><span class="line">    /</span><br><span class="line">   3</span><br><span class="line"></span><br><span class="line">Output: [1,2,3]</span><br></pre></td></tr></table></figure>

<p><strong>Follow up:</strong> Recursive solution is trivial, could you do it iteratively?</p>
<a id="more"></a>

<p>思路: </p>
<p>哦嚯~简单的先序遍历，纯手敲一次过。</p>
<p>代码:</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Definition for a binary tree node.</span></span><br><span class="line"><span class="comment"> * public class TreeNode &#123;</span></span><br><span class="line"><span class="comment"> *     int val;</span></span><br><span class="line"><span class="comment"> *     TreeNode left;</span></span><br><span class="line"><span class="comment"> *     TreeNode right;</span></span><br><span class="line"><span class="comment"> *     TreeNode(int x) &#123; val = x; &#125;</span></span><br><span class="line"><span class="comment"> * &#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Integer&gt; <span class="title">preorderTraversal</span><span class="params">(TreeNode root)</span> </span>&#123;</span><br><span class="line">        List&lt;Integer&gt; result = <span class="keyword">new</span> ArrayList&lt;Integer&gt;();</span><br><span class="line">        <span class="keyword">if</span> (root == <span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> result;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        helper(root, result);</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">helper</span><span class="params">(TreeNode root, List&lt;Integer&gt; result)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (root != <span class="keyword">null</span>)&#123;</span><br><span class="line">            result.add(root.val);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (root.left != <span class="keyword">null</span>)&#123;</span><br><span class="line">            helper(root.left, result);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (root.right != <span class="keyword">null</span>)&#123;</span><br><span class="line">            helper(root.right, result);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<hr>


<p>其实代码可以精简一下，上面是第一次的版本，下面是第二次的版本，改动不大，就是行数变少了。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Definition for a binary tree node.</span></span><br><span class="line"><span class="comment"> * public class TreeNode &#123;</span></span><br><span class="line"><span class="comment"> *     int val;</span></span><br><span class="line"><span class="comment"> *     TreeNode left;</span></span><br><span class="line"><span class="comment"> *     TreeNode right;</span></span><br><span class="line"><span class="comment"> *     TreeNode(int x) &#123; val = x; &#125;</span></span><br><span class="line"><span class="comment"> * &#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Integer&gt; <span class="title">preorderTraversal</span><span class="params">(TreeNode root)</span> </span>&#123;</span><br><span class="line">        List&lt;Integer&gt; result = <span class="keyword">new</span> ArrayList&lt;Integer&gt;();</span><br><span class="line">        helper(root, result);</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">helper</span><span class="params">(TreeNode root, List&lt;Integer&gt; result)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (root == <span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        result.add(root.val);</span><br><span class="line"></span><br><span class="line">        helper(root.left, result);</span><br><span class="line"></span><br><span class="line">        helper(root.right, result);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>复习:</p>
<table>
<thead>
<tr>
<th align="center">Time Submitted</th>
<th align="center">Status</th>
<th align="center">Runtime</th>
<th align="center">Memory</th>
<th align="center">Language</th>
</tr>
</thead>
<tbody><tr>
<td align="center">7 minutes ago</td>
<td align="center"><a href="https://leetcode.com/submissions/detail/323958738/" target="_blank" rel="noopener">Accepted</a></td>
<td align="center">0 ms</td>
<td align="center">37.5 MB</td>
<td align="center">java</td>
</tr>
<tr>
<td align="center">11 minutes ago</td>
<td align="center"><a href="https://leetcode.com/submissions/detail/323957548/" target="_blank" rel="noopener">Accepted</a></td>
<td align="center">0 ms</td>
<td align="center">37.7 MB</td>
<td align="center">java</td>
</tr>
</tbody></table>
<p>Last update time : 2020年4月13日 10点30分</p>
]]></content>
      <tags>
        <tag>LeetCode</tag>
        <tag>Tree</tag>
        <tag>Medium</tag>
      </tags>
  </entry>
  <entry>
    <title>LeetCode-129 Sum Root to Leaf Numbers</title>
    <url>/2020/04/12/LeetCode-129/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>Level: Medium</p>
<p>Given a binary tree containing digits from <code>0-9</code> only, each root-to-leaf path could represent a number.</p>
<p>An example is the root-to-leaf path <code>1-&gt;2-&gt;3</code> which represents the number <code>123</code>.</p>
<p>Find the total sum of all root-to-leaf numbers.</p>
<p><strong>Note:</strong> A leaf is a node with no children.</p>
<p><strong>Example:</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Input: [1,2,3]</span><br><span class="line">    1</span><br><span class="line">   / \</span><br><span class="line">  2   3</span><br><span class="line">Output: 25</span><br><span class="line">Explanation:</span><br><span class="line">The root-to-leaf path 1-&gt;2 represents the number 12.</span><br><span class="line">The root-to-leaf path 1-&gt;3 represents the number 13.</span><br><span class="line">Therefore, sum = 12 + 13 = 25.</span><br></pre></td></tr></table></figure>

<p><strong>Example 2:</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Input: [4,9,0,5,1]</span><br><span class="line">    4</span><br><span class="line">   / \</span><br><span class="line">  9   0</span><br><span class="line"> / \</span><br><span class="line">5   1</span><br><span class="line">Output: 1026</span><br><span class="line">Explanation:</span><br><span class="line">The root-to-leaf path 4-&gt;9-&gt;5 represents the number 495.</span><br><span class="line">The root-to-leaf path 4-&gt;9-&gt;1 represents the number 491.</span><br><span class="line">The root-to-leaf path 4-&gt;0 represents the number 40.</span><br><span class="line">Therefore, sum = 495 + 491 + 40 = 1026.</span><br></pre></td></tr></table></figure>

<a id="more"></a>

<p>思路:</p>
<p>​    我的想法是利用先序遍历，先后获取到根和子节点的值。再用<code>StringBuilder</code>的<code>append()</code>方法，拼出一个<code>String</code>类型的数，再<code>add</code>进一个<code>List&lt;String&gt;</code>。最后遍历<code>List</code>，同时把<code>String</code>转成<code>int</code>相加返回。最后点击<code>Run Code</code>成功了，激动，接着点击<code>Submit</code>报错了，一点也不吃惊呢。</p>
<p>错误答案:</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Definition for a binary tree node.</span></span><br><span class="line"><span class="comment"> * public class TreeNode &#123;</span></span><br><span class="line"><span class="comment"> *     int val;</span></span><br><span class="line"><span class="comment"> *     TreeNode left;</span></span><br><span class="line"><span class="comment"> *     TreeNode right;</span></span><br><span class="line"><span class="comment"> *     TreeNode(int x) &#123; val = x; &#125;</span></span><br><span class="line"><span class="comment"> * &#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">sumNumbers</span><span class="params">(TreeNode root)</span> </span>&#123;</span><br><span class="line">        List&lt;String&gt; sl = <span class="keyword">new</span> ArrayList&lt;String&gt;();</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span>(root == <span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> result = <span class="number">0</span>;</span><br><span class="line">        </span><br><span class="line">        helper(root.left, root.right, sl, root.val);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; sl.size(); i++)&#123;</span><br><span class="line">            <span class="keyword">int</span> temp = Integer.parseInt(sl.get(i));</span><br><span class="line">            result += temp;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">helper</span><span class="params">(TreeNode left, TreeNode right, List&lt;String&gt; sl, <span class="keyword">int</span> rootVal)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (left != <span class="keyword">null</span>)&#123;</span><br><span class="line">            StringBuilder sb = <span class="keyword">new</span> StringBuilder();</span><br><span class="line">            sb.append(rootVal);</span><br><span class="line">            sb.append(left.val);</span><br><span class="line">            sl.add(sb.toString());</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (right != <span class="keyword">null</span>)&#123;</span><br><span class="line">            StringBuilder sb = <span class="keyword">new</span> StringBuilder();</span><br><span class="line">            sb.append(rootVal);</span><br><span class="line">            sb.append(right.val);</span><br><span class="line">            sl.add(sb.toString());</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// sl.add(sb.toString());</span></span><br><span class="line">        <span class="keyword">if</span> (left.left != <span class="keyword">null</span> &amp;&amp; right.right != <span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> helper(left.left, right.right, sl, rootVal);</span><br><span class="line">        &#125; <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>正确代码:</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">sumNumbers</span><span class="params">(TreeNode root)</span> </span>&#123;</span><br><span class="line">	<span class="keyword">return</span> sum(root, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">sum</span><span class="params">(TreeNode n, <span class="keyword">int</span> s)</span></span>&#123;</span><br><span class="line">	<span class="keyword">if</span> (n == <span class="keyword">null</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">if</span> (n.right == <span class="keyword">null</span> &amp;&amp; n.left == <span class="keyword">null</span>) <span class="keyword">return</span> s*<span class="number">10</span> + n.val;</span><br><span class="line">	<span class="keyword">return</span> sum(n.left, s*<span class="number">10</span> + n.val) + sum(n.right, s*<span class="number">10</span> + n.val);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>果然算法的正确答案一般都不会太长，<code>Hard</code>难度另说，之前碰到的<strong>Morris Traversal</strong>就挺长的。</p>
<p>说实话不太会个十百位数的转换，所以第一想法是先拼成<code>String</code>再转<code>int</code>，虽然明知这样效率不高，还有可能报转换异常。</p>
<p>今天先到这吧。</p>
<p>复习:</p>
<p>留个坑</p>
<table>
<thead>
<tr>
<th align="center">Time Submitted</th>
<th align="center">Status</th>
<th align="center">Runtime</th>
<th align="center">Memory</th>
<th align="center">Language</th>
</tr>
</thead>
<tbody><tr>
<td align="center">14 minutes ago</td>
<td align="center"><font color="red"><a href="https://leetcode.com/submissions/detail/322546057/" target="_blank" rel="noopener">Wrong Answer</a></font></td>
<td align="center">N/A</td>
<td align="center">N/A</td>
<td align="center">java</td>
</tr>
<tr>
<td align="center">14 minutes ago</td>
<td align="center"><font color="red"><a href="https://leetcode.com/submissions/detail/322546023/" target="_blank" rel="noopener">Wrong Answer</a></font></td>
<td align="center">N/A</td>
<td align="center">N/A</td>
<td align="center">java</td>
</tr>
</tbody></table>
]]></content>
      <tags>
        <tag>LeetCode</tag>
        <tag>Tree</tag>
        <tag>Medium</tag>
      </tags>
  </entry>
  <entry>
    <title>LeetCode-99 Recover Binary Search Tree</title>
    <url>/2020/04/12/LeetCode-99/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>Level: <strong>Hard</strong></p>
<p>Two elements of a binary search tree (BST) are swapped by mistake.</p>
<p>Recover the tree without changing its structure.</p>
<p><strong>Example 1:</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Input: [1,3,null,null,2]</span><br><span class="line"></span><br><span class="line">   1</span><br><span class="line">  /</span><br><span class="line"> 3</span><br><span class="line">  \</span><br><span class="line">   2</span><br><span class="line"></span><br><span class="line">Output: [3,1,null,null,2]</span><br><span class="line"></span><br><span class="line">   3</span><br><span class="line">  /</span><br><span class="line"> 1</span><br><span class="line">  \</span><br><span class="line">   2</span><br></pre></td></tr></table></figure>

<p><strong>Example 2:</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Input: [3,1,4,null,null,2]</span><br><span class="line"></span><br><span class="line">  3</span><br><span class="line"> / \</span><br><span class="line">1   4</span><br><span class="line">   /</span><br><span class="line">  2</span><br><span class="line"></span><br><span class="line">Output: [2,1,4,null,null,3]</span><br><span class="line"></span><br><span class="line">  2</span><br><span class="line"> / \</span><br><span class="line">1   4</span><br><span class="line">   /</span><br><span class="line">  3</span><br></pre></td></tr></table></figure>

<p><strong>Follow up:</strong></p>
<ul>
<li>A solution using O(<em>n</em>) space is pretty straight forward.</li>
<li>Could you devise a constant space solution?</li>
</ul>
<a id="more"></a>

<p>原来这个才是我遇到的第一个难度为<code>Hard</code>的题</p>
<p>中序遍历不符合题目常数空间的要求，然后就有了莫里斯遍历</p>
<p>Morris Traversal</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">recoverTree</span><span class="params">(TreeNode root)</span> </span>&#123;</span><br><span class="line">        TreeNode pre = <span class="keyword">null</span>;</span><br><span class="line">        TreeNode first = <span class="keyword">null</span>, second = <span class="keyword">null</span>;</span><br><span class="line">        <span class="comment">// Morris Traversal</span></span><br><span class="line">        TreeNode temp = <span class="keyword">null</span>;</span><br><span class="line">		<span class="keyword">while</span>(root!=<span class="keyword">null</span>)&#123;</span><br><span class="line">			<span class="keyword">if</span>(root.left!=<span class="keyword">null</span>)&#123;</span><br><span class="line">				<span class="comment">// connect threading for root</span></span><br><span class="line">				temp = root.left;</span><br><span class="line">				<span class="keyword">while</span>(temp.right!=<span class="keyword">null</span> &amp;&amp; temp.right != root)</span><br><span class="line">					temp = temp.right;</span><br><span class="line">				<span class="comment">// the threading already exists</span></span><br><span class="line">				<span class="keyword">if</span>(temp.right!=<span class="keyword">null</span>)&#123;</span><br><span class="line">				    <span class="keyword">if</span>(pre!=<span class="keyword">null</span> &amp;&amp; pre.val &gt; root.val)&#123;</span><br><span class="line">				        <span class="keyword">if</span>(first==<span class="keyword">null</span>)&#123;first = pre;second = root;&#125;</span><br><span class="line">				        <span class="keyword">else</span>&#123;second = root;&#125;</span><br><span class="line">				    &#125;</span><br><span class="line">				    pre = root;</span><br><span class="line">				    </span><br><span class="line">					temp.right = <span class="keyword">null</span>;</span><br><span class="line">					root = root.right;</span><br><span class="line">				&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">					<span class="comment">// construct the threading</span></span><br><span class="line">					temp.right = root;</span><br><span class="line">					root = root.left;</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">				<span class="keyword">if</span>(pre!=<span class="keyword">null</span> &amp;&amp; pre.val &gt; root.val)&#123;</span><br><span class="line">				    <span class="keyword">if</span>(first==<span class="keyword">null</span>)&#123;first = pre;second = root;&#125;</span><br><span class="line">				    <span class="keyword">else</span>&#123;second = root;&#125;</span><br><span class="line">				&#125;</span><br><span class="line">				pre = root;</span><br><span class="line">				root = root.right;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="comment">// swap two node values;</span></span><br><span class="line">		<span class="keyword">if</span>(first!= <span class="keyword">null</span> &amp;&amp; second != <span class="keyword">null</span>)&#123;</span><br><span class="line">		    <span class="keyword">int</span> t = first.val;</span><br><span class="line">		    first.val = second.val;</span><br><span class="line">		    second.val = t;</span><br><span class="line">		&#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">//https://leetcode.com/problems/recover-binary-search-tree/discuss/32559/Detail-Explain-about-How-Morris-Traversal-Finds-two-Incorrect-Pointer</span></span><br></pre></td></tr></table></figure>

<p>看不懂，今天还一题都没有做。</p>
]]></content>
      <tags>
        <tag>LeetCode</tag>
        <tag>Tree</tag>
        <tag>Hard</tag>
      </tags>
  </entry>
  <entry>
    <title>LeetCode-98 Validate Binary Search Tree</title>
    <url>/2020/04/12/LeetCode-98/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>Level: Medium</p>
<p>Given a binary tree, determine if it is a valid binary search tree (BST).</p>
<p>Assume a BST is defined as follows:</p>
<ul>
<li>The left subtree of a node contains only nodes with keys <strong>less than</strong> the node’s key.</li>
<li>The right subtree of a node contains only nodes with keys <strong>greater than</strong> the node’s key.</li>
<li>Both the left and right subtrees must also be binary search trees.</li>
</ul>
<p><strong>Example 1:</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">    2</span><br><span class="line">   / \</span><br><span class="line">  1   3</span><br><span class="line"></span><br><span class="line">Input: [2,1,3]</span><br><span class="line">Output: true</span><br></pre></td></tr></table></figure>

<p><strong>Example 2:</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">    5</span><br><span class="line">   / \</span><br><span class="line">  1   4</span><br><span class="line">     / \</span><br><span class="line">    3   6</span><br><span class="line"></span><br><span class="line">Input: [5,1,4,null,null,3,6]</span><br><span class="line">Output: false</span><br><span class="line">Explanation: The root node&apos;s value is 5 but its right child&apos;s value is 4.</span><br></pre></td></tr></table></figure>

<a id="more"></a>

<p>方法一:</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Definition for a binary tree node.</span></span><br><span class="line"><span class="comment"> * public class TreeNode &#123;</span></span><br><span class="line"><span class="comment"> *     int val;</span></span><br><span class="line"><span class="comment"> *     TreeNode left;</span></span><br><span class="line"><span class="comment"> *     TreeNode right;</span></span><br><span class="line"><span class="comment"> *     TreeNode(int x) &#123; val = x; &#125;</span></span><br><span class="line"><span class="comment"> * &#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isValidBST</span><span class="params">(TreeNode root)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (root == <span class="keyword">null</span>) <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        Stack&lt;TreeNode&gt; stack = <span class="keyword">new</span> Stack&lt;&gt;();</span><br><span class="line">        TreeNode pre = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">while</span> (root != <span class="keyword">null</span> || !stack.isEmpty()) &#123;</span><br><span class="line">            <span class="comment">//</span></span><br><span class="line">            <span class="keyword">while</span> (root != <span class="keyword">null</span>) &#123;</span><br><span class="line">                stack.push(root);</span><br><span class="line">                root = root.left;</span><br><span class="line">            &#125;</span><br><span class="line">            root = stack.pop();</span><br><span class="line">            <span class="keyword">if</span>(pre != <span class="keyword">null</span> &amp;&amp; root.val &lt;= pre.val) <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">            pre = root;</span><br><span class="line">            root = root.right;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<hr>


<p>方法二：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Definition for a binary tree node.</span></span><br><span class="line"><span class="comment"> * public class TreeNode &#123;</span></span><br><span class="line"><span class="comment"> *     int val;</span></span><br><span class="line"><span class="comment"> *     TreeNode left;</span></span><br><span class="line"><span class="comment"> *     TreeNode right;</span></span><br><span class="line"><span class="comment"> *     TreeNode(int x) &#123; val = x; &#125;</span></span><br><span class="line"><span class="comment"> * &#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isValidBST</span><span class="params">(TreeNode root)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> helper(root,Integer.MIN_VALUE,Integer.MAX_VALUE);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">helper</span><span class="params">(TreeNode root,Integer min, Integer max)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (root == <span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (root.val &gt;= max || root.val &lt;= min) <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        <span class="keyword">return</span> helper(root.left, min, root.val)&amp;&amp;helper(root.right,root.val,max);</span><br><span class="line">        </span><br><span class="line">    &#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>Test case: <strong>[2147483647]</strong>会报错，正好是 <code>Integer.MAX_VALUE</code>的临界值。</p>
<hr>


<p>方法二改(自己):</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Definition for a binary tree node.</span></span><br><span class="line"><span class="comment"> * public class TreeNode &#123;</span></span><br><span class="line"><span class="comment"> *     int val;</span></span><br><span class="line"><span class="comment"> *     TreeNode left;</span></span><br><span class="line"><span class="comment"> *     TreeNode right;</span></span><br><span class="line"><span class="comment"> *     TreeNode(int x) &#123; val = x; &#125;</span></span><br><span class="line"><span class="comment"> * &#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isValidBST</span><span class="params">(TreeNode root)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> helper(root,Long.MIN_VALUE,Long.MAX_VALUE);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">helper</span><span class="params">(TreeNode root,Long min, Long max)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (root == <span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (root.val &gt;= max || root.val &lt;= min) <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        <span class="keyword">return</span> helper(root.left, Long.valueOf(min), Long.valueOf(root.val)) &amp;&amp; helper(root.right,Long.valueOf(root.val),Long.valueOf(max));</span><br><span class="line">        </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>想法也很简单，把Integer换成Long，这样遇到这个test case就不会报错了。</p>
<p>方法二改(评论区):</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Definition for a binary tree node.</span></span><br><span class="line"><span class="comment"> * public class TreeNode &#123;</span></span><br><span class="line"><span class="comment"> *     int val;</span></span><br><span class="line"><span class="comment"> *     TreeNode left;</span></span><br><span class="line"><span class="comment"> *     TreeNode right;</span></span><br><span class="line"><span class="comment"> *     TreeNode(int x) &#123; val = x; &#125;</span></span><br><span class="line"><span class="comment"> * &#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isValidBST</span><span class="params">(TreeNode root)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> helper(root, <span class="keyword">null</span>, <span class="keyword">null</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">boolean</span> <span class="title">helper</span><span class="params">(TreeNode root, Integer min, Integer max)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (root == <span class="keyword">null</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> ((min != <span class="keyword">null</span> &amp;&amp; root.val &lt;= min) || (max != <span class="keyword">null</span> &amp;&amp; root.val &gt;= max))</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> helper(root.left, min, root.val) &amp;&amp; helper(root.right, root.val, max);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 链接：https://leetcode.com/problems/validate-binary-search-tree/discuss/32138/Another-passed-Java-solution</span></span><br></pre></td></tr></table></figure>

<p>这种更优雅，用我那种方法，test case换个Long的临界值，估计又会报错了。只是算暂时解决了问题，并没有完全解决问题。</p>
<p>复习记录:</p>
<table>
<thead>
<tr>
<th align="center">Time Submitted</th>
<th align="center">Status</th>
<th align="center">Runtime</th>
<th align="center">Memory</th>
<th align="center">Language</th>
</tr>
</thead>
<tbody><tr>
<td align="center">9 minutes ago</td>
<td align="center"><a href="https://leetcode.com/submissions/detail/322401429/" target="_blank" rel="noopener">Accepted</a></td>
<td align="center">0 ms</td>
<td align="center">39.3 MB</td>
<td align="center">java</td>
</tr>
<tr>
<td align="center">13 minutes ago</td>
<td align="center"><a href="https://leetcode.com/submissions/detail/322400156/" target="_blank" rel="noopener">Accepted</a></td>
<td align="center">0 ms</td>
<td align="center">39.1 MB</td>
<td align="center">java</td>
</tr>
<tr>
<td align="center">21 minutes ago</td>
<td align="center"><a href="https://leetcode.com/submissions/detail/322397606/" target="_blank" rel="noopener">Wrong Answer</a></td>
<td align="center">N/A</td>
<td align="center">N/A</td>
<td align="center">java</td>
</tr>
<tr>
<td align="center">9 days ago</td>
<td align="center"><a href="https://leetcode.com/submissions/detail/318018846/" target="_blank" rel="noopener">Accepted</a></td>
<td align="center">1 ms</td>
<td align="center">39.5 MB</td>
<td align="center">java</td>
</tr>
</tbody></table>
<p>Last Update Time : 2020年4月10日 10点52分</p>
]]></content>
      <tags>
        <tag>LeetCode</tag>
        <tag>Tree</tag>
        <tag>Medium</tag>
      </tags>
  </entry>
  <entry>
    <title>LeetCode-96 Unique Binary Search Trees</title>
    <url>/2020/04/12/LeetCode-96/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>Level: Medium</p>
<p>Given <em>n</em>, how many structurally unique <strong>BST’s</strong> (binary search trees) that store values 1 … <em>n</em>?</p>
<p><strong>Example:</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Input: 3</span><br><span class="line">Output: 5</span><br><span class="line">Explanation:</span><br><span class="line">Given n = 3, there are a total of 5 unique BST&apos;s:</span><br><span class="line"></span><br><span class="line">   1         3     3      2      1</span><br><span class="line">    \       /     /      / \      \</span><br><span class="line">     3     2     1      1   3      2</span><br><span class="line">    /     /       \                 \</span><br><span class="line">   2     1         2                 3</span><br></pre></td></tr></table></figure>

<a id="more"></a>

<p>暂空</p>
]]></content>
      <tags>
        <tag>LeetCode</tag>
        <tag>Tree</tag>
        <tag>Medium</tag>
      </tags>
  </entry>
  <entry>
    <title>LeetCode-95 Unique Binary Search Trees II</title>
    <url>/2020/04/12/LeetCode-95/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>Level: Medium</p>
<p>Given an integer <em>n</em>, generate all structurally unique <strong>BST’s</strong> (binary search trees) that store values 1 … <em>n</em>.</p>
<p><strong>Example:</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Input: 3</span><br><span class="line">Output:</span><br><span class="line">[</span><br><span class="line">  [1,null,3,2],</span><br><span class="line">  [3,2,null,1],</span><br><span class="line">  [3,1,null,null,2],</span><br><span class="line">  [2,1,3],</span><br><span class="line">  [1,null,2,null,3]</span><br><span class="line">]</span><br><span class="line">Explanation:</span><br><span class="line">The above output corresponds to the 5 unique BST&apos;s shown below:</span><br><span class="line"></span><br><span class="line">   1         3     3      2      1</span><br><span class="line">    \       /     /      / \      \</span><br><span class="line">     3     2     1      1   3      2</span><br><span class="line">    /     /       \                 \</span><br><span class="line">   2     1         2                 3</span><br></pre></td></tr></table></figure>

<a id="more"></a>

<p>暂空</p>
]]></content>
      <tags>
        <tag>LeetCode</tag>
        <tag>Tree</tag>
        <tag>Medium</tag>
      </tags>
  </entry>
  <entry>
    <title>LeetCode-94 Binary Tree Inorder Traversal</title>
    <url>/2020/04/12/LeetCode-94/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>Level: Medium</p>
<p>Given a binary tree, return the <em>inorder</em> traversal of its nodes’ values.</p>
<p><strong>Example:</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Input: [1,null,2,3]</span><br><span class="line">   1</span><br><span class="line">    \</span><br><span class="line">     2</span><br><span class="line">    /</span><br><span class="line">   3</span><br><span class="line"></span><br><span class="line">Output: [1,3,2]</span><br></pre></td></tr></table></figure>

<p><strong>Follow up:</strong> Recursive solution is trivial, could you do it iteratively?</p>
<a id="more"></a>

<p>思路:</p>
<p>​    一个简单的中序遍历</p>
<p>代码: </p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Definition for a binary tree node.</span></span><br><span class="line"><span class="comment"> * public class TreeNode &#123;</span></span><br><span class="line"><span class="comment"> *     int val;</span></span><br><span class="line"><span class="comment"> *     TreeNode left;</span></span><br><span class="line"><span class="comment"> *     TreeNode right;</span></span><br><span class="line"><span class="comment"> *     TreeNode(int x) &#123; val = x; &#125;</span></span><br><span class="line"><span class="comment"> * &#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Integer&gt; <span class="title">inorderTraversal</span><span class="params">(TreeNode root)</span> </span>&#123;</span><br><span class="line">        List&lt;Integer&gt; result = <span class="keyword">new</span> ArrayList&lt;Integer&gt;();</span><br><span class="line">        <span class="keyword">if</span> (root == <span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> result;</span><br><span class="line">        &#125;</span><br><span class="line">        helper(root, result);</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Integer&gt; <span class="title">helper</span><span class="params">(TreeNode root, List&lt;Integer&gt; result)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (root.left != <span class="keyword">null</span>)&#123;</span><br><span class="line">            helper(root.left, result);</span><br><span class="line">        &#125;</span><br><span class="line">        result.add(root.val);</span><br><span class="line">        <span class="keyword">if</span> (root.right != <span class="keyword">null</span>)&#123;</span><br><span class="line">            helper(root.right, result);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>复习(提交记录):</p>
<table>
<thead>
<tr>
<th align="left">Time Submitted</th>
<th align="left">Status</th>
<th align="left">Runtime</th>
<th align="left">Memory</th>
<th align="left">Language</th>
</tr>
</thead>
<tbody><tr>
<td align="left">7 minutes ago</td>
<td align="left"><a href="https://leetcode.com/submissions/detail/322063834/" target="_blank" rel="noopener">Accepted</a></td>
<td align="left">0 ms</td>
<td align="left">37.8 MB</td>
<td align="left">java</td>
</tr>
<tr>
<td align="left">7 days ago</td>
<td align="left"><a href="https://leetcode.com/submissions/detail/318561002/" target="_blank" rel="noopener">Accepted</a></td>
<td align="left">0 ms</td>
<td align="left">37.3 MB</td>
<td align="left">java</td>
</tr>
<tr>
<td align="left">9 days ago</td>
<td align="left"><a href="https://leetcode.com/submissions/detail/317759660/" target="_blank" rel="noopener">Accepted</a></td>
<td align="left">0 ms</td>
<td align="left">37.8 MB</td>
<td align="left">java</td>
</tr>
</tbody></table>
<p>Last update time : 2020年4月9日 17点24分</p>
]]></content>
      <tags>
        <tag>LeetCode</tag>
        <tag>Tree</tag>
        <tag>Medium</tag>
      </tags>
  </entry>
  <entry>
    <title>LeetCode-124 Binary Tree Maximum Path Sum</title>
    <url>/2020/04/09/LeetCode-124/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>Level: <strong>Hard</strong></p>
<p>Given a <strong>non-empty</strong> binary tree, find the maximum path sum.</p>
<p>For this problem, a path is defined as any sequence of nodes from some starting node to any node in the tree along the parent-child connections. The path must contain <strong>at least one node</strong> and does not need to go through the root.</p>
<p><strong>Example 1:</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Input: [1,2,3]</span><br><span class="line"></span><br><span class="line">       1</span><br><span class="line">      / \</span><br><span class="line">     2   3</span><br><span class="line"></span><br><span class="line">Output: 6</span><br></pre></td></tr></table></figure>

<p><strong>Example 2:</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Input: [-10,9,20,null,null,15,7]</span><br><span class="line"></span><br><span class="line">   -10</span><br><span class="line">   / \</span><br><span class="line">  9  20</span><br><span class="line">    /  \</span><br><span class="line">   15   7</span><br><span class="line"></span><br><span class="line">Output: 42</span><br></pre></td></tr></table></figure>

<a id="more"></a>

<p>遇到的第一个难度为<code>Hard</code>的题，这个单词直接让我放弃了思考，直奔评论区。</p>
<p>真是他妈的优雅呀</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> max = Integer.MIN_VALUE;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">maxPathSum</span><span class="params">(TreeNode root)</span> </span>&#123;</span><br><span class="line">        helper(root);</span><br><span class="line">        <span class="keyword">return</span> max;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// helper returns the max branch </span></span><br><span class="line">    <span class="comment">// plus current node's value</span></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">helper</span><span class="params">(TreeNode root)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (root == <span class="keyword">null</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">int</span> left = Math.max(helper(root.left), <span class="number">0</span>);</span><br><span class="line">        <span class="keyword">int</span> right = Math.max(helper(root.right), <span class="number">0</span>);</span><br><span class="line">        </span><br><span class="line">        max = Math.max(max, root.val + left + right);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> root.val + Math.max(left, right);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 链接：https://leetcode.com/problems/binary-tree-maximum-path-sum/discuss/39875/Elegant-Java-solution</span></span><br></pre></td></tr></table></figure>

<p>虽然还不是很懂这两行</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">max = Math.max(max, root.val + left + right);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> root.val + Math.max(left, right);</span><br></pre></td></tr></table></figure>

]]></content>
      <tags>
        <tag>LeetCode</tag>
        <tag>Tree</tag>
        <tag>Hard</tag>
      </tags>
  </entry>
  <entry>
    <title>LeetCode-117 Populating Next Right Pointers in Each Node II</title>
    <url>/2020/04/09/LeetCode-117/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>Level: Medium</p>
<p>Given a binary tree</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">struct Node &#123;</span><br><span class="line">  int val;</span><br><span class="line">  Node *left;</span><br><span class="line">  Node *right;</span><br><span class="line">  Node *next;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>Populate each next pointer to point to its next right node. If there is no next right node, the next pointer should be set to <code>NULL</code>.</p>
<p>Initially, all next pointers are set to <code>NULL</code>.</p>
<p><strong>Follow up:</strong></p>
<ul>
<li>You may only use constant extra space.</li>
<li>Recursive approach is fine, you may assume implicit stack space does not count as extra space for this problem.</li>
</ul>
<p><strong>Example 1:</strong></p>
<p><img src="https://assets.leetcode.com/uploads/2019/02/15/117_sample.png" alt="img"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Input: root = [1,2,3,4,5,null,7]</span><br><span class="line">Output: [1,#,2,3,#,4,5,7,#]</span><br><span class="line">Explanation: Given the above binary tree (Figure A), your function should populate each next pointer to point to its next right node, just like in Figure B. The serialized output is in level order as connected by the next pointers, with &apos;#&apos; signifying the end of each level.</span><br></pre></td></tr></table></figure>



<p><strong>Constraints:</strong></p>
<ul>
<li>The number of nodes in the given tree is less than <code>6000</code>.</li>
<li><code>-100 &lt;= node.val &lt;= 100</code></li>
</ul>
<a id="more"></a>

<p>思路:</p>
<p>​    用上一题的层次遍历的话貌似不需要改代码，说干就干，趁着记忆还热乎着，把116的代码码了一遍，由于手打还是出现了一些波折，</p>
<ol>
<li>比如<code>Queue&lt;Node&gt; queue = new LinkedList&lt;Node&gt;();</code>少打了前面的<code>&lt;Node&gt;</code>，毕竟之前都是用IDEA，敲后面的<code>new LinkedList&lt;Node&gt;();</code>用快捷键自动生成前面。</li>
<li>再就是<code>queue.size()</code>少了<code>()</code>,还是同样的理由，之前都是自动补全的代码。</li>
<li>还有就是<code>Node node = queue.poll();</code>写在了<code>for</code>循环的外面。</li>
<li>最后就是<code>node.next = queue.peek();</code>不知道左边应该写什么。</li>
</ol>
<p>大体上还是OK的，没有出现Runtime Exception，几个编译异常也都及时发现并解决了，没有出现找了很久没发现错哪的问题。</p>
<p>但是层级遍历的空间复杂度为<img src="https://wikimedia.org/api/rest_v1/media/math/render/svg/34109fe397fdcff370079185bfdb65826cb5565a" alt="O(n)">，并不符合题目的进阶要求。</p>
<p>层级遍历:</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">// Definition for a Node.</span></span><br><span class="line"><span class="comment">class Node &#123;</span></span><br><span class="line"><span class="comment">    public int val;</span></span><br><span class="line"><span class="comment">    public Node left;</span></span><br><span class="line"><span class="comment">    public Node right;</span></span><br><span class="line"><span class="comment">    public Node next;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    public Node() &#123;&#125;</span></span><br><span class="line"><span class="comment">    </span></span><br><span class="line"><span class="comment">    public Node(int _val) &#123;</span></span><br><span class="line"><span class="comment">        val = _val;</span></span><br><span class="line"><span class="comment">    &#125;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    public Node(int _val, Node _left, Node _right, Node _next) &#123;</span></span><br><span class="line"><span class="comment">        val = _val;</span></span><br><span class="line"><span class="comment">        left = _left;</span></span><br><span class="line"><span class="comment">        right = _right;</span></span><br><span class="line"><span class="comment">        next = _next;</span></span><br><span class="line"><span class="comment">    &#125;</span></span><br><span class="line"><span class="comment">&#125;;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> Node <span class="title">connect</span><span class="params">(Node root)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (root == <span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        Queue&lt;Node&gt; queue = <span class="keyword">new</span> LinkedList&lt;Node&gt;();</span><br><span class="line">        queue.offer(root);</span><br><span class="line">        <span class="keyword">while</span> (queue.size() &gt; <span class="number">0</span>)&#123;</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">int</span> size = queue.size();</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; size; i++)&#123;</span><br><span class="line">                Node node = queue.poll();</span><br><span class="line">                <span class="keyword">if</span> (i &lt; size -<span class="number">1</span>)&#123;</span><br><span class="line">                    node.next = queue.peek();</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (node.left != <span class="keyword">null</span>)&#123;</span><br><span class="line">                    queue.add(node.left);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (node.right != <span class="keyword">null</span>)&#123;</span><br><span class="line">                    queue.add(node.right);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> root;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>空间复杂度为<img src="https://wikimedia.org/api/rest_v1/media/math/render/svg/e66384bc40452c5452f33563fe0e27e803b0cc21" alt="O(1)">的方法还没仔细看，感觉挺复杂的，也贴一下吧。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">connect</span><span class="params">(TreeLinkNode root)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (root == <span class="keyword">null</span>) <span class="keyword">return</span>;</span><br><span class="line">        TreeLinkNode curP = root;</span><br><span class="line">        TreeLinkNode nextDummyHead = <span class="keyword">new</span> TreeLinkNode(<span class="number">0</span>);</span><br><span class="line">        TreeLinkNode p = nextDummyHead;</span><br><span class="line">        <span class="keyword">while</span> (curP != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (curP.left != <span class="keyword">null</span>) &#123;</span><br><span class="line">                p.next = curP.left;</span><br><span class="line">                p = p.next;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (curP.right != <span class="keyword">null</span>) &#123;</span><br><span class="line">                p.next = curP.right;</span><br><span class="line">                p = p.next;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (curP.next != <span class="keyword">null</span>) &#123;</span><br><span class="line">                curP = curP.next;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">                curP = nextDummyHead.next;</span><br><span class="line">                nextDummyHead.next = <span class="keyword">null</span>;</span><br><span class="line">                p = nextDummyHead;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>链接：<a href="https://leetcode.com/problems/populating-next-right-pointers-in-each-node-ii/discuss/37828/O(1)-space-O(n)-complexity-Iterative-Solution" target="_blank" rel="noopener">https://leetcode.com/problems/populating-next-right-pointers-in-each-node-ii/discuss/37828/O(1)-space-O(n)-complexity-Iterative-Solution</a></p>
]]></content>
      <tags>
        <tag>LeetCode</tag>
        <tag>Tree</tag>
        <tag>Medium</tag>
      </tags>
  </entry>
  <entry>
    <title>LeetCode-116 Populating Next Right Pointers in Each Node</title>
    <url>/2020/04/09/LeetCode-116/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>Level: Medium</p>
<p>You are given a <strong>perfect binary tree</strong> where all leaves are on the same level, and every parent has two children. The binary tree has the following definition:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">struct Node &#123;</span><br><span class="line">  int val;</span><br><span class="line">  Node *left;</span><br><span class="line">  Node *right;</span><br><span class="line">  Node *next;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>Populate each next pointer to point to its next right node. If there is no next right node, the next pointer should be set to <code>NULL</code>.</p>
<p>Initially, all next pointers are set to <code>NULL</code>.</p>
<p><strong>Follow up:</strong></p>
<ul>
<li>You may only use constant extra space.</li>
<li>Recursive approach is fine, you may assume implicit stack space does not count as extra space for this problem.</li>
</ul>
<p><strong>Example 1:</strong></p>
<p><img src="https://assets.leetcode.com/uploads/2019/02/14/116_sample.png" alt="img"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Input: root = [1,2,3,4,5,6,7]</span><br><span class="line">Output: [1,#,2,3,#,4,5,6,7,#]</span><br><span class="line">Explanation: Given the above perfect binary tree (Figure A), your function should populate each next pointer to point to its next right node, just like in Figure B. The serialized output is in level order as connected by the next pointers, with &apos;#&apos; signifying the end of each level.</span><br></pre></td></tr></table></figure>



<p><strong>Constraints:</strong></p>
<ul>
<li>The number of nodes in the given tree is less than <code>4096</code>.</li>
<li><code>-1000 &lt;= node.val &lt;= 1000</code></li>
</ul>
<a id="more"></a>

<p>个人思路:</p>
<p>​    层次遍历</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">// Definition for a Node.</span></span><br><span class="line"><span class="comment">class Node &#123;</span></span><br><span class="line"><span class="comment">    public int val;</span></span><br><span class="line"><span class="comment">    public Node left;</span></span><br><span class="line"><span class="comment">    public Node right;</span></span><br><span class="line"><span class="comment">    public Node next;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    public Node() &#123;&#125;</span></span><br><span class="line"><span class="comment">    </span></span><br><span class="line"><span class="comment">    public Node(int _val) &#123;</span></span><br><span class="line"><span class="comment">        val = _val;</span></span><br><span class="line"><span class="comment">    &#125;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    public Node(int _val, Node _left, Node _right, Node _next) &#123;</span></span><br><span class="line"><span class="comment">        val = _val;</span></span><br><span class="line"><span class="comment">        left = _left;</span></span><br><span class="line"><span class="comment">        right = _right;</span></span><br><span class="line"><span class="comment">        next = _next;</span></span><br><span class="line"><span class="comment">    &#125;</span></span><br><span class="line"><span class="comment">&#125;;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> Node <span class="title">connect</span><span class="params">(Node root)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (root == <span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> root;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        Queue&lt;Node&gt; queue = <span class="keyword">new</span> LinkedList&lt;Node&gt;();</span><br><span class="line">        </span><br><span class="line">        queue.offer(root);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">while</span>(queue.size() &gt; <span class="number">0</span> &amp;&amp; queue != <span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">int</span> size = queue.size();</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; size; i++)&#123;</span><br><span class="line">                Node node = queue.poll();</span><br><span class="line">                </span><br><span class="line">                <span class="keyword">if</span> (i &lt; size - <span class="number">1</span>) &#123;</span><br><span class="line">                    node.next = queue.peek();</span><br><span class="line">                &#125;</span><br><span class="line">                </span><br><span class="line">                <span class="keyword">if</span> (node.left != <span class="keyword">null</span>)&#123;</span><br><span class="line">                    queue.offer(node.left);</span><br><span class="line">                &#125;</span><br><span class="line">                </span><br><span class="line">                <span class="keyword">if</span> (node.right != <span class="keyword">null</span>)&#123;</span><br><span class="line">                    queue.offer(node.right);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> root;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>我的版本少了如下这一段，导致报错。</p>
<pre><code>if (i &lt; size - 1) {
    node.next = queue.peek();
}</code></pre><p>还有一种更优雅的方法，不过单看代码不容易理解</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">connect</span><span class="params">(TreeLinkNode root)</span> </span>&#123;</span><br><span class="line">        TreeLinkNode level_start=root;</span><br><span class="line">        <span class="keyword">while</span>(level_start!=<span class="keyword">null</span>)&#123;</span><br><span class="line">            TreeLinkNode cur=level_start;</span><br><span class="line">            <span class="keyword">while</span>(cur!=<span class="keyword">null</span>)&#123;</span><br><span class="line">                <span class="keyword">if</span>(cur.left!=<span class="keyword">null</span>) cur.left.next=cur.right;</span><br><span class="line">                <span class="keyword">if</span>(cur.right!=<span class="keyword">null</span> &amp;&amp; cur.next!=<span class="keyword">null</span>) cur.right.next=cur.next.left;</span><br><span class="line">                </span><br><span class="line">                cur=cur.next;</span><br><span class="line">            &#125;</span><br><span class="line">            level_start=level_start.left;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">链接：https:<span class="comment">//leetcode.com/problems/populating-next-right-pointers-in-each-node/discuss/37461/Java-solution-with-O(1)-memory%2B-O(n)-time</span></span><br></pre></td></tr></table></figure>

<p>搭配图解更方便理解，以下节选自力扣中国</p>
<p>链接：<a href="https://leetcode-cn.com/problems/populating-next-right-pointers-in-each-node/solution/tian-chong-mei-ge-jie-dian-de-xia-yi-ge-you-ce-j-3/" target="_blank" rel="noopener">https://leetcode-cn.com/problems/populating-next-right-pointers-in-each-node/solution/tian-chong-mei-ge-jie-dian-de-xia-yi-ge-you-ce-j-3/</a></p>
<h4 id="方法二：使用已建立的-next-指针"><a href="#方法二：使用已建立的-next-指针" class="headerlink" title="方法二：使用已建立的 next 指针"></a>方法二：使用已建立的 <code>next</code> 指针</h4><p><strong>思路</strong></p>
<p>一棵树中，存在两种类型的 <code>next</code> 指针。</p>
<ol>
<li><p>第一种情况是连接同一个父节点的两个子节点。它们可以通过同一个节点直接访问到，因此执行下面操作即可完成连接。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">node.left.next = node.right</span><br></pre></td></tr></table></figure>

<p><img src="https://pic.leetcode-cn.com/Figures/116/img6.png" alt="img"></p>
</li>
<li><p>第二种情况在不同父亲的子节点之间建立连接，这种情况不能直接连接。</p>
<p><img src="https://pic.leetcode-cn.com/Figures/116/img7.png" alt="img"></p>
<center>如果每个节点有指向父节点的指针，可以通过该指针找到 `next` 节点。如果不存在该指针，则按照下面思路建立连接：</center>

</li>
</ol>
<blockquote>
<p>第 N 层节点之间建立 next 指针后，再建立第 N+1 层节点的 next 指针。可以通过 next 指针访问同一层的所有节点，因此可以使用第 N 层的 next 指针，为第 N+1 层节点建立 next 指针。</p>
</blockquote>
<p> <strong>算法</strong></p>
<ol>
<li><p>从根节点开始，由于第 0 层只有这一个节点，所以不需要连接。直接为第 1 层节点建立 <code>next</code> 指针即可。该算法中需要注意的一点是，当我们为第 N 层节点建立 <code>next</code> 指针时，处于第 N-1<em>N</em>−1 层。当第 N<em>N</em> 层节点的 <code>next</code> 指针全部建立完成后，移至第 N<em>N</em> 层，建立第 N+1<em>N</em>+1 层节点的 <code>next</code> 指针。</p>
</li>
<li><p>遍历某一层的节点时，这层节点的 <code>next</code> 指针已经建立。因此我们只需要知道这一层的最左节点，就可以按照链表方式遍历，不需要使用队列。</p>
</li>
<li><p>上面思路的伪代码如下：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">leftmost = root</span><br><span class="line"><span class="keyword">while</span> (leftmost.left != <span class="keyword">null</span>)</span><br><span class="line">&#123;</span><br><span class="line">    head = leftmost</span><br><span class="line">    <span class="keyword">while</span> (head.next != <span class="keyword">null</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="number">1</span>) Establish Connection <span class="number">1</span></span><br><span class="line">        <span class="number">2</span>) Establish Connection <span class="number">2</span> using next pointers</span><br><span class="line">        head = head.next</span><br><span class="line">    &#125;</span><br><span class="line">    leftmost = leftmost.left</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><img src="https://pic.leetcode-cn.com/Figures/116/img8.png" alt="img"></p>
</li>
</ol>
<ol start="4">
<li><p>两种类型的 <code>next</code> 指针，</p>
<ol>
<li><p>第一种情况两个子节点属于同一个父节点，因此直接通过父节点建立两个子节点的 <code>next</code> 指针即可。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">node.left.next = node.right</span><br></pre></td></tr></table></figure>

<p><img src="https://pic.leetcode-cn.com/Figures/116/img9.png" alt="img"></p>
</li>
<li><p>第二种情况是连接不同父节点之间子节点的情况。更具体地说，连接的是第一个父节点的右孩子和第二父节点的左孩子。由于已经在父节点这一层建立了 <code>next</code> 指针，因此可以直接通过第一个父节点的 <code>next</code> 指针找到第二个父节点，然后在它们的孩子之间建立连接。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">node.right.next = node.next.left</span><br></pre></td></tr></table></figure>

<p><img src="https://pic.leetcode-cn.com/Figures/116/img10.png" alt="img"></p>
</li>
</ol>
</li>
</ol>
<ol start="5">
<li><p>完成当前层的连接后，进入下一层重复操作，直到所有的节点全部连接。进入下一层后需要更新最左节点，然后从新的最左节点开始遍历该层所有节点。因为是完美二叉树，因此最左节点一定是当前层最左节点的左孩子。如果当前最左节点的左孩子不存在，说明已经到达该树的最后一层，完成了所有节点的连接。</p>
<p><img src="https://pic.leetcode-cn.com/Figures/116/img11.png" alt="img"></p>
</li>
</ol>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> Node <span class="title">connect</span><span class="params">(Node root)</span> </span>&#123;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (root == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> root;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// Start with the root node. There are no next pointers</span></span><br><span class="line">        <span class="comment">// that need to be set up on the first level</span></span><br><span class="line">        Node leftmost = root;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// Once we reach the final level, we are done</span></span><br><span class="line">        <span class="keyword">while</span> (leftmost.left != <span class="keyword">null</span>) &#123;</span><br><span class="line">            </span><br><span class="line">            <span class="comment">// Iterate the "linked list" starting from the head</span></span><br><span class="line">            <span class="comment">// node and using the next pointers, establish the </span></span><br><span class="line">            <span class="comment">// corresponding links for the next level</span></span><br><span class="line">            Node head = leftmost;</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">while</span> (head != <span class="keyword">null</span>) &#123;</span><br><span class="line">                </span><br><span class="line">                <span class="comment">// CONNECTION 1</span></span><br><span class="line">                head.left.next = head.right;</span><br><span class="line">                </span><br><span class="line">                <span class="comment">// CONNECTION 2</span></span><br><span class="line">                <span class="keyword">if</span> (head.next != <span class="keyword">null</span>) &#123;</span><br><span class="line">                    head.right.next = head.next.left;</span><br><span class="line">                &#125;</span><br><span class="line">                </span><br><span class="line">                <span class="comment">// Progress along the list (nodes on the current level)</span></span><br><span class="line">                head = head.next;</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">            <span class="comment">// Move onto the next level</span></span><br><span class="line">            leftmost = leftmost.left;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> root;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>ps:排版真费时间呀</p>
]]></content>
      <tags>
        <tag>LeetCode</tag>
        <tag>Tree</tag>
        <tag>Medium</tag>
      </tags>
  </entry>
  <entry>
    <title>LeetCode-114 Flatten Binary Tree to Linked List</title>
    <url>/2020/04/08/LeetCode-114/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>Level: Medium</p>
<p>Given a binary tree, flatten it to a linked list in-place.</p>
<p>For example, given the following tree:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">    1</span><br><span class="line">   / \</span><br><span class="line">  2   5</span><br><span class="line"> / \   \</span><br><span class="line">3   4   6</span><br></pre></td></tr></table></figure>

<p>The flattened tree should look like:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1</span><br><span class="line"> \</span><br><span class="line">  2</span><br><span class="line">   \</span><br><span class="line">    3</span><br><span class="line">     \</span><br><span class="line">      4</span><br><span class="line">       \</span><br><span class="line">        5</span><br><span class="line">         \</span><br><span class="line">          6</span><br></pre></td></tr></table></figure>

<a id="more"></a>

<p>思路:</p>
<p>​    一开始还以为是把树转成LinkedList，想着还挺简单，弄个先序遍历add进去就完事了。后来才发现理解错题意了。</p>
<p>代码:</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Definition for a binary tree node.</span></span><br><span class="line"><span class="comment"> * public class TreeNode &#123;</span></span><br><span class="line"><span class="comment"> *     int val;</span></span><br><span class="line"><span class="comment"> *     TreeNode left;</span></span><br><span class="line"><span class="comment"> *     TreeNode right;</span></span><br><span class="line"><span class="comment"> *     TreeNode(int x) &#123; val = x; &#125;</span></span><br><span class="line"><span class="comment"> * &#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> TreeNode prev = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">flatten</span><span class="params">(TreeNode root)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (root == <span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        flatten(root.right);</span><br><span class="line">        flatten(root.left);</span><br><span class="line">        root.right = prev;</span><br><span class="line">        root.left = <span class="keyword">null</span>;</span><br><span class="line">        prev = root;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>看见这种特别短的代码就头疼，没搞清楚递归的执行顺序，导致看不懂。今天先不做了，消化一下，没弄懂的地方还很多。</p>
]]></content>
      <tags>
        <tag>LeetCode</tag>
        <tag>Tree</tag>
        <tag>Medium</tag>
      </tags>
  </entry>
  <entry>
    <title>LeetCode-113 Path Sum II</title>
    <url>/2020/04/08/LeetCode-113/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>Level: Medium</p>
<p>Given a binary tree and a sum, find all root-to-leaf paths where each path’s sum equals the given sum.</p>
<p><strong>Note:</strong> A leaf is a node with no children.</p>
<p><strong>Example:</strong></p>
<p>Given the below binary tree and <code>sum = 22</code>,</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">      5</span><br><span class="line">     / \</span><br><span class="line">    4   8</span><br><span class="line">   /   / \</span><br><span class="line">  11  13  4</span><br><span class="line"> /  \    / \</span><br><span class="line">7    2  5   1</span><br></pre></td></tr></table></figure>

<p>Return:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[</span><br><span class="line">   [5,4,11,2],</span><br><span class="line">   [5,8,4,5]</span><br><span class="line">]</span><br></pre></td></tr></table></figure>

<a id="more"></a>

<p>思路:</p>
<p>​    和上一题类似，DFS先序遍历，建一个二维数组，遍历的时候add进去，但是具体代码写不出来，还是会卡住。</p>
<p>代码:</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Definition for a binary tree node.</span></span><br><span class="line"><span class="comment"> * public class TreeNode &#123;</span></span><br><span class="line"><span class="comment"> *     int val;</span></span><br><span class="line"><span class="comment"> *     TreeNode left;</span></span><br><span class="line"><span class="comment"> *     TreeNode right;</span></span><br><span class="line"><span class="comment"> *     TreeNode(int x) &#123; val = x; &#125;</span></span><br><span class="line"><span class="comment"> * &#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> List&lt;List&lt;Integer&gt;&gt; pathSum(TreeNode root, <span class="keyword">int</span> sum) &#123;</span><br><span class="line">        List&lt;List&lt;Integer&gt;&gt; result = <span class="keyword">new</span> ArrayList&lt;List&lt;Integer&gt;&gt;();</span><br><span class="line">        List&lt;Integer&gt; current = <span class="keyword">new</span> ArrayList&lt;Integer&gt;(); </span><br><span class="line">        <span class="keyword">return</span> helper(root,sum,result,current);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> List&lt;List&lt;Integer&gt;&gt; helper(TreeNode root,<span class="keyword">int</span> sum,List&lt;List&lt;Integer&gt;&gt; result, List&lt;Integer&gt; current)&#123;</span><br><span class="line">        <span class="keyword">if</span> (root == <span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> result; </span><br><span class="line">        &#125;</span><br><span class="line">        current.add(root.val);</span><br><span class="line">        <span class="keyword">if</span> (root.left == <span class="keyword">null</span> &amp;&amp; root.right == <span class="keyword">null</span> &amp;&amp; sum == root.val)&#123;</span><br><span class="line">            result.add(<span class="keyword">new</span> ArrayList(current));</span><br><span class="line">        &#125;</span><br><span class="line">        helper(root.left,sum -root.val,result,current);</span><br><span class="line">        helper(root.right,sum -root.val,result,current);</span><br><span class="line">        </span><br><span class="line">        current.remove(current.size()-<span class="number">1</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>递归这块还是有些薄弱，其实还是没能彻底弄懂递归的原理，不过比起几天前有进步了，之前连思路都没有。现在好歹有思路了，只是写不出来。</p>
]]></content>
      <tags>
        <tag>LeetCode</tag>
        <tag>Tree</tag>
        <tag>Medium</tag>
      </tags>
  </entry>
  <entry>
    <title>LeetCode-112 Path Sum</title>
    <url>/2020/04/08/LeetCode-112/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>Level: Easy</p>
<p>Given a binary tree and a sum, determine if the tree has a root-to-leaf path such that adding up all the values along the path equals the given sum.</p>
<p><strong>Note:</strong> A leaf is a node with no children.</p>
<p><strong>Example:</strong></p>
<p>Given the below binary tree and <code>sum = 22</code>,</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">      5</span><br><span class="line">     / \</span><br><span class="line">    4   8</span><br><span class="line">   /   / \</span><br><span class="line">  11  13  4</span><br><span class="line"> /  \      \</span><br><span class="line">7    2      1</span><br></pre></td></tr></table></figure>

<p>return true, as there exist a root-to-leaf path <code>5-&gt;4-&gt;11-&gt;2</code> which sum is 22.</p>
<a id="more"></a>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Definition for a binary tree node.</span></span><br><span class="line"><span class="comment"> * public class TreeNode &#123;</span></span><br><span class="line"><span class="comment"> *     int val;</span></span><br><span class="line"><span class="comment"> *     TreeNode left;</span></span><br><span class="line"><span class="comment"> *     TreeNode right;</span></span><br><span class="line"><span class="comment"> *     TreeNode(int x) &#123; val = x; &#125;</span></span><br><span class="line"><span class="comment"> * &#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">hasPathSum</span><span class="params">(TreeNode root, <span class="keyword">int</span> sum)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(root == <span class="keyword">null</span>) <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(root.left == <span class="keyword">null</span> &amp;&amp; root.right == <span class="keyword">null</span>) <span class="keyword">return</span> sum == root.val;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> hasPathSum(root.left, sum - root.val) || hasPathSum(root.right, sum - root.val);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>为啥有时候Easy的题目也做不出来。</p>
]]></content>
      <tags>
        <tag>LeetCode</tag>
        <tag>Tree</tag>
        <tag>Easy</tag>
      </tags>
  </entry>
  <entry>
    <title>LeetCode-111 Minimum Depth of Binary Tree</title>
    <url>/2020/04/08/LeetCode-111/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>Level: Easy</p>
<p>Given a binary tree, find its minimum depth.</p>
<p>The minimum depth is the number of nodes along the shortest path from the root node down to the nearest leaf node.</p>
<p><strong>Note:</strong> A leaf is a node with no children.</p>
<p><strong>Example:</strong></p>
<p>Given binary tree <code>[3,9,20,null,null,15,7]</code>,</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">  3</span><br><span class="line"> / \</span><br><span class="line">9  20</span><br><span class="line">  /  \</span><br><span class="line"> 15   7</span><br></pre></td></tr></table></figure>

<p>return its minimum depth = 2.</p>
<a id="more"></a>

<p>自己的解</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Definition for a binary tree node.</span></span><br><span class="line"><span class="comment"> * public class TreeNode &#123;</span></span><br><span class="line"><span class="comment"> *     int val;</span></span><br><span class="line"><span class="comment"> *     TreeNode left;</span></span><br><span class="line"><span class="comment"> *     TreeNode right;</span></span><br><span class="line"><span class="comment"> *     TreeNode(int x) &#123; val = x; &#125;</span></span><br><span class="line"><span class="comment"> * &#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">minDepth</span><span class="params">(TreeNode root)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> depth = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span> (root == <span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> helper(root,depth);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">helper</span><span class="params">(TreeNode root,<span class="keyword">int</span> depth)</span></span>&#123;</span><br><span class="line">        depth ++;</span><br><span class="line">        <span class="keyword">if</span> (root.left != <span class="keyword">null</span>)&#123;</span><br><span class="line">            helper(root.left,depth);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(root.right != <span class="keyword">null</span>)&#123;</span><br><span class="line">            helper(root.right,depth);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> depth;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>然而是错的。</p>
<p>正确答案:</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Definition for a binary tree node.</span></span><br><span class="line"><span class="comment"> * public class TreeNode &#123;</span></span><br><span class="line"><span class="comment"> *     int val;</span></span><br><span class="line"><span class="comment"> *     TreeNode left;</span></span><br><span class="line"><span class="comment"> *     TreeNode right;</span></span><br><span class="line"><span class="comment"> *     TreeNode(int x) &#123; val = x; &#125;</span></span><br><span class="line"><span class="comment"> * &#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">minDepth</span><span class="params">(TreeNode root)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (root == <span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> helper(root);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">helper</span><span class="params">(TreeNode root)</span></span>&#123;</span><br><span class="line">	<span class="keyword">if</span> (root.left == <span class="keyword">null</span>)	&#123;</span><br><span class="line">        <span class="keyword">return</span> minDepth(root.right) + <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">	<span class="keyword">if</span> (root.right == <span class="keyword">null</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> minDepth(root.left) + <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">	<span class="keyword">return</span> Math.min(minDepth(root.left),minDepth(root.right)) + <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>大体框架上是对了，但是细节还是不对，还是很菜。。。</p>
]]></content>
      <tags>
        <tag>LeetCode</tag>
        <tag>Tree</tag>
        <tag>Easy</tag>
      </tags>
  </entry>
  <entry>
    <title>LeetCode-110 Balanced Binary Tree</title>
    <url>/2020/04/08/LeetCode-110/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>Level: Easy</p>
<p>Given a binary tree, determine if it is height-balanced.</p>
<p>For this problem, a height-balanced binary tree is defined as:</p>
<blockquote>
<p>a binary tree in which the left and right subtrees of <em>every</em> node differ in height by no more than 1.</p>
</blockquote>
<p><strong>Example 1:</strong></p>
<p>Given the following tree <code>[3,9,20,null,null,15,7]</code>:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">  3</span><br><span class="line"> / \</span><br><span class="line">9  20</span><br><span class="line">  /  \</span><br><span class="line"> 15   7</span><br></pre></td></tr></table></figure>

<p>Return true.</p>
<p><strong>Example 2:</strong></p>
<p>Given the following tree <code>[1,2,2,3,3,null,null,4,4]</code>:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">      1</span><br><span class="line">     / \</span><br><span class="line">    2   2</span><br><span class="line">   / \</span><br><span class="line">  3   3</span><br><span class="line"> / \</span><br><span class="line">4   4</span><br></pre></td></tr></table></figure>

<a id="more"></a>

<p>思路:</p>
<p>​    个人想法，DFS然后用一个变量记录高度，看了评论区发现并没有这样的实现。</p>
<p>为什么难度为Easy的题目我却看不懂。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Definition for a binary tree node.</span></span><br><span class="line"><span class="comment"> * public class TreeNode &#123;</span></span><br><span class="line"><span class="comment"> *     int val;</span></span><br><span class="line"><span class="comment"> *     TreeNode left;</span></span><br><span class="line"><span class="comment"> *     TreeNode right;</span></span><br><span class="line"><span class="comment"> *     TreeNode(int x) &#123; val = x; &#125;</span></span><br><span class="line"><span class="comment"> * &#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isBalanced</span><span class="params">(TreeNode root)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(root == <span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> helper(root) != -<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">int</span> <span class="title">helper</span><span class="params">(TreeNode root)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(root == <span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> left = helper(root.left);</span><br><span class="line">        <span class="keyword">int</span> right = helper(root.right);</span><br><span class="line">        <span class="keyword">if</span>(left == -<span class="number">1</span> || right == -<span class="number">1</span> || Math.abs(left - right) &gt; <span class="number">1</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> Math.max(left, right) + <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>可能是对高度不熟吧，第一次碰见高度的题。</p>
]]></content>
      <tags>
        <tag>LeetCode</tag>
        <tag>Tree</tag>
        <tag>Easy</tag>
      </tags>
  </entry>
  <entry>
    <title>LeetCode-108 Convert Sorted Array to Binary Search Tree</title>
    <url>/2020/04/08/LeetCode-108/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>Level: Easy</p>
<p>Given an array where elements are sorted in ascending order, convert it to a height balanced BST.</p>
<p>For this problem, a height-balanced binary tree is defined as a binary tree in which the depth of the two subtrees of <em>every</em> node never differ by more than 1.</p>
<p><strong>Example:</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Given the sorted array: [-10,-3,0,5,9],</span><br><span class="line"></span><br><span class="line">One possible answer is: [0,-3,9,-10,null,5], which represents the following height balanced BST:</span><br><span class="line"></span><br><span class="line">      0</span><br><span class="line">     / \</span><br><span class="line">   -3   9</span><br><span class="line">   /   /</span><br><span class="line"> -10  5</span><br></pre></td></tr></table></figure>

<a id="more"></a>

<p>思路:</p>
<p>​    先找出根节点，再分别构建左右子树。由于是排序好的<code>Array</code>，那么数组中间的数就是这棵树的根节点。<code>int middle = start + (end-start)/2;</code>和<code>int middle = (start+end)/2;</code>后一种写法可能会造成<code>integer overflow</code>，为了避免这个应该尽量使用第一种。</p>
<p>解:</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Definition for a binary tree node.</span></span><br><span class="line"><span class="comment"> * public class TreeNode &#123;</span></span><br><span class="line"><span class="comment"> *     int val;</span></span><br><span class="line"><span class="comment"> *     TreeNode left;</span></span><br><span class="line"><span class="comment"> *     TreeNode right;</span></span><br><span class="line"><span class="comment"> *     TreeNode(int x) &#123; val = x; &#125;</span></span><br><span class="line"><span class="comment"> * &#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> TreeNode <span class="title">sortedArrayToBST</span><span class="params">(<span class="keyword">int</span>[] nums)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (nums.length == <span class="number">0</span> || nums == <span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> helper(nums,<span class="number">0</span>,nums.length -<span class="number">1</span>);</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> TreeNode <span class="title">helper</span><span class="params">(<span class="keyword">int</span>[] nums, <span class="keyword">int</span> start, <span class="keyword">int</span> end)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (start &gt; end)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">int</span> middle = start + (end-start)/<span class="number">2</span>;</span><br><span class="line">        </span><br><span class="line">        TreeNode node = <span class="keyword">new</span> TreeNode(nums[middle]);</span><br><span class="line">        node.left = helper(nums, start, middle -<span class="number">1</span>);</span><br><span class="line">        node.right = helper(nums, middle+<span class="number">1</span>, end);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> node;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>写树的算法，渐渐的有些感觉了。</p>
]]></content>
      <tags>
        <tag>LeetCode</tag>
        <tag>Tree</tag>
        <tag>Easy</tag>
      </tags>
  </entry>
  <entry>
    <title>LeetCode-107 Binary Tree Level Order Traversal II</title>
    <url>/2020/04/08/LeetCode-107/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>Level: Easy</p>
<p>Given a binary tree, return the <em>bottom-up level order</em> traversal of its nodes’ values. (ie, from left to right, level by level from leaf to root).</p>
<p>For example:<br>Given binary tree <code>[3,9,20,null,null,15,7]</code>,</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">  3</span><br><span class="line"> / \</span><br><span class="line">9  20</span><br><span class="line">  /  \</span><br><span class="line"> 15   7</span><br></pre></td></tr></table></figure>

<p>return its bottom-up level order traversal as:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[</span><br><span class="line">  [15,7],</span><br><span class="line">  [9,20],</span><br><span class="line">  [3]</span><br><span class="line">]</span><br></pre></td></tr></table></figure>

<a id="more"></a>

<p>类似于之前的102题，奇怪的是，102难度为Medium，而这题难度为Easy。</p>
<p>不过有点记不清之前的思路了，只记得用了<code>Queue</code>，利用<code>Queen</code> FIFO的特性。而这题可以用<code>Stack</code>，LIFO。</p>
<p>不过<code>Stack</code>没怎么玩过，看了眼评论区，发现还是用的<code>Queue</code>，最后add的时候用的是<code>list.add(0,item);</code>看到这终于弄懂了之前Z形层次遍历产生的一个疑问，也就是当时<code>list.add(0,xx);</code>的作用。之前一直以为如果<code>add</code>的地方原本有值，会把原来的值给覆盖掉，所以之前看到的时候没有搞懂这种写法。</p>
<p>有用的知识增加了.jpg</p>
<p>解:</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Definition for a binary tree node.</span></span><br><span class="line"><span class="comment"> * public class TreeNode &#123;</span></span><br><span class="line"><span class="comment"> *     int val;</span></span><br><span class="line"><span class="comment"> *     TreeNode left;</span></span><br><span class="line"><span class="comment"> *     TreeNode right;</span></span><br><span class="line"><span class="comment"> *     TreeNode(int x) &#123; val = x; &#125;</span></span><br><span class="line"><span class="comment"> * &#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">   <span class="keyword">public</span> List&lt;List&lt;Integer&gt;&gt; levelOrderBottom(TreeNode root) &#123;</span><br><span class="line">        List&lt;List&lt;Integer&gt;&gt; result = <span class="keyword">new</span> ArrayList&lt;List&lt;Integer&gt;&gt;();</span><br><span class="line">        <span class="keyword">if</span> (root == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> result;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        Queue&lt;TreeNode&gt; queue = <span class="keyword">new</span> LinkedList&lt;TreeNode&gt;();</span><br><span class="line">        queue.offer(root);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> (!queue.isEmpty()) &#123;</span><br><span class="line">            List&lt;Integer&gt; level = <span class="keyword">new</span> ArrayList&lt;Integer&gt;();</span><br><span class="line">            <span class="keyword">int</span> level_lengh = queue.size();</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; level_lengh; i++) &#123;</span><br><span class="line">                TreeNode node = queue.poll();</span><br><span class="line">                level.add(node.val);</span><br><span class="line">                <span class="keyword">if</span> (node.left != <span class="keyword">null</span>) &#123;</span><br><span class="line">                    queue.add(node.left);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (node.right != <span class="keyword">null</span>) &#123;</span><br><span class="line">                    queue.add(node.right);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            result.add(<span class="number">0</span>, level);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <tags>
        <tag>LeetCode</tag>
        <tag>Tree</tag>
        <tag>Easy</tag>
      </tags>
  </entry>
  <entry>
    <title>LeetCode-106 Construct Binary Tree from Inorder and Postorder Traversal</title>
    <url>/2020/04/08/LeetCode-106/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>Level: Medium</p>
<p>Given inorder and postorder traversal of a tree, construct the binary tree.</p>
<p><strong>Note:</strong><br>You may assume that duplicates do not exist in the tree.</p>
<p>For example, given</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">inorder = [9,3,15,20,7]</span><br><span class="line">postorder = [9,15,7,20,3]</span><br></pre></td></tr></table></figure>

<p>Return the following binary tree:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">  3</span><br><span class="line"> / \</span><br><span class="line">9  20</span><br><span class="line">  /  \</span><br><span class="line"> 15   7</span><br></pre></td></tr></table></figure>

<a id="more"></a>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Definition for a binary tree node.</span></span><br><span class="line"><span class="comment"> * public class TreeNode &#123;</span></span><br><span class="line"><span class="comment"> *     int val;</span></span><br><span class="line"><span class="comment"> *     TreeNode left;</span></span><br><span class="line"><span class="comment"> *     TreeNode right;</span></span><br><span class="line"><span class="comment"> *     TreeNode(int x) &#123; val = x; &#125;</span></span><br><span class="line"><span class="comment"> * &#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> TreeNode <span class="title">buildTree</span><span class="params">(<span class="keyword">int</span>[] inorder, <span class="keyword">int</span>[] postorder)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (inorder == <span class="keyword">null</span> || postorder == <span class="keyword">null</span> || inorder.length != postorder.length) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        Map&lt;Integer, Integer&gt; inMap = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; inorder.length; i++) &#123;</span><br><span class="line">            inMap.put(inorder[i], i);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> buildTreeHelper(inorder, <span class="number">0</span>, inorder.length - <span class="number">1</span>, postorder, <span class="number">0</span>, postorder.length - <span class="number">1</span>, inMap);</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> TreeNode <span class="title">buildTreeHelper</span><span class="params">(<span class="keyword">int</span>[] inorder, <span class="keyword">int</span> inStart, <span class="keyword">int</span> inEnd, <span class="keyword">int</span>[] postorder, <span class="keyword">int</span> postStart, <span class="keyword">int</span> postEnd, Map&lt;Integer, Integer&gt; inMap)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (inStart &gt; inEnd || postStart &gt; postEnd) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        TreeNode root = <span class="keyword">new</span> TreeNode(postorder[postEnd]);</span><br><span class="line">        <span class="keyword">int</span> numerLeft = inMap.get(postorder[postEnd]);</span><br><span class="line"></span><br><span class="line">        </span><br><span class="line">        root.left = buildTreeHelper(inorder, inStart, numerLeft - <span class="number">1</span>, postorder, postStart, postStart + numerLeft - inStart - <span class="number">1</span>, inMap);</span><br><span class="line">        root.right = buildTreeHelper(inorder, numerLeft + <span class="number">1</span>, inEnd, postorder, postStart + numerLeft - inStart, postEnd - <span class="number">1</span>, inMap);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> root;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>对于左右子树索引的计算和传入还有些困惑，例如</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">postStart + numerLeft - inStart - <span class="number">1</span></span><br></pre></td></tr></table></figure>

<p>和</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">postStart + numerLeft - inStart</span><br></pre></td></tr></table></figure>

<p>下次再做一遍，加深理解。</p>
]]></content>
      <tags>
        <tag>LeetCode</tag>
        <tag>Tree</tag>
        <tag>Medium</tag>
      </tags>
  </entry>
  <entry>
    <title>LeetCode 105 Construct Binary Tree from Preorder and Inorder Traversal</title>
    <url>/2020/04/03/LeetCode-105/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>Level: Medium</p>
<p>Construct Binary Tree from Preorder and Inorder Traversal</p>
<p>Given preorder and inorder traversal of a tree, construct the binary tree.</p>
<p><strong>Note:</strong><br>You may assume that duplicates do not exist in the tree.</p>
<p>For example, given</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">preorder = [3,9,20,15,7]</span><br><span class="line">inorder = [9,3,15,20,7]</span><br></pre></td></tr></table></figure>

<p>Return the following binary tree:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">  3</span><br><span class="line"> / \</span><br><span class="line">9  20</span><br><span class="line">  /  \</span><br><span class="line"> 15   7</span><br></pre></td></tr></table></figure>

<a id="more"></a>

<p>思路：</p>
<p>​    没有</p>
<p>阅读理解</p>
<p>方法1</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> TreeNode <span class="title">buildTree</span><span class="params">(<span class="keyword">int</span>[] preorder, <span class="keyword">int</span>[] inorder)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> helper(<span class="number">0</span>, <span class="number">0</span>, inorder.length - <span class="number">1</span>, preorder, inorder);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> TreeNode <span class="title">helper</span><span class="params">(<span class="keyword">int</span> preStart, <span class="keyword">int</span> inStart, <span class="keyword">int</span> inEnd, <span class="keyword">int</span>[] preorder, <span class="keyword">int</span>[] inorder)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (preStart &gt; preorder.length - <span class="number">1</span> || inStart &gt; inEnd) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    TreeNode root = <span class="keyword">new</span> TreeNode(preorder[preStart]);</span><br><span class="line">    <span class="keyword">int</span> inIndex = <span class="number">0</span>; <span class="comment">// Index of current root in inorder</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = inStart; i &lt;= inEnd; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (inorder[i] == root.val) &#123;</span><br><span class="line">            inIndex = i;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    root.left = helper(preStart + <span class="number">1</span>, inStart, inIndex - <span class="number">1</span>, preorder, inorder);</span><br><span class="line">    root.right = helper(preStart + inIndex - inStart + <span class="number">1</span>, inIndex + <span class="number">1</span>, inEnd, preorder, inorder);</span><br><span class="line">    <span class="keyword">return</span> root;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>方法2</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> TreeNode <span class="title">buildTree</span><span class="params">(<span class="keyword">int</span>[] preorder, <span class="keyword">int</span>[] inorder)</span> </span>&#123;</span><br><span class="line">    Map&lt;Integer, Integer&gt; inMap = <span class="keyword">new</span> HashMap&lt;Integer, Integer&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; inorder.length; i++) &#123;</span><br><span class="line">        inMap.put(inorder[i], i);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    TreeNode root = buildTree(preorder, <span class="number">0</span>, preorder.length - <span class="number">1</span>, inorder, <span class="number">0</span>, inorder.length - <span class="number">1</span>, inMap);</span><br><span class="line">    <span class="keyword">return</span> root;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> TreeNode <span class="title">buildTree</span><span class="params">(<span class="keyword">int</span>[] preorder, <span class="keyword">int</span> preStart, <span class="keyword">int</span> preEnd, <span class="keyword">int</span>[] inorder, <span class="keyword">int</span> inStart, <span class="keyword">int</span> inEnd, Map&lt;Integer, Integer&gt; inMap)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(preStart &gt; preEnd || inStart &gt; inEnd) <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">    TreeNode root = <span class="keyword">new</span> TreeNode(preorder[preStart]);</span><br><span class="line">    <span class="keyword">int</span> inRoot = inMap.get(root.val);</span><br><span class="line">    <span class="keyword">int</span> numsLeft = inRoot - inStart;</span><br><span class="line"></span><br><span class="line">    root.left = buildTree(preorder, preStart + <span class="number">1</span>, preStart + numsLeft, inorder, inStart, inRoot - <span class="number">1</span>, inMap);</span><br><span class="line">    root.right = buildTree(preorder, preStart + numsLeft + <span class="number">1</span>, preEnd, inorder, inRoot + <span class="number">1</span>, inEnd, inMap);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> root;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>方法3</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"> <span class="function"><span class="keyword">public</span> TreeNode <span class="title">buildTree</span><span class="params">(<span class="keyword">int</span>[] preorder, <span class="keyword">int</span>[] inorder)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(preorder.length!=inorder.length) <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    <span class="keyword">return</span> build(preorder, <span class="number">0</span>, preorder.length-<span class="number">1</span>, inorder, <span class="number">0</span>, inorder.length-<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> TreeNode <span class="title">build</span><span class="params">(<span class="keyword">int</span> [] preorder, <span class="keyword">int</span> preLow, <span class="keyword">int</span> preHigh, <span class="keyword">int</span>[] inorder, <span class="keyword">int</span> inLow, <span class="keyword">int</span> inHigh)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(preLow&gt;preHigh || inLow&gt;inHigh) <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    TreeNode root = <span class="keyword">new</span> TreeNode(preorder[preLow]);</span><br><span class="line">   </span><br><span class="line">    <span class="keyword">int</span> inorderRoot = inLow;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=inLow;i&lt;=inHigh;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(inorder[i]==root.val)&#123; inorderRoot=i; <span class="keyword">break</span>; &#125;</span><br><span class="line">    &#125;</span><br><span class="line">   </span><br><span class="line">    <span class="keyword">int</span> leftTreeLen = inorderRoot-inLow;</span><br><span class="line">    root.left = build(preorder, preLow+<span class="number">1</span>, preLow+leftTreeLen, inorder, inLow, inorderRoot-<span class="number">1</span>);</span><br><span class="line">    root.right = build(preorder, preLow+leftTreeLen+<span class="number">1</span>, preHigh, inorder, inorderRoot+<span class="number">1</span>, preHigh);       </span><br><span class="line">    <span class="keyword">return</span> root;        </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>这几个方法思路是一样的，区别在于获取中序遍历root位于数组中的index的方法不同，一个用了遍历，一个用了HashMap，当然几个都有一个共同的前提，数组里没有重复的数。</p>
<p>看了很久的代码，大致上明白了，总的思路如下:</p>
<ul>
<li>前序遍历的第一位一定是树的根节点，根据这个特性我们可以知道这棵树的根节点，进一步可以知道中序数组中根节点的位置。</li>
<li>中序遍历的特点是根节点左边为左子树，右边为右子树。</li>
<li>结合这两点可以知道这棵树左右节点的数量。</li>
<li>找到各个子树的根节点 <code>root</code></li>
<li>构建该根节点的左子树</li>
<li>构建该根节点的右子树</li>
</ul>
<p>自以为看懂了，去做106，结果做到关键地方还是卡住了，不知道是应该加还是减，说明还是没完全搞懂，先消化一下，明天再做106吧。</p>
]]></content>
      <tags>
        <tag>LeetCode</tag>
        <tag>Tree</tag>
        <tag>Medium</tag>
      </tags>
  </entry>
  <entry>
    <title>LeetCode-104 Maximum Depth of Binary Tree</title>
    <url>/2020/04/02/LeetCode-104/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>Maximum Depth of Binary Tree</p>
<p>Level: Easy</p>
<p>Given a binary tree, find its maximum depth.</p>
<p>The maximum depth is the number of nodes along the longest path from the root node down to the farthest leaf node.</p>
<p><strong>Note:</strong> A leaf is a node with no children.</p>
<p><strong>Example:</strong></p>
<p>Given binary tree <code>[3,9,20,null,null,15,7]</code>,</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">  3</span><br><span class="line"> / \</span><br><span class="line">9  20</span><br><span class="line">  /  \</span><br><span class="line"> 15   7</span><br></pre></td></tr></table></figure>

<p>return its depth = 3.</p>
<a id="more"></a>

<p>思路:</p>
<p>​    这题比较简单，用递归实现，中途想像平常的DFS一样直接return，想了想发现不行，然后卡了会。得把左右都算出来，比较一下，深度再加1。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Definition for a binary tree node.</span></span><br><span class="line"><span class="comment"> * public class TreeNode &#123;</span></span><br><span class="line"><span class="comment"> *     int val;</span></span><br><span class="line"><span class="comment"> *     TreeNode left;</span></span><br><span class="line"><span class="comment"> *     TreeNode right;</span></span><br><span class="line"><span class="comment"> *     TreeNode(int x) &#123; val = x; &#125;</span></span><br><span class="line"><span class="comment"> * &#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">maxDepth</span><span class="params">(TreeNode root)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (root == <span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> left = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> right = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span> (root.left != <span class="keyword">null</span>)&#123;</span><br><span class="line">            left = maxDepth(root.left);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (root.right != <span class="keyword">null</span>)&#123;</span><br><span class="line">            right = maxDepth(root.right);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> left&gt;=right?left+<span class="number">1</span>:right+<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>总体写下来还比较顺，没用idea，页面里纯手写，一次编译运行通过。虽然是个Easy难度的题目，但还是能感受到因为进步带来的小小的成就感。</p>
<p>提交完，照旧看了下讨论区。发现别人只要一行就实现了，淦。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">maxDepth</span><span class="params">(TreeNode root)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> root==<span class="keyword">null</span>? <span class="number">0</span> : Math.max(maxDepth(root.left), maxDepth(root.right))+<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//https://leetcode.com/problems/maximum-depth-of-binary-tree/discuss/34216/Simple-solution-using-Java</span></span><br><span class="line"><span class="comment">// author:dennyrong</span></span><br></pre></td></tr></table></figure>

<p>看了下，大致 的思路是一样的。三元运算符我也用到了，只不过真没想过用Math.max()这个函数，还是得继续努力呀。</p>
]]></content>
      <tags>
        <tag>LeetCode</tag>
        <tag>Tree</tag>
        <tag>Easy</tag>
      </tags>
  </entry>
  <entry>
    <title>LeetCode-103 Binary Tree Zigzag Level Order Traversal</title>
    <url>/2020/04/02/LeetCode-103/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>Level: Medium</p>
<p>Given a binary tree, return the <em>level order</em> traversal of its nodes’ values. (ie, from left to right, level by level).</p>
<p>For example:<br>Given binary tree <code>[3,9,20,null,null,15,7]</code>,</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">  3</span><br><span class="line"> / \</span><br><span class="line">9  20</span><br><span class="line">  /  \</span><br><span class="line"> 15   7</span><br></pre></td></tr></table></figure>

<p>return its level order traversal as:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[</span><br><span class="line">  [3],</span><br><span class="line">  [9,20],</span><br><span class="line">  [15,7]</span><br><span class="line">]</span><br></pre></td></tr></table></figure>

<a id="more"></a>

<p>思路:</p>
<p>​    题目的需求跟102题很相似，第一反应就是先照着102写，然后在这个基础之上改改。主要是想着改下面这一段，左改右，右改左之类的。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (node.left != <span class="keyword">null</span>) &#123;</span><br><span class="line">    queue.add(node.left);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (node.right != <span class="keyword">null</span>) &#123;</span><br><span class="line">    queue.add(node.right);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>而然改了半天，发现做不到题目要求的效果。于是乎又求助评论区。果然在原有的基础上加了个标志位，并且新增了一段</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (zigzag) &#123;</span><br><span class="line">    level.add(<span class="number">0</span>, node.val);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">    level.add(node.val);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>这个代码后，就能符合题目的要求了，和我心里的预期是相符的。</p>
<p>但是没看懂这一段的意义，就去了leetcode cn，希望能找个中文的思路看下。结果让我没想到的是，力扣中国这题的写法居然完全换了一种思路。属实8行。</p>
]]></content>
      <tags>
        <tag>LeetCode</tag>
        <tag>Tree</tag>
        <tag>Medium</tag>
      </tags>
  </entry>
  <entry>
    <title>LeetCode-102 Binary Tree Level Order Traversal</title>
    <url>/2020/04/02/LeetCode-102/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>Level: Medium</p>
<p>Given a binary tree, return the <em>level order</em> traversal of its nodes’ values. (ie, from left to right, level by level).</p>
<p>For example:<br>Given binary tree <code>[3,9,20,null,null,15,7]</code>,</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">  3</span><br><span class="line"> / \</span><br><span class="line">9  20</span><br><span class="line">  /  \</span><br><span class="line"> 15   7</span><br></pre></td></tr></table></figure>

<p>return its level order traversal as:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[</span><br><span class="line">  [3],</span><br><span class="line">  [9,20],</span><br><span class="line">  [15,7]</span><br><span class="line">]</span><br></pre></td></tr></table></figure>

<a id="more"></a>

<p>思路:</p>
<p>​    层次遍历。</p>
<p>​    然而不会写层次遍历，于是直奔评论区，找了个最高赞的答案看了看，大致上看懂了。</p>
<div class="note info">
            <p>算法</p><p>上面的递归方法也可以写成迭代的形式。</p><p>我们将树上顶点按照层次依次放入队列结构中，队列中元素满足 FIFO（先进先出）的原则。在 Java 中可以使用 Queue 接口中的 LinkedList实现。在 Python 中如果使用 Queue 结构，但因为它是为多线程之间安全交换而设计的，所以使用了锁，会导致性能不佳。因此在 Python 中可以使用 deque 的 append() 和 popleft() 函数来快速实现队列的功能。</p><p>第 0 层只包含根节点 root ，算法实现如下：</p><p>初始化队列只包含一个节点 root 和层次编号 0 ： level = 0。<br>当队列非空的时候：<br>在输出结果 levels 中插入一个空列表，开始当前层的算法。<br>计算当前层有多少个元素：等于队列的长度。<br>将这些元素从队列中弹出，并加入 levels 当前层的空列表中。<br>将他们的孩子节点作为下一层压入队列中。<br>进入下一层 level++。</p>
          </div>

<p>实现</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">  <span class="keyword">public</span> List&lt;List&lt;Integer&gt;&gt; levelOrder(TreeNode root) &#123;</span><br><span class="line">    List&lt;List&lt;Integer&gt;&gt; levels = <span class="keyword">new</span> ArrayList&lt;List&lt;Integer&gt;&gt;();</span><br><span class="line">    <span class="keyword">if</span> (root == <span class="keyword">null</span>) <span class="keyword">return</span> levels;</span><br><span class="line"></span><br><span class="line">    Queue&lt;TreeNode&gt; queue = <span class="keyword">new</span> LinkedList&lt;TreeNode&gt;();</span><br><span class="line">    queue.add(root);</span><br><span class="line">    <span class="keyword">int</span> level = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> ( !queue.isEmpty() ) &#123;</span><br><span class="line">      <span class="comment">// start the current level</span></span><br><span class="line">      levels.add(<span class="keyword">new</span> ArrayList&lt;Integer&gt;());</span><br><span class="line"></span><br><span class="line">      <span class="comment">// number of elements in the current level</span></span><br><span class="line">      <span class="keyword">int</span> level_length = queue.size();</span><br><span class="line">      <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; level_length; ++i) &#123;</span><br><span class="line">        TreeNode node = queue.remove();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// fulfill the current level</span></span><br><span class="line">        levels.get(level).add(node.val);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// add child nodes of the current level</span></span><br><span class="line">        <span class="comment">// in the queue for the next level</span></span><br><span class="line">        <span class="keyword">if</span> (node.left != <span class="keyword">null</span>) queue.add(node.left);</span><br><span class="line">        <span class="keyword">if</span> (node.right != <span class="keyword">null</span>) queue.add(node.right);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="comment">// go to next level</span></span><br><span class="line">      level++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> levels;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* https://leetcode-cn.com/problems/binary-tree-level-order-</span></span><br><span class="line"><span class="comment">* traversal/solution/er-cha-shu-de-ceng-ci-bian-li-by-leetcode/</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>

<p>方法2:</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">List&lt;List&lt;Integer&gt;&gt; res = <span class="keyword">new</span> ArrayList&lt;&gt;();  </span><br><span class="line"><span class="keyword">if</span> (root == <span class="keyword">null</span>) <span class="keyword">return</span> res;  </span><br><span class="line">Queue&lt;TreeNode&gt; queue = <span class="keyword">new</span> LinkedList&lt;&gt;();  </span><br><span class="line">queue.add(root);  </span><br><span class="line"><span class="keyword">while</span> (!queue.isEmpty()) &#123;  </span><br><span class="line">　　List&lt;Integer&gt; level = <span class="keyword">new</span> ArrayList&lt;&gt;();  </span><br><span class="line">　　<span class="keyword">int</span> cnt = queue.size();  </span><br><span class="line">　　<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; cnt; i++) &#123;  </span><br><span class="line">　　　　TreeNode node = queue.poll();  </span><br><span class="line">　　　　level.add(node.val);  </span><br><span class="line">　　　　<span class="keyword">if</span> (node.left != <span class="keyword">null</span>) &#123;  </span><br><span class="line">　　　　　　queue.add(node.left);  </span><br><span class="line">　　　　&#125;</span><br><span class="line">　　　　<span class="keyword">if</span> (node.right != <span class="keyword">null</span>) &#123;  </span><br><span class="line">　　　　　　queue.add(node.right);  </span><br><span class="line">　　　　&#125;  </span><br><span class="line">　　&#125;  </span><br><span class="line">　　res.add(level);   </span><br><span class="line">&#125;  </span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* https://leetcode.com/problems/binary-tree-level-order-</span></span><br><span class="line"><span class="comment">* traversal/discuss/33450/Java-solution-with-a-queue-used</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>

]]></content>
      <tags>
        <tag>LeetCode</tag>
        <tag>Tree</tag>
        <tag>Medium</tag>
      </tags>
  </entry>
  <entry>
    <title>LeetCode-101 Symmetric Tree Easy</title>
    <url>/2020/04/01/LeetCode-101/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>Symmetric Tree Level:Easy</p>
<p>题目:</p>
<p>Given a binary tree, check whether it is a mirror of itself (ie, symmetric around its center).</p>
<p>For example, this binary tree <code>[1,2,2,3,4,4,3]</code> is symmetric:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">    1</span><br><span class="line">   / \</span><br><span class="line">  2   2</span><br><span class="line"> / \ / \</span><br><span class="line">3  4 4  3</span><br></pre></td></tr></table></figure>



<p>But the following <code>[1,2,2,null,3,null,3]</code> is not:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">  1</span><br><span class="line"> / \</span><br><span class="line">2   2</span><br><span class="line"> \   \</span><br><span class="line"> 3    3</span><br></pre></td></tr></table></figure>



<p><strong>Note:</strong><br>Bonus points if you could solve it both recursively and iteratively.</p>
<a id="more"></a>

<p>思路，迭代判断第一层是否为空，第二层左右节点是否相等，第三层左子树的左节点是否等于右子树的右节点，并且左子树的右节点是否等于右子树的左节点。</p>
<p>完整代码:</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Definition for a binary tree node.</span></span><br><span class="line"><span class="comment"> * public class TreeNode &#123;</span></span><br><span class="line"><span class="comment"> *     int val;</span></span><br><span class="line"><span class="comment"> *     TreeNode left;</span></span><br><span class="line"><span class="comment"> *     TreeNode right;</span></span><br><span class="line"><span class="comment"> *     TreeNode(int x) &#123; val = x; &#125;</span></span><br><span class="line"><span class="comment"> * &#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isSymmetric</span><span class="params">(TreeNode root)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (root == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> helper(root.left, root.right);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">helper</span><span class="params">(TreeNode left, TreeNode right)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (left == <span class="keyword">null</span> || right == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> left == right;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (left.val != right.val) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> helper(left.left, right.right) &amp;&amp; helper(left.right, right.left);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>太冤了，今天复习的时候<code>root == null</code>我<code>return false</code>，submit的时候遇到<code>test case: []</code>居然算我错了，按题意<code>null</code>的时候应该返回<code>ture</code>，太扯了，空的树也算对称的吗？因为这个降低了accept率太亏了。</p>
<p>复习:</p>
<table>
<thead>
<tr>
<th align="left">Time Submitted</th>
<th align="center">Status</th>
<th align="center">Runtime</th>
<th align="center">Memory</th>
<th align="center">Language</th>
</tr>
</thead>
<tbody><tr>
<td align="left">4 minutes ago</td>
<td align="center"><a href="https://leetcode.com/submissions/detail/322499213/" target="_blank" rel="noopener">Accepted</a></td>
<td align="center">1 ms</td>
<td align="center">39.2 MB</td>
<td align="center">java</td>
</tr>
<tr>
<td align="left">5 minutes ago</td>
<td align="center"><a href="https://leetcode.com/submissions/detail/322498907/" target="_blank" rel="noopener">Wrong Answer</a></td>
<td align="center">N/A</td>
<td align="center">N/A</td>
<td align="center">java</td>
</tr>
<tr>
<td align="left">8 days ago</td>
<td align="center"><a href="https://leetcode.com/submissions/detail/318427336/" target="_blank" rel="noopener">Accepted</a></td>
<td align="center">0 ms</td>
<td align="center">37.7 MB</td>
<td align="center">java</td>
</tr>
<tr>
<td align="left">9 days ago</td>
<td align="center"><a href="https://leetcode.com/submissions/detail/318110372/" target="_blank" rel="noopener">Accepted</a></td>
<td align="center">0 ms</td>
<td align="center">38 MB</td>
<td align="center">java</td>
</tr>
</tbody></table>
<p>Last update time: 2020年4月10日 15点19分</p>
]]></content>
      <tags>
        <tag>LeetCode</tag>
        <tag>Tree</tag>
        <tag>Easy</tag>
      </tags>
  </entry>
  <entry>
    <title>LeetCode-100 Same Tree</title>
    <url>/2020/04/01/LeetCode-100/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>Same Tree  Level:Easy</p>
<p>题目:</p>
<p>Given two binary trees, write a function to check if they are the same or not.</p>
<p>Two binary trees are considered the same if they are structurally identical and the nodes have the same value.</p>
<p><strong>Example 1:</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Input:     1         1</span><br><span class="line">          / \       / \</span><br><span class="line">         2   3     2   3</span><br><span class="line"></span><br><span class="line">        [1,2,3],   [1,2,3]</span><br><span class="line"></span><br><span class="line">Output: true</span><br></pre></td></tr></table></figure>

<p><strong>Example 2:</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Input:     1         1</span><br><span class="line">          /           \</span><br><span class="line">         2             2</span><br><span class="line"></span><br><span class="line">        [1,2],     [1,null,2]</span><br><span class="line"></span><br><span class="line">Output: false</span><br></pre></td></tr></table></figure>

<p><strong>Example 3:</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Input:     1         1</span><br><span class="line">          / \       / \</span><br><span class="line">         2   1     1   2</span><br><span class="line"></span><br><span class="line">        [1,2,1],   [1,1,2]</span><br><span class="line"></span><br><span class="line">Output: false</span><br></pre></td></tr></table></figure>

<a id="more"></a>

<p>解答:</p>
<p>脑海里的第一个想法就是遍历两棵树，然后比较相同节点的大小，但凡有一个不相等就说明不是同样的树。<br>具体思路:</p>
<p>首先判断两个节点是否为空</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(p==<span class="keyword">null</span>&amp;&amp;q==<span class="keyword">null</span>)&#123;</span><br><span class="line">	<span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(p!=<span class="keyword">null</span>||q!=<span class="keyword">null</span>)&#123;</span><br><span class="line">	<span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>然后对比根节点root，根节点不同直接返回false，根节点相同再判断左右子节点。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(p.val==q.val)&#123;</span><br><span class="line">    <span class="keyword">return</span> isSameTree(p.left==q.left)&amp;&amp;isSameTree(p.right==q.right);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>完整代码</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Definition for a binary tree node.</span></span><br><span class="line"><span class="comment"> * public class TreeNode &#123;</span></span><br><span class="line"><span class="comment"> *     int val;</span></span><br><span class="line"><span class="comment"> *     TreeNode left;</span></span><br><span class="line"><span class="comment"> *     TreeNode right;</span></span><br><span class="line"><span class="comment"> *     TreeNode(int x) &#123; val = x; &#125;</span></span><br><span class="line"><span class="comment"> * &#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isSameTree</span><span class="params">(TreeNode p, TreeNode q)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (p == <span class="keyword">null</span> || q == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> (p==q);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (p.val == q.val) &#123;</span><br><span class="line">            <span class="keyword">return</span> isSameTree(p.left, q.left) &amp;&amp; isSameTree(p.right, q.right);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>复习:</p>
<table>
<thead>
<tr>
<th align="center">Time Submitted</th>
<th align="center">Status</th>
<th align="center">Runtime</th>
<th align="center">Memory</th>
<th align="center">Language</th>
</tr>
</thead>
<tbody><tr>
<td align="center">a few seconds ago</td>
<td align="center"><a href="https://leetcode.com/submissions/detail/322491499/" target="_blank" rel="noopener">Accepted</a></td>
<td align="center">0 ms</td>
<td align="center">36.9 MB</td>
<td align="center">java</td>
</tr>
<tr>
<td align="center">9 days ago</td>
<td align="center"><a href="https://leetcode.com/submissions/detail/318105503/" target="_blank" rel="noopener">Accepted</a></td>
<td align="center">0 ms</td>
<td align="center">37.5 MB</td>
<td align="center">java</td>
</tr>
</tbody></table>
<p>Last update time : 2020年4月10日 14点50分</p>
<ol>
<li>9天前，解法已经有些模糊了，勉勉强强写出了个框架，但是没弄通过。</li>
</ol>
]]></content>
      <tags>
        <tag>LeetCode</tag>
        <tag>Tree</tag>
        <tag>Easy</tag>
      </tags>
  </entry>
  <entry>
    <title>移民计划</title>
    <url>/2020/04/01/%E7%A7%BB%E6%B0%91%E8%AE%A1%E5%88%92/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h1 id="移民"><a href="#移民" class="headerlink" title="移民"></a>移民</h1><a id="more"></a>

<h2 id="加拿大-移民快速通道-Express-Entry"><a href="#加拿大-移民快速通道-Express-Entry" class="headerlink" title="加拿大 移民快速通道 Express Entry"></a>加拿大 移民快速通道 Express Entry</h2><h3 id="基本要求"><a href="#基本要求" class="headerlink" title="基本要求"></a>基本要求</h3><p>　　打算居住在魁北克以外的省份；<br>　　过去10年内，有带薪的、一年以上的连续的全职（或等同的兼职）工作，从事同一个职业，在NOC 0，A或者B类别中；<br>　　英语或法语至少达到CLB 7级（雅思4个6）；<br>　　六项打分超过67。</p>
<p>年龄: 27(30岁一下最高分) 12分<br>学历: 本科 21分(博士25(满分),硕士23(看能不能弄个硕士学位))<br>雅思: 6/6/6/6 16分<br>工作: 5 年 13分(满分15 6年)<br>单身: 0<br>总: 62<br>分数不够入池,除非找个女朋友或者雅思7</p>
<h3 id="联邦技术移民-Federal-Skilled-Workers"><a href="#联邦技术移民-Federal-Skilled-Workers" class="headerlink" title="联邦技术移民 Federal Skilled Workers"></a>联邦技术移民 Federal Skilled Workers</h3><p>总分336差的太多</p>
<h3 id="安省优才计划-–-快速通道"><a href="#安省优才计划-–-快速通道" class="headerlink" title="安省优才计划 – 快速通道"></a>安省优才计划 – 快速通道</h3><h3 id="NSNP新斯科舍省提名移民项目-NSNP紧缺职业EE类别-Catogory-B"><a href="#NSNP新斯科舍省提名移民项目-NSNP紧缺职业EE类别-Catogory-B" class="headerlink" title="NSNP新斯科舍省提名移民项目 - NSNP紧缺职业EE类别 - Catogory B"></a>NSNP新斯科舍省提名移民项目 - NSNP紧缺职业EE类别 - Catogory B</h3><p>不需要雇主offer</p>
<h3 id="SINP萨省提名移民项目-2019-萨省无雇主技术移民项目"><a href="#SINP萨省提名移民项目-2019-萨省无雇主技术移民项目" class="headerlink" title="SINP萨省提名移民项目 - 2019- 萨省无雇主技术移民项目"></a>SINP萨省提名移民项目 - 2019- 萨省无雇主技术移民项目</h3><ul>
<li>SINP 技术移民EE类别（International Skilled Worker: Saskatchewan Express Entry）</li>
<li>SINP 技术移民OID类别（International Skilled Worker: Occupation In-Demand）</li>
</ul>
<h4 id="SINP-EE类别申请条件-飞出国"><a href="#SINP-EE类别申请条件-飞出国" class="headerlink" title="SINP EE类别申请条件 - 飞出国"></a>SINP EE类别申请条件 - 飞出国</h4><p>SINP技术移民EE类别要求申请人的职业在萨省紧缺职业列表当中，首先需满足联邦技术移民67分评分标准进入EE池，这也就意味着该类申请人雅思需要达到4个6的成绩，同时还需满足SINP评分60分的标准。</p>
<p>成功创建EE，并进入EE候选池，获得EE账户号码（Express Entry profile Number）和求职验证代码（Job Seeker Validation Code）；</p>
<p>获得SINP萨省技术移民评分标准100分中的60分；</p>
<p>提供指定考试机构出具的有效语言考试成绩，考试成绩应与EE账户中所提交的成绩相匹配；</p>
<p>完成与加拿大教育体系相匹配的至少一年的高等教育、培训或学徒期，并获得文凭、证书或学位；</p>
<p>海外学历申请人需通过指定机构的ECA学历认证；</p>
<p>申请人的专业或受训职业必须符合以下所列条件之一：</p>
<p>过去10年中至少1年非技工类有偿工作经验；</p>
<p>过去5年中至少2年技工类有偿工作经验；或</p>
<p>过去3年中至少12个月加拿大工作经验（技工类或非技工类均可）；</p>
<p>职业必须在萨省紧缺职业列表当中，并且属于NOC 0、A、B类；</p>
<p>如果申请人的职业在萨省为受管制职业，则需首先通过萨省认证，才能提交移民申请；</p>
<p>具备充足的安家资金及定居计划。</p>
<h4 id="SINP-OID类别申请条件-飞出国"><a href="#SINP-OID类别申请条件-飞出国" class="headerlink" title="SINP OID类别申请条件 - 飞出国"></a>SINP OID类别申请条件 - 飞出国</h4><p>SINP技术移民OID类别要求申请人的职业在萨省紧缺职业列表当中，满足SINP评分60分的标准，其中语言打分与EE类别略有不同，OID类别语言达到CLB 4即可得到12分加分，这一标准不适用于EE类别，因此许多雅思无法达到4个6的申请人，只要其他条件满足即可通过该途径申请移民。</p>
<p>获得SINP萨省技术移民评分标准100分中的60分；</p>
<p>语言至少达到CLB4，雇主和监管机构可能会要求更高的语言成绩；</p>
<p>完成与加拿大教育体系相匹配的至少一年的高等教育、培训或学徒期，并获得文凭、证书或学位；</p>
<p>海外学历申请人需通过指定机构的ECA学历认证；</p>
<p>过去十年内具备至少一年相关工作经验，职业类别属于NOC 0、A和B类；</p>
<p>如果申请人的职业在萨省为受管制职业，则需首先通过萨省认证，才能提交移民申请；</p>
<p>具备充足的安家资金及定居计划。</p>
<h4 id="杂"><a href="#杂" class="headerlink" title="杂"></a>杂</h4><p>QSW    魁省，20180802后实施高分选，法语将变的最重要，其次是魁北克学历且高分专业，再次是有job offer的，三者有2项以上的基本无悬念。需要法语好或专业好，最新受训加分调整，计算机,会计，航空航天，银行和金融，生物，土木建筑，地球，电子电气，食品，地质，水文，机械，护理，物理，植物，食品加工等只有9分。</p>
<p>SINP    萨省，20180716后改为 EOI 择优选，第一次邀请68分，有萨省亲属，有萨省留学和工作经验的申请人更占优势。分为EE和OID（非EE）两种类型，雅思要求低，适合工作经验久的申请人，热门紧缺职业：工程师经理，土木、计算机软硬件工程师，农业，园林，电子维修，经济学家可以申请；</p>
<p>NSNP    新省，当前还是抢配额，2018年只开放一次，当前只有EE，核心紧缺职业：金融审计会计，广告，市场，公关，行政助理，财务出纳，土木工程，护士，大专院校讲师，社工，抢配额工作量大，而且职业清单和申请流程说变就变；另外20180802 NS LMP 增加了直接去EE池子里挑选紧缺职业的类别。</p>
<p>OINP    安省 ，分为高分类别（HCP类EE分数400分以上有希望，偶尔有职业限制，当前邀请分数在430分以上，2018年4月后没有再邀请）和法语类别（法语B2，申请人少，无EE分数和配额限制）；安省认可大学的硕博可以无雇主offer移民，限定学校，学历，且需要毕业2年内申请</p>
<p>NBNP    NB省，有直系亲属，法语好或参加过宣讲会且职业属于计算机，厨师，酒店餐饮服务经理，会计出纳，健康护理经理，零售主管等，需要满足加拿大联邦EE要求。</p>
<p>MPNP    曼省，有曼省紧缺职业工作经验且与曼省有紧密联系，包括曼省有亲戚朋友担保，有曼省留学、工作经验，有曼省自己的EOI评分，，分为 EE 和 HCP（非EE）</p>
<p>PEIPNP    PEI EE 类别允许无雇主offer，但要求与 PEI 有较紧密联系，例如PEI工作过，留学过，有亲属，有房产等，需要满足加拿大联邦EE要求</p>
<h2 id="澳大利亚-技术移民-491"><a href="#澳大利亚-技术移民-491" class="headerlink" title="澳大利亚 技术移民 491"></a>澳大利亚 技术移民 491</h2>]]></content>
      <tags>
        <tag>计划</tag>
        <tag>移民</tag>
      </tags>
  </entry>
  <entry>
    <title>雅思备考计划</title>
    <url>/2020/03/25/%E9%9B%85%E6%80%9D%E5%A4%87%E8%80%83%E8%AE%A1%E5%88%92/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h1 id="计划"><a href="#计划" class="headerlink" title="计划"></a>计划</h1><a id="more"></a>

<h2 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h2><ul>
<li>iPad Pro 蹲一个教育优惠</li>
<li>剑桥雅思真题9-14? 4-9?4-14? 正版太贵，尽量支持正版吧，不行就盗版。</li>
<li>安静的地方，在附近物色一个图书馆，周末泡图书馆，6月房子到期，到时候还的重新找个。<ul>
<li>图书馆的准备<ul>
<li>水杯</li>
<li>iPad</li>
<li>手机</li>
<li>耳机</li>
<li>书</li>
<li>笔记本</li>
<li>笔</li>
<li>充电宝？</li>
<li>包</li>
</ul>
</li>
</ul>
</li>
<li><del>一个一起学习的女朋友</del></li>
<li>干净的着装</li>
</ul>
<h2 id="时间安排"><a href="#时间安排" class="headerlink" title="时间安排"></a>时间安排</h2><p>合理利用工作的空余时间，上下班的通勤时间，以及周末和假期。<br>上下班通勤时间2个小时左右。刨去走路和骑车所花的时间，单在地铁车厢里的时间保守估计有1小时30分左右。</p>
<p>周末:</p>
<ul>
<li><p>9点，起床，半个小时洗漱，吃早餐</p>
</li>
<li><p>9点30 出门</p>
</li>
<li><p>到图书馆时间未定</p>
</li>
<li><p>12点吃饭</p>
</li>
<li><p>午休一小时</p>
</li>
<li><p>1点继续</p>
</li>
<li><p>5点吃晚饭</p>
</li>
<li><p>离开时间待定</p>
</li>
</ul>
<p>更细致的安排待定，比如背单词多少分钟，写作多少分钟，听力多少分钟。<br>待早期的摸索和后期的调整。</p>
<p>考虑是否应该设置休息日，还是说每日余下的时间作为休息就足够了。</p>
<h2 id="目的"><a href="#目的" class="headerlink" title="目的"></a>目的</h2><p>听/读/写/说 8/7/7/7<br>找一个志同道合的女朋友</p>
]]></content>
  </entry>
  <entry>
    <title>移民相关</title>
    <url>/2020/03/24/%E7%A7%BB%E6%B0%91%E7%9B%B8%E5%85%B3/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>大学时的计划30岁之前移民的，不知不觉只剩5年了，再这样浑浑噩噩，感觉就实现不了了。</p>
<a id="more"></a>

<p>要开始做一些详细的准备了，暂定这几个</p>
<p>日本：职场压力比较大的样子</p>
<p>美国：最向往，技术移民太难，移民政策收紧，只能想着过去生个孩子，帮下一代弄个美国籍。</p>
<p>加拿大：天气有点冷，有百万移民的政策。</p>
<p>新西兰：听说四国里最简单的，优势是回头签。年龄和职业是优势，最大的问题是英语，雅思得7炸或者8炸。计划WHV签证落地，找工作换长期签证。可惜19年停止了银蕨签证，又少了个渠道。</p>
<p>澳大利亚：好像对华人不太友好。政策收紧，EOI分数要求越来越高。</p>
<p>希望能有个一起努力的女朋友，不知道txh愿不愿意移民。配偶英语不错也能加分。</p>
]]></content>
  </entry>
  <entry>
    <title>《和莎莫的500天》</title>
    <url>/2019/12/22/%E3%80%8A%E5%92%8C%E8%8E%8E%E8%8E%AB%E7%9A%84500%E5%A4%A9%E3%80%8B/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>🎬《和莎莫的500天》</p>
<p><a href="https://www.youtube.com/watch?v=4u0vsKXqd04" target="_blank" rel="noopener">https://www.youtube.com/watch?v=4u0vsKXqd04</a></p>
<p>摘一个评论：</p>
<p>“就是小男生情窦初开，遇上情场老手。渣女最后玩累了，想上岸，觉得男生太单纯，根本不合适她。男生经过渣女洗礼，也开始渣了” —–dongyong sun</p>
]]></content>
  </entry>
  <entry>
    <title>快乐周末</title>
    <url>/2019/12/21/%E5%BF%AB%E4%B9%90%E5%91%A8%E6%9C%AB/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p><del>斯达拉斯达拉</del>新西游记第七季</p>
<p>闲着干嘛呢</p>
<p>RM</p>
<p>炎炎消防队</p>
]]></content>
  </entry>
  <entry>
    <title>果然还是放弃吧</title>
    <url>/2019/08/17/%E6%9E%9C%E7%84%B6%E8%BF%98%E6%98%AF%E6%94%BE%E5%BC%83%E5%90%A7/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script>]]></content>
  </entry>
  <entry>
    <title>又说错话</title>
    <url>/2019/08/17/%E5%8F%88%E8%AF%B4%E9%94%99%E8%AF%9D/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script>]]></content>
  </entry>
  <entry>
    <title>虽然不想面对</title>
    <url>/2019/08/15/%E8%99%BD%E7%84%B6%E4%B8%8D%E6%83%B3%E9%9D%A2%E5%AF%B9/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script>]]></content>
  </entry>
  <entry>
    <title>没什么积极性</title>
    <url>/2019/08/12/%E6%B2%A1%E4%BB%80%E4%B9%88%E7%A7%AF%E6%9E%81%E6%80%A7/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>以前工作很认真，这大半年很混，之前被扣了2000工资，8月工资又要被扣5000，但是心里没什么感觉，真是病了。</p>
]]></content>
  </entry>
  <entry>
    <title>爱在黎明破晓前</title>
    <url>/2019/08/11/%E7%88%B1%E5%9C%A8%E9%BB%8E%E6%98%8E%E7%A0%B4%E6%99%93%E5%89%8D/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>以前对爱情期待的时候看了好多的爱情片，印象比较深刻的就是这部《<a href="https://movie.douban.com/subject/1296339/" target="_blank" rel="noopener">爱在黎明破晓前</a>》。</p>
<p>其实是个三部曲还有《爱在午夜黄昏后》《爱在午夜降临前》。</p>
<p>讲个两个陌生人相遇，相爱，分开，再相遇的故事。</p>
<p>两个互不相识的人相爱，真的很美好。</p>
]]></content>
  </entry>
  <entry>
    <title>用心良苦</title>
    <url>/2019/08/10/%E7%94%A8%E5%BF%83%E8%89%AF%E8%8B%A6/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>你说你 想要逃</p>
<a id="more"></a>


    <div id="aplayer-YJbwcmUk" class="aplayer aplayer-tag-marker meting-tag-marker" data-id="190778" data-server="netease" data-type="song" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme="#FF4081"></div>]]></content>
  </entry>
  <entry>
    <title>起风了</title>
    <url>/2019/08/09/%E8%B5%B7%E9%A3%8E%E4%BA%86/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>台风要来了，第一次经历台风呢。</p>
]]></content>
  </entry>
  <entry>
    <title>健身记录</title>
    <url>/2019/08/05/%E5%81%A5%E8%BA%AB%E8%AE%B0%E5%BD%95/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>买的健身装备到了，今天开始健身，记录下身材的变化。</p>
<a id="more"></a>

<p>2019-08-06</p>
<p>健身0天：</p>
<p><img src="/images/%E5%81%A5%E8%BA%AB0%E5%A4%A9.JPG" alt="健身0天"></p>
<p>一个月后再记录一次。</p>
<p>2019-08-11</p>
<p>健身第一天</p>
]]></content>
  </entry>
  <entry>
    <title>吉他练习</title>
    <url>/2019/08/04/%E5%90%89%E4%BB%96%E7%BB%83%E4%B9%A0/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>2019-08-04</p>
<p>认识六线谱，了解弦和品，练习《小星星》。</p>
<hr>

<p>2019-08-04</p>
<p>忙别的去了，练习《小星星》30分钟。每天最少1小时，明天补起来。</p>
<hr>
<a id="more"></a>

<p>2020-05-02</p>
<p>终于会弹小星星了，接下来学和弦。买个拨片先。</p>
<hr>

<p>2020-05-04</p>
<p>今天学了几个和弦，不知道明天还记得几个。</p>
]]></content>
      <tags>
        <tag>吉他</tag>
      </tags>
  </entry>
  <entry>
    <title>好想哭一场</title>
    <url>/2019/07/30/%E5%A5%BD%E6%83%B3%E5%93%AD%E4%B8%80%E5%9C%BA/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script>]]></content>
  </entry>
  <entry>
    <title>又又又又失眠了</title>
    <url>/2019/07/21/%E5%8F%88%E5%8F%88%E5%8F%88%E5%8F%88%E5%A4%B1%E7%9C%A0%E4%BA%86/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>快四点了。</p>
<p>还好是周末，第二天不用上班。</p>
<p>真痛苦呀。</p>
<br>

<a id="more"></a>


    <div id="aplayer-bhXujYZj" class="aplayer aplayer-tag-marker meting-tag-marker" data-id="27684881" data-server="netease" data-type="song" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme="#FF4081"></div>

]]></content>
  </entry>
  <entry>
    <title>500篇特辑</title>
    <url>/2019/07/03/500%E7%AF%87%E7%89%B9%E8%BE%91/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>并没有什么要说的，抽空把以前太监的博客给更新掉比如&lt;四个&gt;，其实还挺想写的就是懒。</p>
<p>完。</p>
]]></content>
  </entry>
  <entry>
    <title>今天出了车祸</title>
    <url>/2019/06/13/%E4%BB%8A%E5%A4%A9%E5%87%BA%E4%BA%86%E8%BD%A6%E7%A5%B8/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>好疼呀</p>
<a id="more"></a>

<p>只是骑自行车摔跤了而已。</p>
<p>哈哈哈。</p>
<p>虽然也很疼就是了。</p>
<br>

<p>还是小时候好，受伤了可以找妈妈。</p>
<p>现在只能咬咬牙，假装没事的站起来。</p>
<p>只是该死不死的又摔在小时候摔跤留下的那个疤上。</p>
<br>

<p>最近两年真是流年不利呀。</p>
<p>去年被骗。</p>
<p>今年也是事情不断。</p>
<p>年初带装疱疹，年中骑车摔跤，年末会是什么呢，有点小期待呢。</p>
<br>

<p>突然明白为什么海明威的老人与海可以获得诺贝尔文学奖了。我和那个老渔夫圣地牙哥比起来还差得远呢。</p>
<br>

<p>伤口又裂开了。如果不是心疼请假扣的那些钱，我肯定直接就请假了。</p>
]]></content>
  </entry>
  <entry>
    <title>想喝奶茶</title>
    <url>/2019/06/04/%E6%83%B3%E5%96%9D%E5%A5%B6%E8%8C%B6/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>对自己好抠，奶茶都舍不得买。。。</p>
<p>唉，活得好累。</p>
<p>我是为什么呢。</p>
<br>

<p>5月35号</p>
]]></content>
  </entry>
  <entry>
    <title>破手机</title>
    <url>/2019/05/26/%E7%A0%B4%E6%89%8B%E6%9C%BA/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>登登登，登个不停。</p>
<p>每次充个电烦死。</p>
<p>也不知道还能用多久。</p>
]]></content>
  </entry>
  <entry>
    <title>事实也是如此</title>
    <url>/2019/05/19/%E4%BA%8B%E5%AE%9E%E4%B9%9F%E6%98%AF%E5%A6%82%E6%AD%A4/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script>]]></content>
  </entry>
  <entry>
    <title>四个</title>
    <url>/2019/05/09/%E5%9B%9B%E4%B8%AA/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>我决定开一个系列叫 “BIU说”。BIU就是我，但是听起来又像“不要说”，算是一语双关吧。</p>
<p>这是系列的第一篇，谈一谈我喜欢过的那些姑娘。</p>
<a id="more"></a>

<p>四个，这是我从小到大喜欢过女生的数量。</p>
<p>故事还得从小学说起了。5年级，我遇见了一见钟情的女生。那种感觉我现在都还记的。感觉时间停止了，大脑一片空白，然后整个世界充满了茫茫的一片白光， 我唯一能看见的就是她，也只有她。有点类似人在遇到危险时，因为肾上腺素，感到周围的一切都变慢了的的情况。当然啦，比这种要美好得多。</p>
<p>但是很可惜，直到毕业我都没有和她说过一句话，甚至连她的名字都不知道。为此，年幼的我整整难过了一个暑假。</p>
<p>待更。。。</p>
]]></content>
      <tags>
        <tag>BIU说</tag>
      </tags>
  </entry>
  <entry>
    <title>感冒了</title>
    <url>/2019/05/04/%E6%84%9F%E5%86%92%E4%BA%86/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script>]]></content>
  </entry>
  <entry>
    <title>Japan</title>
    <url>/2019/04/04/Japan/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>哟嚯，约了朋友去日本玩。</p>
<p>顺便完成一起去日本的约定。</p>
<p>得先去办护照，和签证。</p>
<p>期待！</p>
<p>未完待续。</p>
<hr>

<p>update 2019-04-07</p>
<p>可惜，没有单反。一直想要个单反没舍得买，今年是没机会了/</p>
]]></content>
  </entry>
  <entry>
    <title>2018年度总结和2019年规划</title>
    <url>/2019/03/31/2018%E5%B9%B4%E5%BA%A6%E6%80%BB%E7%BB%93%E5%92%8C2019%E5%B9%B4%E8%A7%84%E5%88%92/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>2018年，年度总结，关于今年总的规划</p>
<hr>

<ul>
<li><p><del>想买吉他和单反</del>，不，你不想，还是给妈妈买项链吧，没钱不能任性，预算<span class="oabadge oabadge-yellow">¥5000</span>  <span class="oaspan oaspan-reverse">优先级</span><i class="fa fa-star"></i><i class="fa fa-star"></i><i class="fa fa-star"></i><i class="fa fa-star"></i><i class="fa fa-star"></i></p>
</li>
<li><p>健身 💪<span class="oaspan oaspan-reverse">优先级</span><i class="fa fa-star"></i><i class="fa fa-star"></i><i class="fa fa-star"></i><i class="fa fa-star"></i><i class="fa fa-star-half"></i></p>
</li>
<li><p>学英语为出国做准备 <span class="oaspan oaspan-reverse">优先级</span><i class="fa fa-star"></i><i class="fa fa-star"></i><i class="fa fa-star"></i><i class="fa fa-star"></i><i class="fa fa-star"></i></p>
</li>
</ul>
<p>5月规划</p>
<ul>
<li>提前回家好了，去年一年实在太累了，想好好的休息一段时间。</li>
<li>学日语，去日本旅游。</li>
</ul>
]]></content>
      <categories>
        <category>总结</category>
      </categories>
      <tags>
        <tag>总结</tag>
      </tags>
  </entry>
  <entry>
    <title>周末再整理吧</title>
    <url>/2019/02/28/%E5%91%A8%E6%9C%AB%E5%86%8D%E6%95%B4%E7%90%86%E5%90%A7/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script>]]></content>
  </entry>
  <entry>
    <title>想早点离开</title>
    <url>/2019/02/24/%E6%83%B3%E6%97%A9%E7%82%B9%E7%A6%BB%E5%BC%80/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script>]]></content>
  </entry>
  <entry>
    <title>去了医院</title>
    <url>/2019/02/22/%E5%8E%BB%E4%BA%86%E5%8C%BB%E9%99%A2/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>带状孢疹</p>
<a id="more"></a>

<p>是真他娘的疼啊</p>
]]></content>
  </entry>
  <entry>
    <title>疼了一天</title>
    <url>/2019/02/21/%E7%96%BC%E4%BA%86%E4%B8%80%E5%A4%A9/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script>]]></content>
  </entry>
  <entry>
    <title>最重要的事</title>
    <url>/2019/02/20/%E6%9C%80%E9%87%8D%E8%A6%81%E7%9A%84%E4%BA%8B/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>学英语和刷题</p>
<a id="more"></a>

<p>其他的都是虚的</p>
]]></content>
      <categories>
        <category>总结</category>
      </categories>
      <tags>
        <tag>总结</tag>
      </tags>
  </entry>
  <entry>
    <title>好像得病了</title>
    <url>/2019/02/19/%E5%A5%BD%E5%83%8F%E5%BE%97%E7%97%85%E4%BA%86/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>记录一下：</p>
<p>左胸下侧肋骨附近及后背肩胛骨下方，有红色凸起的红色痕迹成片状，很痒，并且被我抓破了一点，所幸没有抓出血，现在控制住一直没有抓。</p>
<p>伴随间歇性左肩刺痛，以及左侧肋骨间歇性刺痛，有时持续几秒钟。</p>
<a id="more"></a>

<p>update</p>
<p>原来是带状疱疹</p>
]]></content>
  </entry>
  <entry>
    <title>有个特别想写的</title>
    <url>/2019/02/18/%E6%9C%89%E4%B8%AA%E7%89%B9%E5%88%AB%E6%83%B3%E5%86%99%E7%9A%84/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>留到重要的日子吧，比如生日再写。</p>
<a id="more"></a>

<p>今天很开心，偶然的想起一段尘封的往事。得好好构思一下，再润润色，争取写的优美一些。</p>
]]></content>
  </entry>
  <entry>
    <title>赚钱赚钱</title>
    <url>/2019/02/17/%E8%B5%9A%E9%92%B1%E8%B5%9A%E9%92%B1/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script>]]></content>
  </entry>
  <entry>
    <title>2019规划</title>
    <url>/2019/02/16/2019%E8%A7%84%E5%88%92/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>关于今年总的规划</p>
<a id="more"></a>

<p><del>想买吉他和单反</del>，不，你不想，还是给妈妈买项链吧，没钱不能任性，预算<span class="oabadge oabadge-yellow">¥5000</span>  <span class="oaspan oaspan-reverse">优先级</span><i class="fa fa-star"></i><i class="fa fa-star"></i><i class="fa fa-star"></i><i class="fa fa-star"></i><i class="fa fa-star"></i></p>
<p>健身 💪<span class="oaspan oaspan-reverse">优先级</span><i class="fa fa-star"></i><i class="fa fa-star"></i><i class="fa fa-star"></i><i class="fa fa-star"></i><i class="fa fa-star-half"></i></p>
<p>学英语为出国做准备 <span class="oaspan oaspan-reverse">优先级</span><i class="fa fa-star"></i><i class="fa fa-star"></i><i class="fa fa-star"></i><i class="fa fa-star"></i><i class="fa fa-star"></i></p>
]]></content>
      <categories>
        <category>总结</category>
      </categories>
      <tags>
        <tag>总结</tag>
      </tags>
  </entry>
  <entry>
    <title>好累不想写</title>
    <url>/2019/02/15/%E5%A5%BD%E7%B4%AF%E4%B8%8D%E6%83%B3%E5%86%99/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script>]]></content>
  </entry>
  <entry>
    <title>爱情</title>
    <url>/2019/02/10/%E7%88%B1%E6%83%85/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><blockquote class="blockquote-center">
            <i class="fa fa-quote-left"></i>
            <p>若不是因为爱着你</p>
<p>怎么会夜深还没睡意</p>
<p>每个念头都关於你</p>
<p>我想你 想你 好想你</p>
<p>──莫文蔚 爱情</p>

            <i class="fa fa-quote-right"></i>
          </blockquote>

<a id="more"></a>]]></content>
      <categories>
        <category>我独自生活</category>
      </categories>
      <tags>
        <tag>我独自生活</tag>
      </tags>
  </entry>
  <entry>
    <title>睡觉</title>
    <url>/2019/02/06/%E7%9D%A1%E8%A7%89/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script>]]></content>
  </entry>
  <entry>
    <title>弱智</title>
    <url>/2019/02/05/%E5%BC%B1%E6%99%BA/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>我是个弱智</p>
]]></content>
  </entry>
  <entry>
    <title>烦死了</title>
    <url>/2019/02/03/%E7%83%A6%E6%AD%BB%E4%BA%86/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script>]]></content>
  </entry>
  <entry>
    <title>喝醉了</title>
    <url>/2019/02/02/%E5%96%9D%E9%86%89%E4%BA%86/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script>]]></content>
  </entry>
  <entry>
    <title>回家</title>
    <url>/2019/02/01/%E5%9B%9E%E5%AE%B6/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>回家了，不来了</p>
<a id="more"></a>

<p>相亲，结婚</p>
]]></content>
      <categories>
        <category>我独自生活</category>
      </categories>
      <tags>
        <tag>我独自生活</tag>
      </tags>
  </entry>
  <entry>
    <title>不想说话</title>
    <url>/2019/01/18/%E4%B8%8D%E6%83%B3%E8%AF%B4%E8%AF%9D/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script>]]></content>
  </entry>
  <entry>
    <title>想要幸福</title>
    <url>/2019/01/14/%E6%83%B3%E8%A6%81%E5%B9%B8%E7%A6%8F/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>都这么自律了</p>
<a id="more"></a>

<p>标准好男人，怎么就得不到幸福呢。</p>
<p>难道真的要变成坏男人，才会有女生死心塌地的喜欢吗。</p>
]]></content>
      <categories>
        <category>我独自生活</category>
      </categories>
      <tags>
        <tag>我独自生活</tag>
      </tags>
  </entry>
  <entry>
    <title>唉</title>
    <url>/2019/01/09/%E5%94%89/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script>]]></content>
      <categories>
        <category>我独自生活</category>
      </categories>
      <tags>
        <tag>我独自生活</tag>
      </tags>
  </entry>
  <entry>
    <title>唉</title>
    <url>/2019/01/09/%E5%94%89%203/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script>]]></content>
      <categories>
        <category>我独自生活</category>
      </categories>
      <tags>
        <tag>我独自生活</tag>
      </tags>
  </entry>
  <entry>
    <title>加班到最后一个人</title>
    <url>/2019/01/08/%E5%8A%A0%E7%8F%AD%E5%88%B0%E6%9C%80%E5%90%8E%E4%B8%80%E4%B8%AA%E4%BA%BA/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>也算是难得的经历了</p>
<a id="more"></a>]]></content>
      <categories>
        <category>我独自生活</category>
      </categories>
      <tags>
        <tag>我独自生活</tag>
      </tags>
  </entry>
  <entry>
    <title>服</title>
    <url>/2019/01/07/%E6%9C%8D/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>惹不起惹不起</p>
<a id="more"></a>

]]></content>
      <categories>
        <category>我独自生活</category>
      </categories>
      <tags>
        <tag>我独自生活</tag>
      </tags>
  </entry>
  <entry>
    <title>啊，失眠了</title>
    <url>/2019/01/06/%E5%95%8A%EF%BC%8C%E5%A4%B1%E7%9C%A0%E4%BA%86/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>打哈欠</p>
<a id="more"></a>

<p>都不知道昨天几点睡着的，可能4点，可能5点。</p>
<p>心里莫名烦躁呢。</p>
]]></content>
      <categories>
        <category>我独自生活</category>
      </categories>
      <tags>
        <tag>我独自生活</tag>
      </tags>
  </entry>
  <entry>
    <title>一月规划</title>
    <url>/2019/01/05/%E4%B8%80%E6%9C%88%E8%A7%84%E5%88%92/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>不重要，咳咳</p>
<a id="more"></a>

<ul>
<li>完成手头的工作(废话)</li>
<li>拾掇自己<ul>
<li>买一双喜欢的👟！好久没买鞋了，买双AJ4吧。</li>
<li>衣服👔</li>
<li>裤子👖</li>
<li>剪寸头💇‍♂️</li>
</ul>
</li>
<li>坚持练字✍️</li>
<li>多出门走走不要宅了🐶 (难度：🌟🌟🌟🌟🌟)</li>
</ul>
]]></content>
      <categories>
        <category>相遇</category>
      </categories>
      <tags>
        <tag>相遇</tag>
      </tags>
  </entry>
  <entry>
    <title>啊嗷嗷</title>
    <url>/2019/01/02/%E5%95%8A%E5%97%B7%E5%97%B7/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script>]]></content>
      <categories>
        <category>我独自生活</category>
      </categories>
      <tags>
        <tag>我独自生活</tag>
      </tags>
  </entry>
  <entry>
    <title>补一天</title>
    <url>/2019/01/01/%E8%A1%A5%E4%B8%80%E5%A4%A9/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>本来说要去跨年的，结果都懒得出门呢。</p>
]]></content>
      <categories>
        <category>我独自生活</category>
      </categories>
      <tags>
        <tag>我独自生活</tag>
      </tags>
  </entry>
  <entry>
    <title>去不去跨年呢</title>
    <url>/2018/12/31/%E5%8E%BB%E4%B8%8D%E5%8E%BB%E8%B7%A8%E5%B9%B4%E5%91%A2/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>不是很想出门呢</p>
]]></content>
      <categories>
        <category>我独自生活</category>
      </categories>
      <tags>
        <tag>我独自生活</tag>
      </tags>
  </entry>
  <entry>
    <title>弱智JPA</title>
    <url>/2018/12/29/%E5%BC%B1%E6%99%BAJPA/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>技术选型错了，贼头疼。</p>
]]></content>
      <categories>
        <category>我独自生活</category>
      </categories>
      <tags>
        <tag>我独自生活</tag>
      </tags>
  </entry>
  <entry>
    <title>得做一个规划了</title>
    <url>/2018/12/28/%E5%BE%97%E5%81%9A%E4%B8%80%E4%B8%AA%E8%A7%84%E5%88%92%E4%BA%86/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>明年一个人得过的有计划一点了，今年虽然也计划过，但是被一些事情给打断了，明年自己一个人，没人打扰，应该能好好执行。</p>
]]></content>
      <categories>
        <category>我独自生活</category>
      </categories>
      <tags>
        <tag>我独自生活</tag>
      </tags>
  </entry>
  <entry>
    <title>解决了</title>
    <url>/2018/12/27/%E8%A7%A3%E5%86%B3%E4%BA%86/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>之后照着原本的逻辑写就好啦</p>
]]></content>
      <categories>
        <category>我独自生活</category>
      </categories>
      <tags>
        <tag>我独自生活</tag>
      </tags>
  </entry>
  <entry>
    <title>卡了两天了</title>
    <url>/2018/12/26/%E5%8D%A1%E4%BA%86%E4%B8%A4%E5%A4%A9%E4%BA%86/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>进度太慢了呀，看来周末又要加班，不过好像周末本来就要加班，hhh</p>
]]></content>
      <categories>
        <category>我独自生活</category>
      </categories>
      <tags>
        <tag>我独自生活</tag>
      </tags>
  </entry>
  <entry>
    <title>碰到了问题</title>
    <url>/2018/12/25/%E7%A2%B0%E5%88%B0%E4%BA%86%E9%97%AE%E9%A2%98/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>select * 没问题，但是select字段就会报错，哪怕只查询了一个字段，确认了名字和类型都是对的，不知道是哪里有问题。</p>
]]></content>
      <categories>
        <category>我独自生活</category>
      </categories>
      <tags>
        <tag>我独自生活</tag>
      </tags>
  </entry>
  <entry>
    <title>平安夜</title>
    <url>/2018/12/24/%E6%97%A0%E9%A2%98/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>都没有苹果吃呢🍎</p>
]]></content>
      <categories>
        <category>我独自生活</category>
      </categories>
      <tags>
        <tag>我独自生活</tag>
      </tags>
  </entry>
  <entry>
    <title>不爽</title>
    <url>/2018/12/23/%E4%B8%8D%E7%88%BD/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>唉</p>
]]></content>
      <categories>
        <category>我独自生活</category>
      </categories>
      <tags>
        <tag>我独自生活</tag>
      </tags>
  </entry>
  <entry>
    <title>加班了一会</title>
    <url>/2018/12/22/%E5%8A%A0%E7%8F%AD%E4%BA%86%E4%B8%80%E4%BC%9A/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>倒是去公司了，不过只待了几个小时，</p>
]]></content>
      <categories>
        <category>我独自生活</category>
      </categories>
      <tags>
        <tag>我独自生活</tag>
      </tags>
  </entry>
  <entry>
    <title>真的要加班了</title>
    <url>/2018/12/21/%E7%9C%9F%E7%9A%84%E8%A6%81%E5%8A%A0%E7%8F%AD%E4%BA%86/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>不知道下周能不能搞定呢。</p>
]]></content>
      <categories>
        <category>我独自生活</category>
      </categories>
      <tags>
        <tag>我独自生活</tag>
      </tags>
  </entry>
  <entry>
    <title>果然还是没做完</title>
    <url>/2018/12/20/%E6%9E%9C%E7%84%B6%E8%BF%98%E6%98%AF%E6%B2%A1%E5%81%9A%E5%AE%8C/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>周末得过去加班。</p>
<p>还有点顺口呢，嘻嘻。</p>
]]></content>
      <categories>
        <category>我独自生活</category>
      </categories>
      <tags>
        <tag>我独自生活</tag>
      </tags>
  </entry>
  <entry>
    <title>deadline</title>
    <url>/2018/12/19/deadline/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>明天就是最后一天了啊摔，怎么办。</p>
]]></content>
      <categories>
        <category>我独自生活</category>
      </categories>
      <tags>
        <tag>我独自生活</tag>
      </tags>
  </entry>
  <entry>
    <title>总算有点进展了</title>
    <url>/2018/12/18/%E6%80%BB%E7%AE%97%E6%9C%89%E7%82%B9%E8%BF%9B%E5%B1%95%E4%BA%86/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>不容易呀，不知道时间来不来的及呢。</p>
]]></content>
      <categories>
        <category>我独自生活</category>
      </categories>
      <tags>
        <tag>我独自生活</tag>
      </tags>
  </entry>
  <entry>
    <title>折腾了一天</title>
    <url>/2018/12/17/%E6%8A%98%E8%85%BE%E4%BA%86%E4%B8%80%E5%A4%A9/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>还是没有解决，头都是疼的。</p>
]]></content>
      <categories>
        <category>我独自生活</category>
      </categories>
      <tags>
        <tag>我独自生活</tag>
      </tags>
  </entry>
  <entry>
    <title>下周很忙呢</title>
    <url>/2018/12/16/%E4%B8%8B%E5%91%A8%E5%BE%88%E5%BF%99%E5%91%A2/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>还不知道怎么渡过呢</p>
]]></content>
      <categories>
        <category>我独自生活</category>
      </categories>
      <tags>
        <tag>我独自生活</tag>
      </tags>
  </entry>
  <entry>
    <title>服了快递</title>
    <url>/2018/12/15/%E6%9C%8D%E4%BA%86%E5%BF%AB%E9%80%92/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>一天人还没人来</p>
]]></content>
      <categories>
        <category>我独自生活</category>
      </categories>
      <tags>
        <tag>我独自生活</tag>
      </tags>
  </entry>
  <entry>
    <title>穷</title>
    <url>/2018/12/14/%E7%A9%B7/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>要更努力呀</p>
]]></content>
      <categories>
        <category>我独自生活</category>
      </categories>
      <tags>
        <tag>我独自生活</tag>
      </tags>
  </entry>
  <entry>
    <title>又加班到转钟了</title>
    <url>/2018/12/14/%E5%8F%88%E5%8A%A0%E7%8F%AD%E5%88%B0%E8%BD%AC%E9%92%9F%E4%BA%86/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>emmm</p>
]]></content>
      <categories>
        <category>我独自生活</category>
      </categories>
      <tags>
        <tag>我独自生活</tag>
      </tags>
  </entry>
  <entry>
    <title>可乐到了</title>
    <url>/2018/12/10/%E5%8F%AF%E4%B9%90%E5%88%B0%E4%BA%86/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>蓝色的百事可乐，哈哈哈，想到有人买一瓶可乐都要晒单9张图，就搞笑。</p>
]]></content>
      <categories>
        <category>我独自生活</category>
      </categories>
      <tags>
        <tag>我独自生活</tag>
      </tags>
  </entry>
  <entry>
    <title>并没有去加班</title>
    <url>/2018/12/08/%E5%B9%B6%E6%B2%A1%E6%9C%89%E5%8E%BB%E5%8A%A0%E7%8F%AD/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>因为雪太大了，没错，一定是因为下雪我才没去的。</p>
]]></content>
      <categories>
        <category>我独自生活</category>
      </categories>
      <tags>
        <tag>我独自生活</tag>
      </tags>
  </entry>
  <entry>
    <title>emmm明天还要加班</title>
    <url>/2018/12/07/emmm%E6%98%8E%E5%A4%A9%E8%BF%98%E8%A6%81%E5%8A%A0%E7%8F%AD/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>虽然是自己要去的。。。</p>
]]></content>
      <categories>
        <category>我独自生活</category>
      </categories>
      <tags>
        <tag>我独自生活</tag>
      </tags>
  </entry>
  <entry>
    <title>生日礼物的若干事</title>
    <url>/2018/12/06/%E7%94%9F%E6%97%A5%E7%A4%BC%E7%89%A9%E7%9A%84%E8%8B%A5%E5%B9%B2%E4%BA%8B/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>最近一直都在为身边在乎的人挑选礼物，自己却连个生日也不想过了。</p>
]]></content>
      <categories>
        <category>我独自生活</category>
      </categories>
      <tags>
        <tag>我独自生活</tag>
      </tags>
  </entry>
  <entry>
    <title>出去逛逛街</title>
    <url>/2018/12/05/%E5%87%BA%E5%8E%BB%E9%80%9B%E9%80%9B%E8%A1%97/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>给发小买两件衣服</p>
]]></content>
      <categories>
        <category>我独自生活</category>
      </categories>
      <tags>
        <tag>我独自生活</tag>
      </tags>
  </entry>
  <entry>
    <title>见到了发小</title>
    <url>/2018/12/04/%E8%A7%81%E5%88%B0%E4%BA%86%E5%8F%91%E5%B0%8F/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>一起吃了顿饭，很开心。</p>
]]></content>
      <categories>
        <category>我独自生活</category>
      </categories>
      <tags>
        <tag>我独自生活</tag>
        <tag>相遇</tag>
        <tag>发小</tag>
      </tags>
  </entry>
  <entry>
    <title>明天去接人</title>
    <url>/2018/12/03/%E6%98%8E%E5%A4%A9%E5%8E%BB%E6%8E%A5%E4%BA%BA/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>啦啦啦，开心</p>
]]></content>
      <categories>
        <category>我独自生活</category>
      </categories>
      <tags>
        <tag>我独自生活</tag>
        <tag>相遇</tag>
        <tag>发小</tag>
      </tags>
  </entry>
  <entry>
    <title>啊,12月</title>
    <url>/2018/12/02/%E5%95%8A-12%E6%9C%88/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>12月要做的需求这么难，怎么搞哦。</p>
]]></content>
      <categories>
        <category>我独自生活</category>
      </categories>
      <tags>
        <tag>我独自生活</tag>
      </tags>
  </entry>
  <entry>
    <title>哇哦</title>
    <url>/2018/12/01/%E5%93%87%E5%93%A6/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>今天居然一觉睡到了下午，最近看来是真的累了。</p>
]]></content>
      <categories>
        <category>我独自生活</category>
      </categories>
      <tags>
        <tag>我独自生活</tag>
      </tags>
  </entry>
  <entry>
    <title>脑海里响了一天的旋律</title>
    <url>/2018/11/30/%E8%84%91%E6%B5%B7%E9%87%8C%E5%93%8D%E4%BA%86%E4%B8%80%E5%A4%A9%E7%9A%84%E6%97%8B%E5%BE%8B/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script>]]></content>
      <categories>
        <category>我独自生活</category>
      </categories>
      <tags>
        <tag>我独自生活</tag>
      </tags>
  </entry>
  <entry>
    <title>嗝～</title>
    <url>/2018/11/29/%E5%97%9D%EF%BD%9E/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script>]]></content>
      <categories>
        <category>我独自生活</category>
      </categories>
      <tags>
        <tag>我独自生活</tag>
      </tags>
  </entry>
  <entry>
    <title>无形的压力</title>
    <url>/2018/11/28/%E6%97%A0%E5%BD%A2%E7%9A%84%E5%8E%8B%E5%8A%9B/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>上班还是不容易呀</p>
]]></content>
      <categories>
        <category>我独自生活</category>
      </categories>
      <tags>
        <tag>我独自生活</tag>
      </tags>
  </entry>
  <entry>
    <title>无聊的一天</title>
    <url>/2018/11/26/%E6%97%A0%E8%81%8A%E7%9A%84%E4%B8%80%E5%A4%A9/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>一行代码也没敲</p>
]]></content>
      <categories>
        <category>我独自生活</category>
      </categories>
      <tags>
        <tag>我独自生活</tag>
      </tags>
  </entry>
  <entry>
    <title>过了次黑五</title>
    <url>/2018/11/24/%E8%BF%87%E4%BA%86%E6%AC%A1%E9%BB%91%E4%BA%94/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>不买点什么浑身难受。</p>
]]></content>
      <categories>
        <category>我独自生活</category>
      </categories>
      <tags>
        <tag>我独自生活</tag>
      </tags>
  </entry>
  <entry>
    <title>好好休息</title>
    <url>/2018/11/23/%E5%A5%BD%E5%A5%BD%E4%BC%91%E6%81%AF/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>希望周末不失眠睡个好觉</p>
]]></content>
      <categories>
        <category>我独自生活</category>
      </categories>
      <tags>
        <tag>我独自生活</tag>
      </tags>
  </entry>
  <entry>
    <title>加班到转钟</title>
    <url>/2018/11/22/%E5%8A%A0%E7%8F%AD%E5%88%B0%E8%BD%AC%E9%92%9F/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>好累</p>
]]></content>
      <categories>
        <category>我独自生活</category>
      </categories>
      <tags>
        <tag>我独自生活</tag>
      </tags>
  </entry>
  <entry>
    <title>明天上线咯</title>
    <url>/2018/11/21/%E6%98%8E%E5%A4%A9%E4%B8%8A%E7%BA%BF%E5%92%AF/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>希望一切顺利吧，但是又有新的任务呢。</p>
]]></content>
      <categories>
        <category>我独自生活</category>
      </categories>
      <tags>
        <tag>我独自生活</tag>
      </tags>
  </entry>
  <entry>
    <title>好想家</title>
    <url>/2018/11/20/%E5%A5%BD%E6%83%B3%E5%AE%B6/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>明年回去好了</p>
]]></content>
      <categories>
        <category>我独自生活</category>
      </categories>
      <tags>
        <tag>我独自生活</tag>
      </tags>
  </entry>
  <entry>
    <title>烦</title>
    <url>/2018/11/19/%E7%83%A6/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script>]]></content>
      <categories>
        <category>我独自生活</category>
      </categories>
      <tags>
        <tag>我独自生活</tag>
      </tags>
  </entry>
  <entry>
    <title>一个人的时候</title>
    <url>/2018/11/18/%E4%B8%80%E4%B8%AA%E4%BA%BA%E7%9A%84%E6%97%B6%E5%80%99/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>我是狮子座，可惜我是白羊座诶♈️</p>
]]></content>
      <categories>
        <category>我独自生活</category>
      </categories>
      <tags>
        <tag>我独自生活</tag>
      </tags>
  </entry>
  <entry>
    <title>空空如也</title>
    <url>/2018/11/16/%E7%A9%BA%E7%A9%BA%E5%A6%82%E4%B9%9F/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script>]]></content>
      <categories>
        <category>我独自生活</category>
      </categories>
      <tags>
        <tag>我独自生活</tag>
      </tags>
  </entry>
  <entry>
    <title>钢笔到咯</title>
    <url>/2018/11/13/%E9%92%A2%E7%AC%94%E5%88%B0%E5%92%AF/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>新笔居然没有蓝色墨迹呢，担心买到了假货。</p>
]]></content>
      <categories>
        <category>我独自生活</category>
      </categories>
      <tags>
        <tag>我独自生活</tag>
      </tags>
  </entry>
  <entry>
    <title>坑爹呢</title>
    <url>/2018/11/12/%E5%9D%91%E7%88%B9%E5%91%A2/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>之前加班就为了现在能轻松点，结果结果又跟我分了新的东西。</p>
]]></content>
      <categories>
        <category>我独自生活</category>
      </categories>
      <tags>
        <tag>我独自生活</tag>
      </tags>
  </entry>
  <entry>
    <title>双十一</title>
    <url>/2018/11/11/%E5%8F%8C%E5%8D%81%E4%B8%80/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>大家都买买买，</p>
<p>其实双十一是光棍节呀。</p>
]]></content>
      <categories>
        <category>我独自生活</category>
      </categories>
      <tags>
        <tag>我独自生活</tag>
      </tags>
  </entry>
  <entry>
    <title>怀念上学的时光</title>
    <url>/2018/11/10/%E6%80%80%E5%BF%B5%E4%B8%8A%E5%AD%A6%E7%9A%84%E6%97%B6%E5%85%89/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>那时候在宿舍多热闹，现在只有我一个人咯。</p>
]]></content>
      <categories>
        <category>我独自生活</category>
      </categories>
      <tags>
        <tag>我独自生活</tag>
      </tags>
  </entry>
  <entry>
    <title>一个人失眠</title>
    <url>/2018/11/08/%E4%B8%80%E4%B8%AA%E4%BA%BA%E5%A4%B1%E7%9C%A0/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p><del>全世界失眠</del>，才怪</p>
]]></content>
      <categories>
        <category>我独自生活</category>
      </categories>
      <tags>
        <tag>我独自生活</tag>
      </tags>
  </entry>
  <entry>
    <title>盼望着盼望着</title>
    <url>/2018/11/05/%E7%9B%BC%E6%9C%9B%E7%9D%80%E7%9B%BC%E6%9C%9B%E7%9D%80/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>我到底在盼望着什么呢</p>
]]></content>
      <categories>
        <category>我独自生活</category>
      </categories>
      <tags>
        <tag>我独自生活</tag>
      </tags>
  </entry>
  <entry>
    <title>游戏到了</title>
    <url>/2018/11/04/%E6%B8%B8%E6%88%8F%E5%88%B0%E4%BA%86/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>开心😄</p>
]]></content>
      <categories>
        <category>我独自生活</category>
      </categories>
      <tags>
        <tag>我独自生活</tag>
      </tags>
  </entry>
  <entry>
    <title>要给妈妈买护肤品</title>
    <url>/2018/11/03/%E8%A6%81%E7%BB%99%E5%A6%88%E5%A6%88%E4%B9%B0%E6%8A%A4%E8%82%A4%E5%93%81/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>本来想着双十一没什么要买的，现在想想给妈妈买套护肤品吧，再给自己买只钢笔。</p>
]]></content>
      <categories>
        <category>我独自生活</category>
      </categories>
      <tags>
        <tag>我独自生活</tag>
      </tags>
  </entry>
  <entry>
    <title>想买钢笔练字</title>
    <url>/2018/11/02/%E6%83%B3%E4%B9%B0%E9%92%A2%E7%AC%94%E7%BB%83%E5%AD%97/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>就这么愉快的决定了，写乐21k呢还是白金3776呢还是凌美2000呢。</p>
]]></content>
      <categories>
        <category>我独自生活</category>
      </categories>
      <tags>
        <tag>我独自生活</tag>
      </tags>
  </entry>
  <entry>
    <title>怀念学校的生活</title>
    <url>/2018/11/01/%E6%80%80%E5%BF%B5%E5%AD%A6%E6%A0%A1%E7%9A%84%E7%94%9F%E6%B4%BB/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>以前读书的时候，想着上班之后多自由，现在上班了才发觉，还是读书的时候开心。</p>
]]></content>
      <categories>
        <category>我独自生活</category>
      </categories>
      <tags>
        <tag>我独自生活</tag>
      </tags>
  </entry>
  <entry>
    <title>种草了</title>
    <url>/2018/10/31/%E7%A7%8D%E8%8D%89%E4%BA%86/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>pad还是手表呢，都挺贵的，暂时只能买一个呢。</p>
]]></content>
      <categories>
        <category>我独自生活</category>
      </categories>
      <tags>
        <tag>我独自生活</tag>
      </tags>
  </entry>
  <entry>
    <title>难得下班早</title>
    <url>/2018/10/30/%E9%9A%BE%E5%BE%97%E4%B8%8B%E7%8F%AD%E6%97%A9/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>心累</p>
]]></content>
      <categories>
        <category>我独自生活</category>
      </categories>
      <tags>
        <tag>我独自生活</tag>
      </tags>
  </entry>
  <entry>
    <title>周一总是很累</title>
    <url>/2018/10/29/%E5%91%A8%E4%B8%80%E6%80%BB%E6%98%AF%E5%BE%88%E7%B4%AF/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>上班敲代码，回来还要敲代码，难受。</p>
]]></content>
      <categories>
        <category>我独自生活</category>
      </categories>
      <tags>
        <tag>我独自生活</tag>
      </tags>
  </entry>
  <entry>
    <title>年前计划</title>
    <url>/2018/10/28/%E5%B9%B4%E5%89%8D%E8%AE%A1%E5%88%92/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><ul>
<li>购买新款iPad或者港版的Apple Watch 4</li>
<li>背单词</li>
<li>学日语</li>
<li>健身</li>
<li>项目上线</li>
<li>给爸妈买礼物</li>
<li>给小侄子买礼物</li>
</ul>
]]></content>
      <categories>
        <category>我独自生活</category>
      </categories>
      <tags>
        <tag>我独自生活</tag>
      </tags>
  </entry>
  <entry>
    <title>变成艺术家</title>
    <url>/2018/10/27/%E5%8F%98%E6%88%90%E8%89%BA%E6%9C%AF%E5%AE%B6/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>感觉艺术家都不是正常人，难道我要变成艺术家了，哈哈哈。</p>
]]></content>
      <categories>
        <category>我独自生活</category>
      </categories>
      <tags>
        <tag>我独自生活</tag>
      </tags>
  </entry>
  <entry>
    <title>往事如烟</title>
    <url>/2018/10/26/%E5%BE%80%E4%BA%8B%E5%A6%82%E7%83%9F/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>随风而去吧</p>
]]></content>
      <categories>
        <category>我独自生活</category>
      </categories>
      <tags>
        <tag>我独自生活</tag>
      </tags>
  </entry>
  <entry>
    <title>买东西会让我开心点</title>
    <url>/2018/10/25/%E4%B9%B0%E4%B8%9C%E8%A5%BF%E4%BC%9A%E8%AE%A9%E6%88%91%E5%BC%80%E5%BF%83%E7%82%B9/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>何以解忧</p>
]]></content>
      <categories>
        <category>我独自生活</category>
      </categories>
      <tags>
        <tag>我独自生活</tag>
      </tags>
  </entry>
  <entry>
    <title>不爽呢</title>
    <url>/2018/10/24/%E4%B8%8D%E7%88%BD%E5%91%A2/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>分给我更多的任务了呢，不开心。</p>
]]></content>
      <categories>
        <category>我独自生活</category>
      </categories>
      <tags>
        <tag>我独自生活</tag>
      </tags>
  </entry>
  <entry>
    <title>没什么目标了</title>
    <url>/2018/10/23/%E6%B2%A1%E4%BB%80%E4%B9%88%E7%9B%AE%E6%A0%87%E4%BA%86/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>早上期待中午，中午期待下班，哈哈哈。</p>
]]></content>
      <categories>
        <category>我独自生活</category>
      </categories>
      <tags>
        <tag>我独自生活</tag>
      </tags>
  </entry>
  <entry>
    <title>赶快过年吧</title>
    <url>/2018/10/22/%E8%B5%B6%E5%BF%AB%E8%BF%87%E5%B9%B4%E5%90%A7/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>不想上班咯</p>
]]></content>
      <categories>
        <category>我独自生活</category>
      </categories>
      <tags>
        <tag>我独自生活</tag>
      </tags>
  </entry>
  <entry>
    <title>全世界失眠</title>
    <url>/2018/10/20/%E5%85%A8%E4%B8%96%E7%95%8C%E5%A4%B1%E7%9C%A0/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>一个人失眠，全世界失眠。</p>
]]></content>
      <categories>
        <category>我独自生活</category>
      </categories>
      <tags>
        <tag>我独自生活</tag>
      </tags>
  </entry>
  <entry>
    <title>沉默</title>
    <url>/2018/10/19/%E6%B2%89%E9%BB%98/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>沉默是今晚的。。。傻彪</p>
]]></content>
      <categories>
        <category>我独自生活</category>
      </categories>
      <tags>
        <tag>我独自生活</tag>
      </tags>
  </entry>
  <entry>
    <title>第一次上线</title>
    <url>/2018/10/18/%E7%AC%AC%E4%B8%80%E6%AC%A1%E4%B8%8A%E7%BA%BF/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>可能明天会更忙？</p>
]]></content>
      <categories>
        <category>我独自生活</category>
      </categories>
      <tags>
        <tag>我独自生活</tag>
      </tags>
  </entry>
  <entry>
    <title>明天上线</title>
    <url>/2018/10/17/%E6%98%8E%E5%A4%A9%E4%B8%8A%E7%BA%BF/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>忙忙忙</p>
]]></content>
      <categories>
        <category>我独自生活</category>
      </categories>
      <tags>
        <tag>我独自生活</tag>
      </tags>
  </entry>
  <entry>
    <title>和过去说再见</title>
    <url>/2018/10/16/%E5%92%8C%E8%BF%87%E5%8E%BB%E8%AF%B4%E5%86%8D%E8%A7%81/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>原来再见 就是在也不见</p>
]]></content>
      <categories>
        <category>我独自生活</category>
      </categories>
      <tags>
        <tag>我独自生活</tag>
      </tags>
  </entry>
  <entry>
    <title>有点累</title>
    <url>/2018/10/15/%E6%9C%89%E7%82%B9%E7%B4%AF/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>好久没买鞋了，想买双鞋犒劳自己。</p>
]]></content>
      <categories>
        <category>我独自生活</category>
      </categories>
      <tags>
        <tag>我独自生活</tag>
      </tags>
  </entry>
  <entry>
    <title>买买买</title>
    <url>/2018/10/14/%E4%B9%B0%E4%B9%B0%E4%B9%B0/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>喜欢的游戏快要发售了，买买买！</p>
<p>荒野大镖客2</p>
<p>黑暗之魂重制版</p>
<p>全面战争三国</p>
]]></content>
      <categories>
        <category>我独自生活</category>
      </categories>
      <tags>
        <tag>我独自生活</tag>
      </tags>
  </entry>
  <entry>
    <title>目标西湖</title>
    <url>/2018/10/13/%E7%9B%AE%E6%A0%87%E8%A5%BF%E6%B9%96/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>武汉的朋友来，当然要带去西湖玩啦。</p>
<p>虽然已经去过好几次了，哈哈哈。</p>
]]></content>
      <categories>
        <category>我独自生活</category>
      </categories>
      <tags>
        <tag>我独自生活</tag>
      </tags>
  </entry>
  <entry>
    <title>特地回来写博客</title>
    <url>/2018/10/12/%E7%89%B9%E5%9C%B0%E5%9B%9E%E6%9D%A5%E5%86%99%E5%8D%9A%E5%AE%A2/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>特地从滨江回来写博客，差点就过12点了。</p>
]]></content>
      <categories>
        <category>我独自生活</category>
      </categories>
      <tags>
        <tag>我独自生活</tag>
      </tags>
  </entry>
  <entry>
    <title>小目标</title>
    <url>/2018/10/10/%E5%B0%8F%E7%9B%AE%E6%A0%87/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p><del>定个小目标，生日的时候送自己一台单反，要对自己好一点了。</del></p>
<p>你在想屁吃</p>
]]></content>
      <categories>
        <category>我独自生活</category>
      </categories>
      <tags>
        <tag>我独自生活</tag>
      </tags>
  </entry>
  <entry>
    <title>好困</title>
    <url>/2018/10/08/%E5%A5%BD%E5%9B%B0/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>昨晚失眠了，今天困死了。</p>
]]></content>
      <categories>
        <category>我独自生活</category>
      </categories>
      <tags>
        <tag>我独自生活</tag>
      </tags>
  </entry>
  <entry>
    <title>答应不爱你</title>
    <url>/2018/10/07/%E7%AD%94%E5%BA%94%E4%B8%8D%E7%88%B1%E4%BD%A0/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><blockquote class="blockquote-center">
            <i class="fa fa-quote-left"></i>
            <p>虽然很努力练习着忘记<br>我的心却还没答应可以放弃了你</p>
<p>──答应不爱你 郑中基</p>

            <i class="fa fa-quote-right"></i>
          </blockquote>

<a id="more"></a>

<div class="note warning">
            <p>明明爱很清晰却又接受分离<br>我只剩思念的权利<br>难过还来不及爱早已融入呼吸<br>不存在的存在心底</p><p>虽然很努力练习着忘记<br>我的心却还没答应可以放弃了你<br>真的对不起答应了你不再爱你<br>我却还没答应我自己</p><p>明明爱很清晰却要接受分离<br>我只剩思念的权利<br>难过还来不及就让爱融入空气<br>不存在的存在心底</p><p>说好要忘记偏偏又想起<br>原来我的心还没有答应放弃了你<br>真的对不起虽然曾经答应了你<br>我却还没答应我自己<br>却又如何真的不爱你</p><p>──答应不爱你 郑中基</p>
          </div>]]></content>
      <categories>
        <category>听歌</category>
      </categories>
      <tags>
        <tag>听歌</tag>
      </tags>
  </entry>
  <entry>
    <title>怎样</title>
    <url>/2018/10/06/%E6%80%8E%E6%A0%B7/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><blockquote class="blockquote-center">
            <i class="fa fa-quote-left"></i>
            <p>如果我们现在还在一起会是怎样<br>我们是不是还是深爱着对方</p>
<p>──怎样 戴佩妮</p>

            <i class="fa fa-quote-right"></i>
          </blockquote>

<a id="more"></a>

<div class="note info">
            <p>我这里天快要黑了<br>那里呢<br>我这里天气凉凉的<br>那里呢</p><p>我这里一切都变了<br>我变的懂事了<br>我又开始写日记了<br>而那你呢</p><p>我这里天快要亮了<br>那里呢<br>我这里天气很炎热<br>那里呢</p><p>我这里一切都变了<br>我变的不哭了<br>我把照片也收起了<br>而那你呢</p><p>如果我们现在还在一起会是怎样<br>我们是不是还是深爱着对方<br>像开始时那样<br>握着手就算天快亮</p><p>我们现在还在一起会是怎样<br>我们是不是还是隐瞒着对方<br>像结束时那样<br>明知道你没有错<br>还硬要我原谅</p><p>我这里天快要亮了<br>那里呢<br>我这里天气很炎热<br>那里呢</p><p>我这里一切都变了<br>我变的不哭了<br>我把照片也收起了<br>而那你呢</p><p>如果我们现在还在一起会是怎样<br>我们是不是还是深爱着对方<br>像开始时那样<br>握着手就算天快亮</p><p>我们现在还在一起会是怎样<br>我们是不是还是隐瞒着对方<br>像结束时那样<br>明知道你没有错<br>还硬要我原谅</p><p>如果我们现在还在一起会是怎样<br>我们是不是还是深爱着对方<br>像开始时那样<br>握着手就算天快亮</p><p>我们现在还在一起会是怎样<br>我们是不是还是隐瞒着对方<br>像结束时那样<br>明知道你没有错<br>还硬要我原谅</p><p>我不会原谅<br>我怎么原谅</p><p>──怎样 戴佩妮</p>
          </div>]]></content>
      <categories>
        <category>听歌</category>
      </categories>
      <tags>
        <tag>听歌</tag>
      </tags>
  </entry>
  <entry>
    <title>我累了</title>
    <url>/2018/10/04/%E6%88%91%E7%B4%AF%E4%BA%86/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>好累啊</p>
<blockquote class="blockquote-center">
            <i class="fa fa-quote-left"></i>
            <p>爱冷了 心倦了 我累了</p>
<p>──莫文蔚 我累了</p>

            <i class="fa fa-quote-right"></i>
          </blockquote>

<a id="more"></a>

<div class="note warning">
            <p>我累了</p><p>越得不到 越觉得重要</p><p>给了心 却只记得几闪拥抱</p><p>再听不到你温柔的心跳</p><p>世界越来越小</p><p>爱能否像电影预告</p><p>虽然短暂却尽是高潮</p><p>宁愿在爱里燃烧</p><p>不想在这里绕 我累了</p><p>再也不想对你讨好</p><p>等到你觉察到我对你的重要</p><p>一切都迟了 我累了</p><p>再无力期待你的好</p><p>等待你的回报 再多我也不要</p><p>爱冷了 心倦了 我累了</p><p>想忘掉 无力再对你讨好</p><p>梦醒了 爱睡了 我懒得再为你天天苦恼</p><p>越得不到 越觉得重要</p><p>给了心 却只记得几次拥抱</p><p>再听不到你温柔的心跳</p><p>世界越来越小 爱能否像电影预告</p><p>虽然短暂却尽是高潮</p><p>宁愿在爱里燃烧 不想再跟你耗</p><p>我累了 再也不想对你讨好</p><p>等到你觉察到我对你的重要 一切都迟了</p><p>我累了 再无力期待你的好</p><p>等待你的回报 再多我也不要</p><p>爱冷了 心倦了 我累了</p><p>想忘掉 无力再对你讨好</p><p>梦醒了 爱睡了 我懒得再为你天天苦恼</p><p>我累了 再也不想对你讨好</p><p>等到你觉察到我对你的重要 一切都迟了</p><p>我累了 再无力期待你的好</p><p>等待你的回报 再多我也不要</p><p>爱冷了 心倦了 我累了</p><p>想忘掉 无力再对你讨好</p><p>梦醒了 爱睡了 我懒得再为你天天苦恼</p><p>心倦了 我累了</p><p>想忘掉 无力再对你讨好</p><p>梦醒了 爱睡了 我懒得再为你天天苦恼</p><p>──莫文蔚 我累了</p>
          </div>]]></content>
      <categories>
        <category>听歌</category>
      </categories>
      <tags>
        <tag>听歌</tag>
      </tags>
  </entry>
  <entry>
    <title>分手快乐</title>
    <url>/2018/10/03/%E5%88%86%E6%89%8B%E5%BF%AB%E4%B9%90/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><blockquote class="blockquote-center">
            <i class="fa fa-quote-left"></i>
            <p>爱可以不问对错 </p>
<p>至少有喜悦感动</p>
<p>──梁静茹 分手快乐</p>

            <i class="fa fa-quote-right"></i>
          </blockquote>

<a id="more"></a>

<div class="note default">
            <p>我无法帮你预言 </p><p>委曲求全有没有用</p><p>可是我多么不舍 </p><p>朋友爱得那么苦痛</p><p>爱可以不问对错 </p><p>至少有喜悦感动</p><p>如果他总为别人撑伞 </p><p>你何苦非为他等在雨中</p><p>泡咖啡让你暖手 </p><p>想挡挡你心口里的风</p><p>你却想上街走走 </p><p>吹吹冷风会清醒得多</p><p>你说你不怕分手 </p><p>只有一点遗憾难过</p><p>情人节就要来了 </p><p>剩自己一个</p><p>其实爱对了人 </p><p>情人节每天都过</p><p>分手快乐 </p><p>祝你快乐 </p><p>你可以找到更好的</p><p>不想过冬 </p><p>厌倦沉重 </p><p>就飞去热带的岛屿游泳</p><p>分手快乐 </p><p>请你快乐 </p><p>挥别错的才能和对的相逢</p><p>离开旧爱 </p><p>像坐慢车 </p><p>看透撤了心就会是晴朗的</p><p>没人能把谁的幸福没收 </p><p>你发誓你会活的有笑容</p><p>你自信时候真的美多了</p><p>──梁静茹 分手快乐</p>
          </div>]]></content>
      <categories>
        <category>听歌</category>
      </categories>
      <tags>
        <tag>听歌</tag>
      </tags>
  </entry>
  <entry>
    <title>退后</title>
    <url>/2018/10/02/%E9%80%80%E5%90%8E/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><blockquote class="blockquote-center">
            <i class="fa fa-quote-left"></i>
            <p>我知道我们都没有错</p>
<p>只是放手会比较好过</p>
<p>──周杰伦 退后</p>

            <i class="fa fa-quote-right"></i>
          </blockquote>

<a id="more"></a>

<div class="note info">
            <p>天空灰的像哭过</p><p>离开你以后</p><p>并没有 更自由</p><p>酸酸的空气</p><p>嗅出我们的距离</p><p>一幕锥心的结局</p><p>像呼吸般无法停息</p><p>抽屉泛黄的日记</p><p>榨干了回忆</p><p>那笑容 是夏季</p><p>你我的过去被顺时针的忘记</p><p>缺氧过后的爱情</p><p>粗心的眼泪是多余</p><p>我知道你我都没有错</p><p>只是忘了怎么退后</p><p>信誓旦旦给了承诺</p><p>却被时间扑了空</p><p>我知道我们都没有错</p><p>只是放手会比较好过</p><p>最美的爱情回忆里待续</p><p>天空灰的像哭过</p><p>离开你以后</p><p>并没有 更自由</p><p>酸酸的空气</p><p>嗅出我们的距离</p><p>一幕锥心的结局</p><p>像呼吸般无法停息</p><p>抽屉泛黄的日记</p><p>榨干了回忆</p><p>那笑容 是夏季</p><p>你我的过去被顺时针的忘记</p><p>缺氧过后的爱情</p><p>粗心的眼泪是多余</p><p>我知道你我都没有错</p><p>只是忘了怎么退后</p><p>信誓旦旦给了承诺</p><p>却被时间扑了空</p><p>我知道我们都没有错</p><p>只是放手会比较好过</p><p>最美的爱情回忆里待续</p><p>我知道你我都没有错</p><p>只是忘了怎么退后</p><p>信誓旦旦给了承诺</p><p>却被时间扑了空</p><p>我知道我们都没有错</p><p>只是放手会比较好过</p><p>最美的爱情回忆里待续</p><p>──周杰伦 退后</p>
          </div>

]]></content>
      <categories>
        <category>听歌</category>
      </categories>
      <tags>
        <tag>听歌</tag>
      </tags>
  </entry>
  <entry>
    <title>记事本</title>
    <url>/2018/10/01/%E8%AE%B0%E4%BA%8B%E6%9C%AC/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><blockquote class="blockquote-center">
            <i class="fa fa-quote-left"></i>
            <p>我看见自己写下的心情</p>
<p>把自己放在卑微的后头</p>
<p>──周传雄 记事本</p>

            <i class="fa fa-quote-right"></i>
          </blockquote>

<a id="more"></a>

<div class="note warn">
            <p>翻开随身携带的记事本</p><p>写着许多事都是关于你</p><p>你讨厌被冷落</p><p>习惯被守候</p><p>寂寞才找我</p><p>我看见自己写下的心情</p><p>把自己放在卑微的后头</p><p>等你等太久</p><p>想你泪会流</p><p>而幸福快乐是什么</p><p>爱的痛了</p><p>痛的哭了</p><p>哭的累了</p><p>日记本里页页执着</p><p>记载着你的好</p><p>像上瘾的毒药</p><p>它反覆骗着我</p><p>爱的痛了</p><p>痛的哭了</p><p>哭的累了</p><p>矛盾心里总是强求</p><p>劝自己要放手</p><p>闭上眼让你走</p><p>烧掉日记重新来过</p><p>我看见自己写下的心情</p><p>把自己放在卑微的后头</p><p>等你等太久</p><p>想你泪会流</p><p>而幸福快乐是什么</p><p>爱的痛了</p><p>痛的哭了</p><p>哭的累了</p><p>日记本里页页执着</p><p>记载着你的好</p><p>像上瘾的毒药</p><p>它反复骗着我</p><p>爱的痛了</p><p>痛的哭了</p><p>哭的累了</p><p>矛盾心里总是强求</p><p>劝自己要放手</p><p>闭上眼让你走</p><p>烧掉日记重新来过</p><p>爱的痛了</p><p>痛的哭了</p><p>哭的累了</p><p>矛盾心里总是强求</p><p>劝自己要放手</p><p>闭上眼让你走</p><p>烧掉日记重新来过</p><p>──周传雄 记事本</p>
          </div>


    <div id="aplayer-KXAvuQaF" class="aplayer aplayer-tag-marker meting-tag-marker" data-id="190062" data-server="netease" data-type="song" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme="#FF4081"></div>

]]></content>
      <categories>
        <category>听歌</category>
      </categories>
      <tags>
        <tag>听歌</tag>
      </tags>
  </entry>
  <entry>
    <title>开不了口</title>
    <url>/2018/09/30/%E5%BC%80%E4%B8%8D%E4%BA%86%E5%8F%A3%202/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><blockquote class="blockquote-center">
            <i class="fa fa-quote-left"></i>
            <p>才离开没多久就开始</p>
<p>担心今天的你过得好不好</p>
<p>──周杰伦 开不了口</p>

            <i class="fa fa-quote-right"></i>
          </blockquote>

<a id="more"></a>

<div class="note danger">
            <p>才离开没多久就开始</p><p>担心今天的你过得好不好</p><p>整个画面是你 想你想的睡不着</p><p>嘴嘟嘟那可爱的模样</p><p>还有在你身上香香的味道</p><p>我的快乐是你 想你想的都会笑</p><p>没有你在我有多难熬</p><p>（没有你在我有多难熬多烦恼）</p><p>没有你烦我有多烦恼</p><p>（没有你烦我有多烦恼多难熬）</p><p>穿过云层 我试着努力向你奔跑</p><p>爱才送到 你却已在别人怀抱</p><p>就是开不了口 让她知道</p><p>我一定会呵护着你 也逗你笑</p><p>你对我有多重要</p><p>我后悔没 让你知道</p><p>安静的听你撒娇</p><p>看你睡着 一直到老</p><p>就是开不了口 让她知道</p><p>就是那么简单几句 我办不到</p><p>整颗心悬在半空</p><p>我只能够 远远看着</p><p>这些我都做得到</p><p>但那个人已经不是我</p><p>没有你在我有多难熬</p><p>（没有你在我有多难熬多烦恼）</p><p>没有你烦我有多烦恼</p><p>（没有你烦我有多烦恼多难熬）</p><p>穿过云层 我试着努力向你奔跑</p><p>爱才送到 你却已在别人怀抱</p><p>就是开不了口 让她知道</p><p>我一定会呵护着你 也逗你笑</p><p>你对我有多重要</p><p>我后悔没 让你知道</p><p>安静的听你撒娇</p><p>看你睡着 一直到老</p><p>就是开不了口 让她知道</p><p>就是那么简单几句 我办不到</p><p>整颗心悬在半空</p><p>我只能够 远远看着</p><p>这些我都做得到</p><p>但那个人已经不是我</p><p>──周杰伦 开不了口</p>
          </div>]]></content>
      <categories>
        <category>听歌</category>
      </categories>
      <tags>
        <tag>听歌</tag>
      </tags>
  </entry>
  <entry>
    <title>龙卷风</title>
    <url>/2018/09/29/%E9%BE%99%E5%8D%B7%E9%A3%8E/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><blockquote class="blockquote-center">
            <i class="fa fa-quote-left"></i>
            <p>爱情走的太快就像龙卷风</p>
<p>──周杰伦 龙卷风</p>

            <i class="fa fa-quote-right"></i>
          </blockquote>

<a id="more"></a>

<blockquote class="blockquote-center">
            <i class="fa fa-quote-left"></i>
            <p>爱像一阵风</p>
<p>吹完它就走</p>
<p>这样的节奏</p>
<p>谁都无可奈何</p>
<p>没有你以后</p>
<p>我灵魂失控</p>
<p>黑云在降落</p>
<p>我被它拖着走</p>
<p>静静悄悄默默离开</p>
<p>陷入了危险边缘baby~</p>
<p>我的世界已狂风暴雨</p>
<p>oh~爱情来的太快就像龙卷风</p>
<p>离不开暴风圈来不及逃</p>
<p>我不能再想我不能再想</p>
<p>我不我不我不能~</p>
<p>爱情走的太快就像龙卷风</p>
<p>不能承受我已无处可躲</p>
<p>我不要再想我不要再想</p>
<p>我不我不我不要再想你</p>
<p>不知不觉你已经离开我</p>
<p>不知不觉我跟了这节奏</p>
<p>后知后觉又过了一个秋</p>
<p>后知后觉我该好好生活</p>
<p>静静悄悄默默离开</p>
<p>陷入了危险边缘baby~</p>
<p>我的世界已狂风暴雨</p>
<p>oh~爱情来的太快就像龙卷风</p>
<p>离不开暴风圈来不及逃</p>
<p>我不能再想</p>
<p>我不能再想</p>
<p>我不我不我不能</p>
<p>爱情走的太快就像龙卷风</p>
<p>不能承受我已无处可躲</p>
<p>我不要再想</p>
<p>我不要再想</p>
<p>我不我不我不要再想你</p>
<p>爱情来的太快就像龙卷风</p>
<p>离不开暴风圈来不及逃</p>
<p>我不能再想</p>
<p>我不能再想</p>
<p>我不我不我不能</p>
<p>爱情走的太快就像龙卷风</p>
<p>不能承受我已无处可躲</p>
<p>我不要再想</p>
<p>我不要再想</p>
<p>我不我不我不要再想你</p>
<p>不知不觉你已经离开我</p>
<p>不知不觉我跟了这节奏</p>
<p>后知后觉又过了一个秋</p>
<p>后知后觉我该好好生活</p>
<p>不知不觉你已经离开我</p>
<p>不知不觉我跟了这节奏</p>
<p>后知后觉又过了一个秋</p>
<p>后知后觉我该好好生活</p>
<p>不知不觉你已经离开我</p>
<p>不知不觉我跟了这节奏</p>
<p>后知后觉后知后觉</p>
<p>──周杰伦 龙卷风</p>

            <i class="fa fa-quote-right"></i>
          </blockquote>

<div class="note danger">
            <p>哈哈</p>
          </div>]]></content>
      <categories>
        <category>难过</category>
      </categories>
      <tags>
        <tag>难过</tag>
      </tags>
  </entry>
  <entry>
    <title>睡吧</title>
    <url>/2018/09/26/%E7%9D%A1%E5%90%A7/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>明早还要上班呢，不是读书的时候了，你已经没有失眠的资格了，傻彪。</p>
]]></content>
      <categories>
        <category>难过</category>
      </categories>
      <tags>
        <tag>难过</tag>
      </tags>
  </entry>
  <entry>
    <title>好孤单</title>
    <url>/2018/09/25/%E5%A5%BD%E5%AD%A4%E5%8D%95/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>我寂寞寂寞就好</p>
]]></content>
      <categories>
        <category>难过</category>
      </categories>
      <tags>
        <tag>难过</tag>
      </tags>
  </entry>
  <entry>
    <title>冷</title>
    <url>/2018/09/24/%E5%86%B7/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>有点冷，好想要一个拥抱。</p>
]]></content>
      <categories>
        <category>难过</category>
      </categories>
      <tags>
        <tag>难过</tag>
      </tags>
  </entry>
  <entry>
    <title>我是一个念旧的人</title>
    <url>/2018/09/24/%E6%88%91%E6%98%AF%E4%B8%80%E4%B8%AA%E5%BF%B5%E6%97%A7%E7%9A%84%E4%BA%BA/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>旧的人，旧的事，旧的东西，我总是特别喜欢，因为里面包含了满满的回忆。</p>
<p>初中朋友送我的生日礼物，现在都还在呢。</p>
]]></content>
      <categories>
        <category>难过</category>
      </categories>
      <tags>
        <tag>难过</tag>
      </tags>
  </entry>
  <entry>
    <title>失眠了</title>
    <url>/2018/09/23/%E5%A4%B1%E7%9C%A0%E4%BA%86/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>上班怎么办哦，以前失眠好歹是在大学里。</p>
]]></content>
      <categories>
        <category>难受</category>
      </categories>
      <tags>
        <tag>难受</tag>
      </tags>
  </entry>
  <entry>
    <title>记一件傻逼的事情</title>
    <url>/2018/09/18/%E8%AE%B0%E4%B8%80%E4%BB%B6%E5%82%BB%E9%80%BC%E7%9A%84%E4%BA%8B%E6%83%85/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>哈哈哈，刚刚拿着泡面和电热水壶去厕所，然后出来把水烧好，同学去上厕所，在马桶盖上发现了我的泡面。</p>
<p>哈哈哈哈哈哈哈哈哈哈哈</p>
]]></content>
      <categories>
        <category>傻逼</category>
      </categories>
      <tags>
        <tag>我是傻逼</tag>
      </tags>
  </entry>
  <entry>
    <title>初恋这件小事</title>
    <url>/2018/09/17/%E5%88%9D%E6%81%8B%E8%BF%99%E4%BB%B6%E5%B0%8F%E4%BA%8B/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>上初中那会，因为有暗恋的人，但是又没敢表白，所以没能谈一段恋爱，因为我喜欢一个人的时候，心里实在装不下其他人的位置了。</p>
<p>等到了上高中那会，班上的英语课代表喜欢我，对我很好，好到直男的我都感受到了。但是因为对她没有感觉，就一直装傻充愣着，装到她闺蜜都受不了了，对我说，她都这么明显了你还不懂吗。可惜当时的我只是把她对我的喜欢，当作一种炫耀的资本，伤害到了她。</p>
<p>等到了大学的时候，我特别憧憬能谈一段校园恋爱，我从刚进校园就开始憧憬着谈个女朋友，一直嚷嚷到大四。期间虽然也有女生喜欢我，但我没有答应，因为我对她实在没感觉，如果我不是初恋还在的话，或许会答应她吧。</p>
<p>在我的青春里，没有过电视或电影里的那些剧情，所以我看那些电影从来都没有感触。也正是因为我没有在青春期的时候谈恋爱，等我长大了。初恋还在，我就觉得既然初恋还在，那我就好好珍惜吧。找一个最爱的人，好好的对她，好好的谈一场恋爱。在我心里初恋的地位就是这么神圣，或许以后会遇见别的女生，但初恋是心里永远也抹不去的的存在。</p>
<p>2018/09/18 update</p>
<p>没啦，没啦，不再更新啦。</p>
]]></content>
      <tags>
        <tag>我独自生活</tag>
      </tags>
  </entry>
  <entry>
    <title>出去玩～</title>
    <url>/2018/09/15/%E5%87%BA%E5%8E%BB%E7%8E%A9%EF%BD%9E/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>本来想去看看手表和iPhone的，结果都没有出新品，遗憾滴回来啦。</p>
]]></content>
      <tags>
        <tag>我独自生活</tag>
      </tags>
  </entry>
  <entry>
    <title>最难的就是遇见对的人</title>
    <url>/2018/09/04/%E6%9C%80%E9%9A%BE%E7%9A%84%E5%B0%B1%E6%98%AF%E9%81%87%E8%A7%81%E5%AF%B9%E7%9A%84%E4%BA%BA/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>全国有13亿人了，对于爱情而言，最难的部分是遇见那个对的人吧。</p>
<p>以前写作业，考试感觉天都要塌下来了，现在回头看看，发现也不过如此。现在感觉很难的事情，但其实度过去之后，再回头看看会发现也没有什么嘛。反倒是会增添一段难忘的经历，以后可以一边回忆一边感慨。</p>
]]></content>
      <tags>
        <tag>我独自生活</tag>
      </tags>
  </entry>
  <entry>
    <title>人生啊</title>
    <url>/2018/09/01/%E4%BA%BA%E7%94%9F%E5%95%8A/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>我寂寞寂寞就好</p>
]]></content>
      <tags>
        <tag>我独自生活</tag>
      </tags>
  </entry>
  <entry>
    <title>ti8</title>
    <url>/2018/08/26/ti8/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>难受啊，LGD居然输了。</p>
<p>唉，整个人都不好了。</p>
]]></content>
      <tags>
        <tag>我独自生活</tag>
      </tags>
  </entry>
  <entry>
    <title>哇，晕车真难受</title>
    <url>/2018/08/23/%E5%93%87%EF%BC%8C%E6%99%95%E8%BD%A6%E7%9C%9F%E9%9A%BE%E5%8F%97/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>这一个星期，晕车就没好过哦。每天回家要死一样，难受。</p>
]]></content>
      <tags>
        <tag>我独自生活</tag>
      </tags>
  </entry>
  <entry>
    <title>悲伤，又开始晕车了</title>
    <url>/2018/08/22/%E6%82%B2%E4%BC%A4%EF%BC%8C%E5%8F%88%E5%BC%80%E5%A7%8B%E6%99%95%E8%BD%A6%E4%BA%86/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>还记得小时候，最最开始的时候我是晕车的，后来有段时间又不晕车了。我以为自己好了，结果后来又晕车了。之后就这样一直反反复复的，很难受最近又开始晕车了，超级难受的。</p>
]]></content>
      <tags>
        <tag>我独自生活</tag>
      </tags>
  </entry>
  <entry>
    <title>头晕加晕车</title>
    <url>/2018/08/20/%E5%A4%B4%E6%99%95%E5%8A%A0%E6%99%95%E8%BD%A6/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>真的难受，差点吐了，睡觉。</p>
]]></content>
      <tags>
        <tag>我独自生活</tag>
      </tags>
  </entry>
  <entry>
    <title>想购物的冲动</title>
    <url>/2018/08/19/%E6%83%B3%E8%B4%AD%E7%89%A9%E7%9A%84%E5%86%B2%E5%8A%A8/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>哈哈哈，凭借我强大的意志力克制住了。还是要好好赚钱呀，妈妈买东西，自己不能乱花钱哦。</p>
]]></content>
      <tags>
        <tag>我独自生活</tag>
      </tags>
  </entry>
  <entry>
    <title>好想买游戏机</title>
    <url>/2018/08/12/%E5%A5%BD%E6%83%B3%E4%B9%B0%E6%B8%B8%E6%88%8F%E6%9C%BA/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>其实有好多想买的东西，只能推后了。</p>
]]></content>
      <tags>
        <tag>我独自生活</tag>
      </tags>
  </entry>
  <entry>
    <title>送妈妈的礼物清单</title>
    <url>/2018/08/11/%E9%80%81%E5%A6%88%E5%A6%88%E7%9A%84%E7%A4%BC%E7%89%A9%E6%B8%85%E5%8D%95/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>给妈妈买礼物也提上日程啦，一晃妈妈也50岁了，想好好孝敬妈妈，不想等到子欲养而亲不待的那天。</p>
<ul>
<li>化妆品，到时候问问女生，女生比较懂。</li>
<li>保健品，这个得买国外的，到时候好好看看。</li>
<li>包，心里有打算啦。法国或者英国海淘，暂定安达易，奢包无忧-英线，或者</li>
<li>衣服，买些牌子，显年轻的。</li>
<li>零花钱，得给妈妈钱，让妈妈开始享福啦，为了这个家省吃俭用一辈子</li>
<li>旅游，妈妈和我一样还没出过国，去过最远的地方，上次来杭州看我是妈妈为数不多的旅行了。等妈妈退休，带着妈妈一起去国外旅行。</li>
</ul>
]]></content>
      <categories>
        <category>妈妈</category>
      </categories>
      <tags>
        <tag>我独自生活</tag>
      </tags>
  </entry>
  <entry>
    <title>想给妈妈买礼物了</title>
    <url>/2018/08/11/%E6%83%B3%E7%BB%99%E5%A6%88%E5%A6%88%E4%B9%B0%E7%A4%BC%E7%89%A9%E4%BA%86/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>突然想起了妈妈。妈妈总是付出很多，辛苦了半辈子。</p>
<p>感觉自己出来一年，尽找家里人要钱了，也没给妈妈买过什么，明明妈妈赚钱很辛苦，比我辛苦多了，8月初的时候妈妈还轻微中暑了，去医院挂水。</p>
<p>当初还没工作的时候，总想着等我以后工作了，就要给妈妈买东西，让妈妈也能享享福。唉，一晃出来一年，还要找家里人要钱，每次找妈妈要的钱比她一个月工资还多了，一想到这些钱妈妈要辛苦工作一个月，我心里就好难过。</p>
<p>在这个世界上，我最爱的人就是妈妈。我希望妈妈能够不那么辛苦，想给妈妈买好多好多东西，妈妈也是女人啊，女人都爱美，只是因为妈妈要养家，所以从来也不给自己买衣服，买化妆品。感觉自己好不孝顺，我要更加努力，给妈妈更好的生活。</p>
]]></content>
      <categories>
        <category>妈妈</category>
      </categories>
      <tags>
        <tag>我独自生活</tag>
      </tags>
  </entry>
  <entry>
    <title>爬起来写博客</title>
    <url>/2018/08/09/%E7%88%AC%E8%B5%B7%E6%9D%A5%E5%86%99%E5%8D%9A%E5%AE%A2/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>差点忘记写博客，还好没有过十二点，赶紧从床上爬起来。感觉明天起不来的样子了， 还好明天就周五了，周末可以休息。不用过周末休息没事做诶。</p>
]]></content>
      <tags>
        <tag>我独自生活</tag>
      </tags>
  </entry>
  <entry>
    <title>嗯</title>
    <url>/2018/08/06/%E5%97%AF/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>累</p>
]]></content>
      <tags>
        <tag>我独自生活</tag>
      </tags>
  </entry>
  <entry>
    <title>无聊</title>
    <url>/2018/08/05/%E6%97%A0%E8%81%8A/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>除了可以睡懒觉，跟平常没什么区别。</p>
]]></content>
      <tags>
        <tag>我独自生活</tag>
      </tags>
  </entry>
  <entry>
    <title>键盘坏掉了</title>
    <url>/2018/08/04/%E9%94%AE%E7%9B%98%E5%9D%8F%E6%8E%89%E4%BA%86/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>哭，电脑有几个键失灵了，很难受诶，都不知道去哪修，修的话也没电脑用，难受。</p>
]]></content>
      <tags>
        <tag>我独自生活</tag>
      </tags>
  </entry>
  <entry>
    <title>懵</title>
    <url>/2018/08/02/%E6%87%B5/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>不知道又怎么了，过完明天能休息下了，好累。</p>
]]></content>
      <tags>
        <tag>我独自生活</tag>
      </tags>
  </entry>
  <entry>
    <title>哈哈</title>
    <url>/2018/07/28/%E5%93%88%E5%93%88/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>这感觉真棒</p>
]]></content>
      <tags>
        <tag>我独自生活</tag>
      </tags>
  </entry>
  <entry>
    <title>我要睡懒觉</title>
    <url>/2018/07/27/%E6%88%91%E8%A6%81%E7%9D%A1%E6%87%92%E8%A7%89/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>感觉回到了高中时期，每天起早贪黑的，我明天要睡个懒觉～</p>
]]></content>
      <tags>
        <tag>我独自生活</tag>
      </tags>
  </entry>
  <entry>
    <title>别是一番滋味在心头</title>
    <url>/2018/07/24/%E5%88%AB%E6%98%AF%E4%B8%80%E7%95%AA%E6%BB%8B%E5%91%B3%E5%9C%A8%E5%BF%83%E5%A4%B4/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>睡吧</p>
]]></content>
      <tags>
        <tag>我独自生活</tag>
      </tags>
  </entry>
  <entry>
    <title>静不下心</title>
    <url>/2018/07/23/%E9%9D%99%E4%B8%8D%E4%B8%8B%E5%BF%83/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>坑爹的海康，还没有消息。剩下的两个offer要去哪一个呢。</p>
]]></content>
      <tags>
        <tag>我独自生活</tag>
      </tags>
  </entry>
  <entry>
    <title>最后滴宁静</title>
    <url>/2018/07/22/%E6%9C%80%E5%90%8E%E6%BB%B4%E5%AE%81%E9%9D%99/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>感觉像薛定谔的猫，明天结果出来后以前都不一样了。</p>
]]></content>
      <tags>
        <tag>我独自生活</tag>
      </tags>
  </entry>
  <entry>
    <title>难得的休息</title>
    <url>/2018/07/21/%E9%9A%BE%E5%BE%97%E7%9A%84%E4%BC%91%E6%81%AF/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>希望周一有好消息，期待又担心。</p>
]]></content>
      <tags>
        <tag>我独自生活</tag>
      </tags>
  </entry>
  <entry>
    <title>面试第五天</title>
    <url>/2018/07/20/%E9%9D%A2%E8%AF%95%E7%AC%AC%E4%BA%94%E5%A4%A9/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>有两个offer了，开心呢。</p>
]]></content>
      <tags>
        <tag>我独自生活</tag>
      </tags>
  </entry>
  <entry>
    <title>面试第四天</title>
    <url>/2018/07/19/%E9%9D%A2%E8%AF%95%E7%AC%AC%E5%9B%9B%E5%A4%A9/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>今天拿下了第一个offer，可以稍微放心了。以更加轻松的心态去面对接下来的面试吧。</p>
]]></content>
      <tags>
        <tag>我独自生活</tag>
      </tags>
  </entry>
  <entry>
    <title>面试第三天</title>
    <url>/2018/07/18/%E9%9D%A2%E8%AF%95%E7%AC%AC%E4%B8%89%E5%A4%A9/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>海康面试感觉有戏哦，希望能够进去吧！</p>
]]></content>
      <tags>
        <tag>我独自生活</tag>
      </tags>
  </entry>
  <entry>
    <title>面试第二天</title>
    <url>/2018/07/17/%E9%9D%A2%E8%AF%95%E7%AC%AC%E4%BA%8C%E5%A4%A9/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>今天是面试的第二天啦，有些经验上的东西确实需要时间去积累，不是光看书就能学会的。还是经验太少了，不然面试的时候会更加的从容吧。明天是最重要的一场面试呢，要是能面上就好了，工资多福利好，加班也多。</p>
]]></content>
      <tags>
        <tag>我独自生活</tag>
      </tags>
  </entry>
  <entry>
    <title>面试第一天</title>
    <url>/2018/07/16/%E9%9D%A2%E8%AF%95%E7%AC%AC%E4%B8%80%E5%A4%A9/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>开始面试的第一天，总的来说还可以啦，下午的电话面试过了。然后也把一周的面试安排好啦，大概有7场的样子，满满当当的。希望这周能面上吧，实在是不想找工作啦。</p>
]]></content>
      <tags>
        <tag>我独自生活</tag>
      </tags>
  </entry>
  <entry>
    <title>分叉路口</title>
    <url>/2018/07/12/%E5%88%86%E5%8F%89%E8%B7%AF%E5%8F%A3/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>彷佛站在了一个分叉路口，不知道如何前进，是花3000逞一时之快，还是忍气吞声呢，不管怎么选择找工作是重中之重。</p>
<p>算啦，不谈这些不开心的。</p>
]]></content>
      <tags>
        <tag>我独自生活</tag>
      </tags>
  </entry>
  <entry>
    <title>一个人一个人</title>
    <url>/2018/07/07/%E4%B8%80%E4%B8%AA%E4%BA%BA%E4%B8%80%E4%B8%AA%E4%BA%BA/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>我一点都不无聊，咿呀咿呀哟～</p>
]]></content>
      <tags>
        <tag>我独自生活</tag>
      </tags>
  </entry>
  <entry>
    <title>累死了</title>
    <url>/2018/06/30/%E7%B4%AF%E6%AD%BB%E4%BA%86/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>好累</p>
]]></content>
      <tags>
        <tag>我独自生活</tag>
      </tags>
  </entry>
  <entry>
    <title>明天要搬家咯</title>
    <url>/2018/06/29/%E6%98%8E%E5%A4%A9%E8%A6%81%E6%90%AC%E5%AE%B6%E5%92%AF/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script>]]></content>
      <tags>
        <tag>我独自生活</tag>
      </tags>
  </entry>
  <entry>
    <title>看房</title>
    <url>/2018/06/26/%E7%9C%8B%E6%88%BF/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>约了8点去看房，希望今天能敲定这件事，然后这周搬家，接下来一心一意找工作。</p>
<p>看完房回来更新。</p>
]]></content>
      <tags>
        <tag>我独自生活</tag>
      </tags>
  </entry>
  <entry>
    <title>江南皮革厂倒闭了</title>
    <url>/2018/06/20/%E6%B1%9F%E5%8D%97%E7%9A%AE%E9%9D%A9%E5%8E%82%E5%80%92%E9%97%AD%E4%BA%86/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>公司倒闭了，要准备简历开始复习找工作啦，打破了我原有的计划，而且时间是比较仓促，对自己来说也是一道坎吧，希望跨过去之后一些顺利。</p>
]]></content>
      <tags>
        <tag>我独自生活</tag>
      </tags>
  </entry>
  <entry>
    <title>今年规划</title>
    <url>/2018/05/16/%E4%BB%8A%E5%B9%B4%E8%A7%84%E5%88%92/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>今年规划</p>
<a id="more"></a>

<ul>
<li>年底回武汉</li>
<li>学好英语</li>
<li>养一只狗</li>
<li>照顾好自己</li>
<li>对父母好</li>
<li>珍惜朋友</li>
</ul>
]]></content>
      <tags>
        <tag>计划</tag>
      </tags>
  </entry>
  <entry>
    <title>行</title>
    <url>/2018/05/06/%E8%A1%8C/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script>]]></content>
  </entry>
  <entry>
    <title>服了</title>
    <url>/2018/05/06/%E5%94%89%202/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script>]]></content>
      <categories>
        <category>恋爱</category>
      </categories>
      <tags>
        <tag>烦</tag>
      </tags>
  </entry>
  <entry>
    <title>4月规划</title>
    <url>/2018/04/07/4%E6%9C%88%E8%A7%84%E5%88%92/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><blockquote class="blockquote-center">
            <i class="fa fa-quote-left"></i>
            <p>时间就象海绵里的水一样，只要你愿挤，总还是有的。</p>
<p>──鲁迅</p>

            <i class="fa fa-quote-right"></i>
          </blockquote>

<a id="more"></a>

<p>制定4月份的规划</p>
<ul>
<li><input disabled type="checkbox"> 4月份顺利转正</li>
</ul>
<ul>
<li><input disabled type="checkbox"> 深入Java虚拟机看完，每天1个小时</li>
</ul>
<ul>
<li><input disabled type="checkbox"> 制定旅游攻略，苏州，南京</li>
</ul>
]]></content>
      <tags>
        <tag>规划</tag>
      </tags>
  </entry>
</search>
